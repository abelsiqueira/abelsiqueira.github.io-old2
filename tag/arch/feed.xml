<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Abel Soares Siqueira</title>
        <link>https://abelsiqueira.github.io/tag/arch/feed.xml</link>
        <description>RSS feed for abelsiqueira.github.io</description>
        <lastBuildDate>Tue, 18 Oct 2022 22:06:22 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/nuxt-community/feed-module</generator>
        <category>Nuxt.js</category>
        <item>
            <title><![CDATA[New computer at work]]></title>
            <link>https://abelsiqueira.github.io/blog/2015-11-16-new-computer-at-work</link>
            <guid>https://abelsiqueira.github.io/blog/2015-11-16-new-computer-at-work</guid>
            <pubDate>Mon, 16 Nov 2015 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[
# New computer at work

I just got a new notebook at work. This is a HP computer, with a AMD a10-4600M
processor, 4GB of RAM and 320GB of HD space.
I have a personal notebook with a similar configuration and my work desktop also
has a similar configuration, so this isn't a great improvement.
However, we're gonna have an additional monitor, so this is good enough.
Also, I'll leave the other one as the always-on screen+irssi computer.
Let's try to use it. Talk to me again in a week.

I'll leave a list of commands I used to install Archlinux on it for future
reference. Maybe someday I'll comment it, but most things here can be found on
[the beginners' guide](https://wiki.archlinux.org/index.php/beginners'_guide).

```
ls /sys/firmware/efi/efivars
ip link set enp1s0 down
netctl start MYCONFIGURATION
mkparted /dev/sda
mklabel gpt
parted /dev/sda
(parted) mkpart primary ext4 1MiB 100MiB
(parted) set 1 boot on
(parted) mkpart primary ext4 100MiB 30GiB
(parted) mkpart primary linux-swap 30GiB 38GiB
(parted) mkpart primary ext4 38GiB 100%
(parted) quit
mkfs.ext4 /dev/sda1
mkfs.ext4 /dev/sda2
mkfs.ext4 /dev/sda4
mkswap /dev/sda3
swapon /dev/sda3
mount /dev/sda2 /mnt
mkdir -p /mnt/{boot,home}
mount /dev/sda1 /mnt/boot
mount /dev/sda4 /mnt/home
cd /etc/pacman.d
cp mirrorlist{,.bk}
#grep Brazil -A 1 mirrorlist.bk | sed '/--/d' > mirrorlist
grep c3sl -B 1 mirrorlist.bk > mirrorlist
pacstrap -i /mnt base base-devel vim screen git
genfstab -U /mnt > /mnt/etc/fstab
arch-chroot /mnt /bin/bash
vim /etc/locale.gen # Uncomment en_US.UTF-8 and others
locate-gen
echo LANG=en_US.UTF-8 > /etc/locale.conf
ln -s /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime
hwclock --systohc --utc
mkinitcpio -p linux
pacman -S syslinux gptfdisk
syslinux-install_update -i -a -m
vim /boot/syslinux/syslinux.cfg
echo myhostname > /etc/hostname
pacman -S iw wpa_supplicant dialog
passwd
exit # From the chroot
cp /etc/netctl/ufpr-static /mnt/etc/netctl/ufpr-static
umount -R /mnt
reboot
```

```
netctl start ufpr-static
pacman -S xorg-server i3-wm i3lock i3status xorg-xinit xorg-twm xterm dmenu
pacman -S xf86-input-synaptics
useradd abel -g users -G wheel -m -s /bin/bash
passwd abel
visudo
# Log as abel
startx # possibly pkill X
# Download b43-firmware and install it
# Rejoice
```
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mudando de HD]]></title>
            <link>https://abelsiqueira.github.io/blog/2014-12-19-mudando-de-hd</link>
            <guid>https://abelsiqueira.github.io/blog/2014-12-19-mudando-de-hd</guid>
            <pubDate>Fri, 19 Dec 2014 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[
# Mudando de HD

Ontem eu acabei de montar um computador novo.
Esse computador é um upgrade do meu, e o meu passaria para a Kally.
No entanto, eu não gostaria de perder a minha instalação dor Arch,
nem de ficar com o HD antigo, então decidi tentar copiar as partições.

**Nota: Não sei a aplicabilidade destes comandos para outras distribuições.**

**Nota: Você também poderia fazer o que fiz, usando o `dd`, mas eu preferi
evitar.**

Inicialmente, prepare um pendrive (ou sua mídia favorita)
com o iso do Archlinux.
Talvez esses passos possam ser feitos direto da instalação do HD velho,
mas eu preferi não testar.

Faça o boot pelo pendrive.
Verifique que os dois HDs foram identificados e
**atente-se com a numeração sdx do HD**. No meu, o principal era sda, mas quando
eu instalei o outro HD, o novo ficou como sda e o antigo mudou para sdb.
Primeiro particione o HD novo. Eu separei as mesmas partições que o HD antigo,
mas a numeração não foi a mesma, nem o tamanho.
Eu costumo usar 3 partições `/`, `/boot` e `/home`.
Então, depois de particionar o HD novo com a quantidade de partições necessárias
para essas partições, com espaço suficiente para os dados que haviam nas
partições antigas, eu formatei cada partição com o tipo de dado necessário
(usando o `mkfs.ext4`).
Além disso, eu também tinha um swap e queria uma partição compartilhada entre
Windows e Linux, então também "formatei" o swap (`mkswap`) e essa partição
(`mkfs.ntfs`).
Depois disso, eu montei o `/` de cada partição e copiei os dados de uma partição
para outra, com o comando

```
cp -a /mnt/velho/. /mnt/novo/
```

Depois montei o `/home` e `/boot` e copiei o counteúdo de cada um.

```
cp -a /mnt/velho/home/. /mnt/novo/home/
cp -a /mnt/velho/boot/. /mnt/novo/boot/
```

_Nota: (Imagino que seja possível montar tudo, e depois copiar tudo apenas com o
primeiro comando)_.

Nesse momento, o HD já tem os dados do sistema novo. Então, eu segui,
seletivamente, os passos do [guia do
iniciante](https://wiki.archlinux.org/index.php/beginners%27_guide#Generate_an_fstab)
do Archlinux, a partir do "Generate an fstab". Lembre-se de ligar o swap e
montar a partição ntfs, se quiser que eles sejam preparados no boot.
O comando é

```
# genfstab -U -p /mnt/novo > /mnt/novo/etc/fstab
```

Daí, entrei no sistema novo, com

```
# arch-chroot /mnt/novo /bin/bash
```

e pulei para "Create an initial ramdisk environment".
Não sei se era necessário fazer isso,
mas me parecia uma boa coisa a se fazer.

```
# mkinitcpio -p linux
```

Enfim, atualizei o `/boot/syslinux/syslinux.cfg` para refletir a nova posição do
`/`, e rodei

```
# syslinux-install_update -i -a -m
```

Depois, só sair, desmontar e rebootar

```
# exit
# umount -R /mnt/novo /mnt/velho
# reboot
```

Já escrevi isso do computador novo.
]]></content:encoded>
        </item>
    </channel>
</rss>