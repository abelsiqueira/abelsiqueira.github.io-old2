__NUXT_JSONP__("/blog/2015-02-06-cutestjl", (function(a,b,c,d,e,f,g,h,i,j,k,l){return {data:[{page:{slug:"2015-02-06-cutestjl",title:k,date:"2015-02-06",tags:["cutest","julia"],toc:[],body:{type:"root",children:[{type:b,tag:"h1",props:{id:"cutestjl"},children:[{type:b,tag:c,props:{href:"#cutestjl",ariaHidden:"true",tabIndex:-1},children:[{type:b,tag:"span",props:{className:["icon","icon-link"]},children:[]}]},{type:a,value:k}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"About an year ago,\n"},{type:b,tag:c,props:{href:"http:\u002F\u002Frgaiacs.com\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"Raniere"}]},{type:a,value:"\nstarted working on a interface for\n"},{type:b,tag:c,props:{href:"http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"CUTEst"}]},{type:a,value:".\nHe decided to create "},{type:b,tag:c,props:{href:"https:\u002F\u002Fgithub.com\u002Flpoo\u002Fugly",rel:[f,g,h],target:i},children:[{type:a,value:"ugly"}]},{type:a,value:",\na repository for CUTEst, but following the Unix procedure for\nbuilding packages ("},{type:b,tag:j,props:{},children:[{type:a,value:".\u002Fconfigure, make, make install"}]},{type:a,value:").\nAlso with ugly, he wanted to enable building a shared library\nto be used with Julia.\nThis approach worked, but maintaining it is troublesome,\nsince it would require updating and testing of ugly for every\nupdate of CUTEst."}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"What I decided to do was find a way to create a shared library\nfrom a working CUTEst installation.\nThis focuses on another principle: passing the blame, er,\nI mean, modularity.\nMy package would simply take a working CUTEst and make a\nworking shared library from it.\nIt also served of downloading and installing a new CUTEst\ninstallation, since this would be required for testing.\nThe work can be found at\n"},{type:b,tag:c,props:{href:"http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fcutest-julia-installer",rel:[f,g,h],target:i},children:[{type:a,value:"cutest-julia-installer"}]},{type:a,value:"."}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"The second thing Raniere worked was the interface itself,\nwhich is a module\u002Fpackage for Julia that enables\nbuilding a problem from its name,\nretrieving its parameters,\nand using its mathematical functions\n(objective function, gradient, Hessian, constraints,\nJacobian, and so on).\nI continued this work, changing the way the problem is built\n(to use my shared library),\nand translating the core functions to Julia.\nWith these additions, the usual functions on CUTEst can be\ncalled with little change in Julia."}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"The next step is to facilitate the use of CUTEst functions\nby creating higher-level interfaces.\nSo, instead of manually verifying if problem is\nconstrained or not, and then calling\n"},{type:b,tag:j,props:{},children:[{type:a,value:"cfn(st, n, m, x, f, c)"}]},{type:a,value:" or "},{type:b,tag:j,props:{},children:[{type:a,value:"ufn(st, n, x, f)"}]},{type:a,value:",\nto get the objective function value,\none might simply call\n"},{type:b,tag:j,props:{},children:[{type:a,value:"f = obj_fun(prob, x)"}]},{type:a,value:".\nThis should probably be slower,\nif the user, for instance, ends up calling two functions\ninstead of one, but if it increases development time,\nthen it has server its purpose."}]}]},dir:"\u002Fblog",path:"\u002Fblog\u002F2015-02-06-cutestjl",extension:".md",createdAt:l,updatedAt:l,bodyPlainText:"\n# CUTEst.jl\n\nAbout an year ago,\n[Raniere](http:\u002F\u002Frgaiacs.com\u002F)\nstarted working on a interface for\n[CUTEst](http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki\u002F).\nHe decided to create [ugly](https:\u002F\u002Fgithub.com\u002Flpoo\u002Fugly),\na repository for CUTEst, but following the Unix procedure for\nbuilding packages (`.\u002Fconfigure, make, make install`).\nAlso with ugly, he wanted to enable building a shared library\nto be used with Julia.\nThis approach worked, but maintaining it is troublesome,\nsince it would require updating and testing of ugly for every\nupdate of CUTEst.\n\nWhat I decided to do was find a way to create a shared library\nfrom a working CUTEst installation.\nThis focuses on another principle: passing the blame, er,\nI mean, modularity.\nMy package would simply take a working CUTEst and make a\nworking shared library from it.\nIt also served of downloading and installing a new CUTEst\ninstallation, since this would be required for testing.\nThe work can be found at\n[cutest-julia-installer](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fcutest-julia-installer).\n\nThe second thing Raniere worked was the interface itself,\nwhich is a module\u002Fpackage for Julia that enables\nbuilding a problem from its name,\nretrieving its parameters,\nand using its mathematical functions\n(objective function, gradient, Hessian, constraints,\nJacobian, and so on).\nI continued this work, changing the way the problem is built\n(to use my shared library),\nand translating the core functions to Julia.\nWith these additions, the usual functions on CUTEst can be\ncalled with little change in Julia.\n\nThe next step is to facilitate the use of CUTEst functions\nby creating higher-level interfaces.\nSo, instead of manually verifying if problem is\nconstrained or not, and then calling\n`cfn(st, n, m, x, f, c)` or `ufn(st, n, x, f)`,\nto get the objective function value,\none might simply call\n`f = obj_fun(prob, x)`.\nThis should probably be slower,\nif the user, for instance, ends up calling two functions\ninstead of one, but if it increases development time,\nthen it has server its purpose.\n"},prev:{slug:"2015-02-25-apresentacao-no-vii-simposio-de-analise-numerica-e-otimizacao-ufpr",title:"Apresentação no VII Simpósio de Análise Numérica e Otimização - UFPR"},next:{slug:"2015-01-22-a-study-in-julia",title:"A Study in Julia"}}],fetch:{},mutations:void 0}}("text","element","a","\n","p","nofollow","noopener","noreferrer","_blank","code","CUTEst.jl","2022-12-23T23:04:30.335Z")));