__NUXT_JSONP__("/blog/2015-02-25-apresentacao-no-vii-simposio-de-analise-numerica-e-otimizacao-ufpr", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u){return {data:[{page:{slug:"2015-02-25-apresentacao-no-vii-simposio-de-analise-numerica-e-otimizacao-ufpr",title:r,date:"2015-02-25",tags:["work","presentation","tools","julia"],toc:[],body:{type:"root",children:[{type:b,tag:"h1",props:{id:"apresentação-no-vii-simpósio-de-análise-numérica-e-otimização---ufpr"},children:[{type:b,tag:l,props:{href:"#apresenta%C3%A7%C3%A3o-no-vii-simp%C3%B3sio-de-an%C3%A1lise-num%C3%A9rica-e-otimiza%C3%A7%C3%A3o---ufpr",ariaHidden:"true",tabIndex:-1},children:[{type:b,tag:"span",props:{className:["icon","icon-link"]},children:[]}]},{type:a,value:r}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:"No dia 24 de Fevereiro de 2015 aconteceu o (primeiro dia do) VII Simpósio de\nAnálise Numérica e Otimização.\nParticipei deste congresso fazendo uma apresentação sobre\n"},{type:b,tag:"nuxt-link",props:{to:"\u002Fblog\u002F2015-02-25-vii-simposio.pdf"},children:[{type:a,value:"Ferramentas Computacionais para\nPesquisadores"}]},{type:a,value:"\n(ver "},{type:b,tag:l,props:{href:"http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fpres-ferramentas-computacionais",rel:[m,n,o],target:p},children:[{type:a,value:"código"}]},{type:a,value:")."}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:"Nesta apresentação, introduzo algumas ferramentas que considero bastante\nimportantes para pesquisadores, principalmente da área de matemática\ncomputacional.\nUm resumo do que apresento é"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Aprenda outras linguagens. Recomendo, por exemplo, conhecer Python ou Ruby,"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Shell e Makefile. Com essas ferramentas já é possível automatizar testes e\nfazer scripts com uso variado. Makefile, por exemplo, é uma das maneiras\nmais usadas de se instalar programas (no Unix).\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Conheça a linguagem "},{type:b,tag:l,props:{href:"http:\u002F\u002Fwww.julialang.org",rel:[m,n,o],target:p},children:[{type:a,value:"Julia"}]},{type:a,value:"."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"É uma linguagem com foco na matemática computacional, considerando ainda que\nvocê irá querer utilizar código em C e Fortran, e com sintaxe parecido com a\nde MatLab\u002FOctave. É uma linguagem nova, mas tem potencial para ser o próximo\nconcorrente do MatLab\u002FOctave, e é livre.\n- Dentro do Julia, conheça o [JuliaOpt](http:\u002F\u002Fwww.juliaopt.org), que é\num grupo que está desenvolvendo ferramentas de otimização em Julia.\nDesde interfaces para softwares conhecidos, até linguagens de modelagem,\npassando por implementações de métodos de otimização não-linear, tanto\npuramente em Julia, quanto utilizando códigos de baixo nível.\n- Também anunciei que estamos trabalhando no\n[CUTEst.jl](http:\u002F\u002Fgithub.com\u002Foptimizers\u002FCUTEst.jl), uma interface para o\n[CUTEst](http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki).\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Escolha um editor e um ambiente de desenvolvimento."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Sugiro ver algumas opções (Vim, Emacs, Atom, Sublime Text, Eclipse), testar,\ne ver qual combina mais com você. Em adição, conheça o Sharelatex e\u002Fou o\nWritelatex.\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:s},{type:b,tag:l,props:{href:"http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fperprof-py",rel:[m,n,o],target:p},children:[{type:a,value:"perprof-py"}]},{type:a,value:","}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"que é uma ferramenta para gerar perfis de desempenho, com gráficos de alta\nqualidade.\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:s},{type:b,tag:l,props:{href:"http:\u002F\u002Fgit-scm.com",rel:[m,n,o],target:p},children:[{type:a,value:"git"}]},{type:a,value:", que é uma ferramenta para controle de"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"versão, que você pode usar sozinho; ou em grupo; fazer ramificações;\nverificar versões anteriores; misturar versões; trabalhar online; dentro\noutras.\n- Conheça o [GitHub](http:\u002F\u002Fgithub.com), que é um site onde você pode\ncolocar o código que foi feito com git.\n- Conheça o [Travis CI](http:\u002F\u002Ftravis-ci.org), que é um serviço que baixa\nseu código do GitHub e roda testes (definidos por você) nele, sempre que\nvocê subir o seu código.\n- Conheça o [Coveralls.io](http:\u002F\u002Fcoveralls.io), que é um serviço que\nverifica seus testes e diz que parte do seu código foi verificado, e qual\nnão foi.\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"TikZ e PgfPlots do Latex: Comentei um pouco sobre gráficos usando esses"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"pacotes, e mostrei alguns exemplos.\n"}]}]}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:"Também falei sobre o "},{type:b,tag:l,props:{href:"http:\u002F\u002Fwww.software-carpentry.org",rel:[m,n,o],target:p},children:[{type:a,value:"Software Carpentry"}]},{type:a,value:",\nque é uma organização sem fins lucrativos que realiza workshops e promove\nconhecimento mundialmente. Comentei também sobre o trabalho do\n"},{type:b,tag:l,props:{href:"http:\u002F\u002Frgaiacs.com",rel:[m,n,o],target:p},children:[{type:a,value:"Raniere Silva"}]},{type:a,value:" no Software Carpentry, e do\n"},{type:b,tag:l,props:{href:"http:\u002F\u002Fcatarse.me\u002Fpt\u002Fprogramacaocientifica",rel:[m,n,o],target:p},children:[{type:a,value:"trabalho que ele está\npropondo"}]},{type:a,value:" para os próximos meses."}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:"Algumas boas perguntas foram feitas, e gostaria de parafraseá-las e\natualizar minha resposta para algumas delas."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:t,props:{},children:[{type:a,value:"Por que sair do MatLab para o Julia?"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Recomendo sair do MatLab porque ele é um software proprietário, pra começar.\nMas desconsiderando isso, e também considerando o Octave, dou a seguinte\nresposta: O Julia está sendo desenvolvido com o intuito de substituir o\nMatLab, sabendo que o matemático computacional costuma fazer código que\nprecisa de velocidade em C ou Fortran.\nA interface para C e Fortran em Julia é consideravelmente fácil,\ne isso facilita o processo de criar um código que você vê que funciona, e\nposteriormente otimizá-lo.\nGostaria de acrescentar a ressalva que Julia é uma linguagem nova, e\nobviamente não tem tudo que gostaríamos implementado. Seu código pode\nquebrar. Mas vale a pena conhecer para saber se vale investir.\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:t,props:{},children:[{type:a,value:"Por que sair do Python para o Julia?"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Não sei se você deve. O Python básico não é suficiente para um matemático\ncomputacional, mas eu sei que existem vários pacotes que conseguem deixar o\nPython muito eficiente para Análise Numérica e Otimização. Também é possível\nfazer uma transição C com Python, mas não conheço, logo não posso julgar.\nAtualmente, provavelmente, o Python parece ser mais eficiente.\nE já que estamos aqui, se você conseguir tirar alguém do MatLab para o\nPython, já é uma vitória.\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"**Por que usar o TikZ\u002FPgfPlots no lugar desta outra ferramenta de"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"gráficos?**\nSe for o MatLab, vide meu _rant_ anterior sobre MatLab ser proprietário.\nPara outras ferramentas, não sei. Muitas ferramentas fazem um trabalho, no\nmínimo, tão bom quanto o TikZ\u002FPgfPlots, e.g., o MatplotLib (que\nusamos no perprof, junto com o PgfPlots).\nUma coisa que eu gosto é misturar com o Beamer, gerando figuras iterativas\n(não interativas).\nEntão, alguns comandos podem ser misturados para fazer uma sequência de\nfiguras que o Beamer vai descobrindo (por exemplo o caminho de um\nalgoritmo).\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"**Se fosse para você escolher apenas uma dessas ferramentas para"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"recomendar, qual seria?**\nSem dúvida o git, que é útil para qualquer área onde você escreve código, ou\naté mesmo um artigo em .tex (ou outros formatos binários de texto).\nVocê nunca sabe quando vai precisar voltar numa versão anterior do código.\nPor exemplo, você faz atualizações no seu código, e alguém diz que estava\nusando o seu código antes, mas depois que essa pessoa atualizou, o código\nparou de funcionar.\nBem, como fazer pra saber o que quebrou o código? Se você está fazendo o\ncontrole corretamente, você terá vários _commits_ indicando o trabalho\nfeito. Você pode navegar nesses commits e descubrir a última versão que\nfuncionava. Assim você reduz consideravelmente a quantidade de código que\npode ter estragado o seu pacote.\nAlém disso, você pode trabalhar com versões paralelas, colaborativamente, e\nainda aproveitar de serviços fantásticos para quem usa git (GitHub, Travis,\nCoveralls).\n"}]}]}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:"É importante ficar claro que eu não estou apresentado as melhores ferramentas\npara seus respectivos objetivos, apenas aquelas que eu conheço e que podem\nresolver o problema. Talvez alguma ferramenta seja melhor do que a que eu\napresentei, mas o ponto é você conhecer alguma ferramenta, e às vezes conhecer\nalguma nova."}]}]},dir:"\u002Fblog",path:"\u002Fblog\u002F2015-02-25-apresentacao-no-vii-simposio-de-analise-numerica-e-otimizacao-ufpr",extension:".md",createdAt:u,updatedAt:u,bodyPlainText:"\n# Apresentação no VII Simpósio de Análise Numérica e Otimização - UFPR\n\nNo dia 24 de Fevereiro de 2015 aconteceu o (primeiro dia do) VII Simpósio de\nAnálise Numérica e Otimização.\nParticipei deste congresso fazendo uma apresentação sobre\n[Ferramentas Computacionais para\nPesquisadores](\u002Fblog\u002F2015-02-25-vii-simposio.pdf)\n(ver [código](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fpres-ferramentas-computacionais)).\n\nNesta apresentação, introduzo algumas ferramentas que considero bastante\nimportantes para pesquisadores, principalmente da área de matemática\ncomputacional.\nUm resumo do que apresento é\n\n- Aprenda outras linguagens. Recomendo, por exemplo, conhecer Python ou Ruby,\n\n```\nShell e Makefile. Com essas ferramentas já é possível automatizar testes e\nfazer scripts com uso variado. Makefile, por exemplo, é uma das maneiras\nmais usadas de se instalar programas (no Unix).\n```\n\n- Conheça a linguagem [Julia](http:\u002F\u002Fwww.julialang.org).\n\n```\nÉ uma linguagem com foco na matemática computacional, considerando ainda que\nvocê irá querer utilizar código em C e Fortran, e com sintaxe parecido com a\nde MatLab\u002FOctave. É uma linguagem nova, mas tem potencial para ser o próximo\nconcorrente do MatLab\u002FOctave, e é livre.\n- Dentro do Julia, conheça o [JuliaOpt](http:\u002F\u002Fwww.juliaopt.org), que é\num grupo que está desenvolvendo ferramentas de otimização em Julia.\nDesde interfaces para softwares conhecidos, até linguagens de modelagem,\npassando por implementações de métodos de otimização não-linear, tanto\npuramente em Julia, quanto utilizando códigos de baixo nível.\n- Também anunciei que estamos trabalhando no\n[CUTEst.jl](http:\u002F\u002Fgithub.com\u002Foptimizers\u002FCUTEst.jl), uma interface para o\n[CUTEst](http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki).\n```\n\n- Escolha um editor e um ambiente de desenvolvimento.\n\n```\nSugiro ver algumas opções (Vim, Emacs, Atom, Sublime Text, Eclipse), testar,\ne ver qual combina mais com você. Em adição, conheça o Sharelatex e\u002Fou o\nWritelatex.\n```\n\n- Conheça o [perprof-py](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fperprof-py),\n\n```\nque é uma ferramenta para gerar perfis de desempenho, com gráficos de alta\nqualidade.\n```\n\n- Conheça o [git](http:\u002F\u002Fgit-scm.com), que é uma ferramenta para controle de\n\n```\nversão, que você pode usar sozinho; ou em grupo; fazer ramificações;\nverificar versões anteriores; misturar versões; trabalhar online; dentro\noutras.\n- Conheça o [GitHub](http:\u002F\u002Fgithub.com), que é um site onde você pode\ncolocar o código que foi feito com git.\n- Conheça o [Travis CI](http:\u002F\u002Ftravis-ci.org), que é um serviço que baixa\nseu código do GitHub e roda testes (definidos por você) nele, sempre que\nvocê subir o seu código.\n- Conheça o [Coveralls.io](http:\u002F\u002Fcoveralls.io), que é um serviço que\nverifica seus testes e diz que parte do seu código foi verificado, e qual\nnão foi.\n```\n\n- TikZ e PgfPlots do Latex: Comentei um pouco sobre gráficos usando esses\n\n```\npacotes, e mostrei alguns exemplos.\n```\n\nTambém falei sobre o [Software Carpentry](http:\u002F\u002Fwww.software-carpentry.org),\nque é uma organização sem fins lucrativos que realiza workshops e promove\nconhecimento mundialmente. Comentei também sobre o trabalho do\n[Raniere Silva](http:\u002F\u002Frgaiacs.com) no Software Carpentry, e do\n[trabalho que ele está\npropondo](http:\u002F\u002Fcatarse.me\u002Fpt\u002Fprogramacaocientifica) para os próximos meses.\n\nAlgumas boas perguntas foram feitas, e gostaria de parafraseá-las e\natualizar minha resposta para algumas delas.\n\n- **Por que sair do MatLab para o Julia?**\n\n```\nRecomendo sair do MatLab porque ele é um software proprietário, pra começar.\nMas desconsiderando isso, e também considerando o Octave, dou a seguinte\nresposta: O Julia está sendo desenvolvido com o intuito de substituir o\nMatLab, sabendo que o matemático computacional costuma fazer código que\nprecisa de velocidade em C ou Fortran.\nA interface para C e Fortran em Julia é consideravelmente fácil,\ne isso facilita o processo de criar um código que você vê que funciona, e\nposteriormente otimizá-lo.\nGostaria de acrescentar a ressalva que Julia é uma linguagem nova, e\nobviamente não tem tudo que gostaríamos implementado. Seu código pode\nquebrar. Mas vale a pena conhecer para saber se vale investir.\n```\n\n- **Por que sair do Python para o Julia?**\n\n```\nNão sei se você deve. O Python básico não é suficiente para um matemático\ncomputacional, mas eu sei que existem vários pacotes que conseguem deixar o\nPython muito eficiente para Análise Numérica e Otimização. Também é possível\nfazer uma transição C com Python, mas não conheço, logo não posso julgar.\nAtualmente, provavelmente, o Python parece ser mais eficiente.\nE já que estamos aqui, se você conseguir tirar alguém do MatLab para o\nPython, já é uma vitória.\n```\n\n- \\*\\*Por que usar o TikZ\u002FPgfPlots no lugar desta outra ferramenta de\n\n```\ngráficos?**\nSe for o MatLab, vide meu _rant_ anterior sobre MatLab ser proprietário.\nPara outras ferramentas, não sei. Muitas ferramentas fazem um trabalho, no\nmínimo, tão bom quanto o TikZ\u002FPgfPlots, e.g., o MatplotLib (que\nusamos no perprof, junto com o PgfPlots).\nUma coisa que eu gosto é misturar com o Beamer, gerando figuras iterativas\n(não interativas).\nEntão, alguns comandos podem ser misturados para fazer uma sequência de\nfiguras que o Beamer vai descobrindo (por exemplo o caminho de um\nalgoritmo).\n```\n\n- \\*\\*Se fosse para você escolher apenas uma dessas ferramentas para\n\n```\nrecomendar, qual seria?**\nSem dúvida o git, que é útil para qualquer área onde você escreve código, ou\naté mesmo um artigo em .tex (ou outros formatos binários de texto).\nVocê nunca sabe quando vai precisar voltar numa versão anterior do código.\nPor exemplo, você faz atualizações no seu código, e alguém diz que estava\nusando o seu código antes, mas depois que essa pessoa atualizou, o código\nparou de funcionar.\nBem, como fazer pra saber o que quebrou o código? Se você está fazendo o\ncontrole corretamente, você terá vários _commits_ indicando o trabalho\nfeito. Você pode navegar nesses commits e descubrir a última versão que\nfuncionava. Assim você reduz consideravelmente a quantidade de código que\npode ter estragado o seu pacote.\nAlém disso, você pode trabalhar com versões paralelas, colaborativamente, e\nainda aproveitar de serviços fantásticos para quem usa git (GitHub, Travis,\nCoveralls).\n```\n\nÉ importante ficar claro que eu não estou apresentado as melhores ferramentas\npara seus respectivos objetivos, apenas aquelas que eu conheço e que podem\nresolver o problema. Talvez alguma ferramenta seja melhor do que a que eu\napresentei, mas o ponto é você conhecer alguma ferramenta, e às vezes conhecer\nalguma nova.\n"},prev:{slug:"2015-04-13-a-cli-reminder-remind",title:"A CLI Reminder - Remind"},next:{slug:"2015-02-06-cutestjl",title:"CUTEst.jl"}}],fetch:{},mutations:void 0}}("text","element","\n","ul","li","div","nuxt-content-highlight","pre","language-text","line-numbers","code","a","nofollow","noopener","noreferrer","_blank","p","Apresentação no VII Simpósio de Análise Numérica e Otimização - UFPR","Conheça o ","strong","2022-12-23T23:04:30.335Z")));