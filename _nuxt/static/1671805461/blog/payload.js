__NUXT_JSONP__("/blog", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO,cP,cQ,cR,cS,cT,cU,cV,cW,cX,cY,cZ,c_,c$,da,db,dc,dd,de,df,dg,dh,di,dj,dk,dl,dm,dn,do0,dp,dq,dr,ds,dt,du,dv,dw,dx,dy,dz,dA,dB,dC,dD,dE,dF,dG,dH,dI,dJ,dK,dL,dM,dN,dO,dP,dQ,dR,dS,dT,dU,dV,dW,dX,dY,dZ,d_,d$,ea,eb,ec,ed,ee,ef,eg,eh,ei,ej,ek,el,em,en,eo,ep,eq,er,es,et,eu,ev,ew,ex,ey,ez,eA,eB,eC,eD,eE,eF,eG,eH,eI,eJ,eK,eL,eM,eN,eO,eP,eQ,eR,eS,eT,eU,eV,eW,eX){return {data:[{articles:[{slug:"2022-02-11-python-and-julia-3",title:aX,date:"2022-02-11",img:"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F720\u002F1*Bta22zk1Dv3nsfacxEyK0A.jpeg",tags:[H,ae,af],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"can-python-with-julia-be-faster-than-low-level-code"},children:[{type:b,tag:f,props:{href:"#can-python-with-julia-be-faster-than-low-level-code",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:aX}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ag}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ah},{type:b,tag:f,props:{href:"https:\u002F\u002Fblog.esciencecenter.nl\u002Fcan-python-with-julia-be-faster-than-low-level-code-cd71a72fbcf4",rel:[l,m,n],target:o},children:[{type:a,value:M}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2022-02-11-python-and-julia-3",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Can Python with Julia be faster than low-level code?\n\nI worked on this blog post working for eScience Center.\nCo-authored by Faruk Diblen.\n\nCheck the blog post [here](https:\u002F\u002Fblog.esciencecenter.nl\u002Fcan-python-with-julia-be-faster-than-low-level-code-cd71a72fbcf4).\n"},{slug:"2022-01-26-python-and-julia-2",title:aY,date:"2022-01-26",img:"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F720\u002F1*4pbcALDvrchxB1s72pD-mA.jpeg",tags:[H,ae,af],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"speed-up-your-python-code-using-julia"},children:[{type:b,tag:f,props:{href:"#speed-up-your-python-code-using-julia",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:aY}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ag}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ah},{type:b,tag:f,props:{href:"https:\u002F\u002Fblog.esciencecenter.nl\u002Fspeed-up-your-python-code-using-julia-f97a6c155630",rel:[l,m,n],target:o},children:[{type:a,value:M}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2022-01-26-python-and-julia-2",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Speed up your Python code using Julia\n\nI worked on this blog post working for eScience Center.\nCo-authored by Faruk Diblen.\n\nCheck the blog post [here](https:\u002F\u002Fblog.esciencecenter.nl\u002Fspeed-up-your-python-code-using-julia-f97a6c155630).\n"},{slug:"2022-01-19-python-and-julia-1",title:aZ,date:"2022-01-19",tags:[H,ae,af],img:"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F720\u002F1*rO_VWgfXj4zuFDtX28Uc1g.jpeg",toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"how-to-call-julia-code-from-python"},children:[{type:b,tag:f,props:{href:"#how-to-call-julia-code-from-python",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:aZ}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ag}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ah},{type:b,tag:f,props:{href:"https:\u002F\u002Fblog.esciencecenter.nl\u002Fhow-to-call-julia-code-from-python-8589a56a98f2",rel:[l,m,n],target:o},children:[{type:a,value:M}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2022-01-19-python-and-julia-1",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# How to call Julia code from Python\n\nI worked on this blog post working for eScience Center.\nCo-authored by Faruk Diblen.\n\nCheck the blog post [here](https:\u002F\u002Fblog.esciencecenter.nl\u002Fhow-to-call-julia-code-from-python-8589a56a98f2).\n"},{slug:"2021-12-03-cffinit",title:a_,date:"2021-12-03",tags:["cffinit","software-citation","cff",af],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"cffinit-now-is-the-time-to-get-more-recognition-for-your-software"},children:[{type:b,tag:f,props:{href:"#cffinit-now-is-the-time-to-get-more-recognition-for-your-software",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:a_}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ag}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ah},{type:b,tag:f,props:{href:"https:\u002F\u002Fblog.esciencecenter.nl\u002Fcffinit-now-is-the-time-to-get-more-recognition-for-your-software-e2e6ef617f8e",rel:[l,m,n],target:o},children:[{type:a,value:M}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2021-12-03-cffinit",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# cffinit: NOW is the time to get more recognition for your software!\n\nI worked on this blog post working for eScience Center.\nCo-authored by Faruk Diblen.\n\nCheck the blog post [here](https:\u002F\u002Fblog.esciencecenter.nl\u002Fcffinit-now-is-the-time-to-get-more-recognition-for-your-software-e2e6ef617f8e).\n"},{slug:"2021-06-28-migracao-franklin",title:a$,date:"2021-06-28",tags:[H,"franklin",ba],toc:[{id:bb,depth:I,text:bc},{id:bd,depth:I,text:be},{id:bf,depth:I,text:bg},{id:bh,depth:I,text:bi}],body:{type:A,children:[{type:b,tag:x,props:{id:"migração-do-site-para-franklinjl"},children:[{type:b,tag:f,props:{href:"#migra%C3%A7%C3%A3o-do-site-para-franklinjl",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:a$}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Há algum tempo o Jekyll tem me dado trabalho.\nComo não sou usuário de Ruby, volta e meia falta alguma coisa na minha instalação e eu passo horas tentando corrigir o problema pra fazer meu site rodar localmente.\nPara o CiDAMO, eu considerei o Hugo, já que tem mais suporte e eu não seria a única pessoa a cuidar do site.\nJá para meu site pessoal, e o site do "},{type:b,tag:f,props:{href:bj,rel:[l,m,n],target:o},children:[{type:a,value:"Julia Smooth Optimizers"}]},{type:a,value:", resolvi usar Franklin, já que eu quero mais é usar Julia mesmo."}]},{type:a,value:c},{type:b,tag:J,props:{id:bb},children:[{type:b,tag:f,props:{href:"#vantagens",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bc}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Franklin.jl é Julia,"}]},{type:a,value:" então eu tenho mais facilidade em manter e até mesmo de contribuir.\nO site é um repositório Julia, então tudo está dentro do esperado."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Franklin.jl roda Julia,"}]},{type:a,value:" isto é, dá pra usar Julia pra gerar conteúdo "},{type:b,tag:v,props:{},children:[{type:a,value:"E"}]},{type:a,value:" pra fazer tutoriais.\nPor exemplo, a lista de posts na página principal do blog é gerada por um script em Julia que lê os diretórios e imprime o markdown para a página.\nPor outro lado, os tutoriais do JSO e minhas notas de Cálculo Numérico rodam o código mostrado e a saída é mostrada, então o código está sempre atualizado (ou visivelmente quebrado)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Builda"}]},{type:a,value:" no GitHub actions."}]},{type:a,value:" Então, eu consigo hostear no próprio github. É como GHA é o padrão do Julia, é fácil de achar suporte."}]},{type:a,value:c},{type:b,tag:J,props:{id:bd},children:[{type:b,tag:f,props:{href:"#desvantagens",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:be}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Pode ficar lento,"}]},{type:a,value:" já que tem que compilar e rodar o código.\nPor exemplo, as notas de cálculo numérico levam 40 minutos para rodar, porque tem dezenas de imagens e algumas animações.\nEu tive que fazer uma gambiarra para separar as notas do site. Falo mais sobre isso "},{type:b,tag:f,props:{href:bk},children:[{type:a,value:S}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Não é óbvio como manter layouts diferentes."}]},{type:a,value:" Por exemplo, se eu quiser ter um layout de "},{type:b,tag:e,props:{},children:[{type:a,value:ai}]},{type:a,value:" separado de um layout de "},{type:b,tag:e,props:{},children:[{type:a,value:"page"}]},{type:a,value:", não parece óbvio como.\nEu posso colocar "},{type:b,tag:e,props:{},children:[{type:a,value:"if"}]},{type:a,value:"s pra separar conteúdo, mas não é tão natural."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Ainda não está muito estável."}]},{type:a,value:" Naturalmente, já que é bem novo, mas dá pra sentir quando se precisa achar alguma coisa específica."}]},{type:a,value:c},{type:b,tag:J,props:{id:bf},children:[{type:b,tag:f,props:{href:bk,ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bg}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Meu site tem 3 partes:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"a base, que consiste principalmente de material estático que eu pretendo atualizar de vez em quando (novos pacotes, pesquisa, orientações, cargos, etc.);"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"as notas de cálculo numérico, que depois de pronto deve ver pouca atualização, mas que leva 40 minutos pra compilar no GitHub Actions."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"o blog, que idealmente vê atualizações frequentes, e por isso vou fingir que terá atualizações frequentes."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Se eu coloco todos juntos, então qualquer mudança na base ou no blog leva 40 minutos pra compilar no GitHub Actions por causa das notas de cálculo numérico."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Por outro lado, se eu separo todas, mudanças no CSS, layout, javascript, etc., não são atualizadas."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A solução, simples, é de só manter os arquivos de CSS, layout, javascript, etc., na base e copiá-los no build do GitHub Actions para os outros repositórios.\nAlém disso, adiciono essas pastas no "},{type:b,tag:e,props:{},children:[{type:a,value:".gitignore"}]},{type:a,value:", e localmente é só copiá-las para os repositórios que precisam dela.\nAqui a adição ao GitHub actions:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:["language-yaml",j]},children:[{type:b,tag:e,props:{},children:[{type:b,tag:q,props:{className:[T,aj]},children:[{type:a,value:"-"}]},{type:a,value:ab},{type:b,tag:q,props:{className:[T,bl,bm]},children:[{type:a,value:bn}]},{type:b,tag:q,props:{className:[T,aj]},children:[{type:a,value:bo}]},{type:a,value:" Clone abelsiqueira.github.io\n  "},{type:b,tag:q,props:{className:[T,bl,bm]},children:[{type:a,value:"run"}]},{type:b,tag:q,props:{className:[T,aj]},children:[{type:a,value:bo}]},{type:a,value:ab},{type:b,tag:q,props:{className:[T,aj]},children:[{type:a,value:"|"}]},{type:b,tag:q,props:{className:[T,"scalar","string"]},children:[{type:a,value:"\n    wget https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fabelsiqueira.github.io\u002Farchive\u002Frefs\u002Fheads\u002Fmain.zip\n    unzip main.zip\n    mv abelsiqueira.github.io-main\u002F_layout .\n    mv abelsiqueira.github.io-main\u002F_css .\n    mv abelsiqueira.github.io-main\u002F_libs .\n    rm -rf abelsiqueira.github.io-main main.zip"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:J,props:{id:bh},children:[{type:b,tag:f,props:{href:"#conclus%C3%A3o",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bi}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"No fim das contas, sair do Jekyll para o Franklin vai ser uma experiência interessante.\nDevo fazer alguns posts atualizados usando as novas capacidades do Franklin, e aí veremos se valeu a pena ou não.\nTambém queria ter usado a oportunidade para aprender o Hugo, mas uma coisa de cada vez."}]}]},dir:C,path:"\u002Fblog\u002F2021-06-28-migracao-franklin",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Migração do site para Franklin.jl\n\nHá algum tempo o Jekyll tem me dado trabalho.\nComo não sou usuário de Ruby, volta e meia falta alguma coisa na minha instalação e eu passo horas tentando corrigir o problema pra fazer meu site rodar localmente.\nPara o CiDAMO, eu considerei o Hugo, já que tem mais suporte e eu não seria a única pessoa a cuidar do site.\nJá para meu site pessoal, e o site do [Julia Smooth Optimizers](https:\u002F\u002Fjuliasmoothoptimizers.github.io), resolvi usar Franklin, já que eu quero mais é usar Julia mesmo.\n\n## Vantagens\n\n**Franklin.jl é Julia,** então eu tenho mais facilidade em manter e até mesmo de contribuir.\nO site é um repositório Julia, então tudo está dentro do esperado.\n\n**Franklin.jl roda Julia,** isto é, dá pra usar Julia pra gerar conteúdo **E** pra fazer tutoriais.\nPor exemplo, a lista de posts na página principal do blog é gerada por um script em Julia que lê os diretórios e imprime o markdown para a página.\nPor outro lado, os tutoriais do JSO e minhas notas de Cálculo Numérico rodam o código mostrado e a saída é mostrada, então o código está sempre atualizado (ou visivelmente quebrado).\n\n**_Builda_ no GitHub actions.** Então, eu consigo hostear no próprio github. É como GHA é o padrão do Julia, é fácil de achar suporte.\n\n## Desvantagens\n\n**Pode ficar lento,** já que tem que compilar e rodar o código.\nPor exemplo, as notas de cálculo numérico levam 40 minutos para rodar, porque tem dezenas de imagens e algumas animações.\nEu tive que fazer uma gambiarra para separar as notas do site. Falo mais sobre isso [aqui](#gambiarra).\n\n**Não é óbvio como manter layouts diferentes.** Por exemplo, se eu quiser ter um layout de `blog` separado de um layout de `page`, não parece óbvio como.\nEu posso colocar `if`s pra separar conteúdo, mas não é tão natural.\n\n**Ainda não está muito estável.** Naturalmente, já que é bem novo, mas dá pra sentir quando se precisa achar alguma coisa específica.\n\n## Gambiarra\n\nMeu site tem 3 partes:\n\n- a base, que consiste principalmente de material estático que eu pretendo atualizar de vez em quando (novos pacotes, pesquisa, orientações, cargos, etc.);\n- as notas de cálculo numérico, que depois de pronto deve ver pouca atualização, mas que leva 40 minutos pra compilar no GitHub Actions.\n- o blog, que idealmente vê atualizações frequentes, e por isso vou fingir que terá atualizações frequentes.\n\nSe eu coloco todos juntos, então qualquer mudança na base ou no blog leva 40 minutos pra compilar no GitHub Actions por causa das notas de cálculo numérico.\n\nPor outro lado, se eu separo todas, mudanças no CSS, layout, javascript, etc., não são atualizadas.\n\nA solução, simples, é de só manter os arquivos de CSS, layout, javascript, etc., na base e copiá-los no build do GitHub Actions para os outros repositórios.\nAlém disso, adiciono essas pastas no `.gitignore`, e localmente é só copiá-las para os repositórios que precisam dela.\nAqui a adição ao GitHub actions:\n\n```yaml\n- name: Clone abelsiqueira.github.io\n  run: |\n    wget https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fabelsiqueira.github.io\u002Farchive\u002Frefs\u002Fheads\u002Fmain.zip\n    unzip main.zip\n    mv abelsiqueira.github.io-main\u002F_layout .\n    mv abelsiqueira.github.io-main\u002F_css .\n    mv abelsiqueira.github.io-main\u002F_libs .\n    rm -rf abelsiqueira.github.io-main main.zip\n```\n\n## Conclusão\n\nNo fim das contas, sair do Jekyll para o Franklin vai ser uma experiência interessante.\nDevo fazer alguns posts atualizados usando as novas capacidades do Franklin, e aí veremos se valeu a pena ou não.\nTambém queria ter usado a oportunidade para aprender o Hugo, mas uma coisa de cada vez.\n"},{slug:"2018-12-12-koch-snowflakes-for-the-holidays",title:bp,date:"2018-12-12",tags:[H,bq],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"koch-snowflakes-for-the-holidays"},children:[{type:b,tag:f,props:{href:"#koch-snowflakes-for-the-holidays",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bp}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fkoch-holidays",rel:[l,m,n],target:o},children:[{type:a,value:"Code for these images"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I hope you're familiar with the "},{type:b,tag:f,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FKoch_snowflake",rel:[l,m,n],target:o},children:[{type:a,value:"Koch curve\nfractal or snowflake"}]},{type:a,value:".\nIt essentially consists taking a line segment, splitting it in three, and substituting\nthe middle part by two segments that form an equilateral triangle without the base.\nFrom one segment you obtain four. For each new segment, repeat the process."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Images:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fline-koch-0.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fline-koch-1.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fline-koch-2.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fline-koch-3.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fline-koch-4.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fline-koch-5.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fline-koch-6.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fline-koch-7.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The most important aspect of the koch line is that it looks awesome. Furthermore, you\ncan do it for any image that is a collection of segments. In particular, regular\npolygons, both outward and inward."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-2.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-reverse-2.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-3.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-reverse-3.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-4.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-reverse-4.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-5.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-reverse-5.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-6.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-reverse-6.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-7.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-reverse-7.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-8.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fpolygon-reverse-8.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Another way to define the four new segments is this: Given the endpoints of the segment\n$P_1$ and $P_2$, we define $\\vec{v} = \\vec{P_1P_2}$. The five points that define the\nfour new segments, in order, are $P_1$, $P_1 + \\frac{1}{3}\\vec{v}$,\n$P_1 + \\frac{1}{2}\\vec{v} + \\alpha R\\vec{v}$, $P1 + \\frac{2}{3}\\vec{v}$ and $P_2$,\nwhere $\\alpha = \\sqrt{3}\u002F6$.\nA simple thing one can do is change the value of $\\alpha$ to obtain different images:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fstar.png"},children:[]},{type:a,value:"\nUsing a diamond with $\\alpha = 1.25$."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Freverse-star.png"},children:[]},{type:a,value:"\nUsing a square with $\\alpha = 1.2$."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fstargon-3.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fstargon-4.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fstargon-5.png"},children:[]},{type:a,value:"\nUsing polygons with $N$ equals to 3, 4 and 5 sides, and $\\alpha = 3\\sqrt{N}\u002F5$."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Ftri-3.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Ftri-4.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Ftri-5.png"},children:[]},{type:a,value:"\nUsing a line segment from the center to the vertex and back and to next vertex, etc.,\nwith $\\alpha = 1$."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"And to close off, here's a traditional triangle, repeated, with alternating colors.\n"},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fkoch.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:P,props:{to:br},children:[{type:a,value:"Here a larger scale version"}]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:br},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Happy holidays!\n"},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fkoch\u002Fkoch-julia.png"},children:[]}]}]},dir:C,path:"\u002Fblog\u002F2018-12-12-koch-snowflakes-for-the-holidays",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Koch snowflakes for the holidays\n\n[Code for these images](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fkoch-holidays).\n\nI hope you're familiar with the [Koch curve\nfractal or snowflake](https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FKoch_snowflake).\nIt essentially consists taking a line segment, splitting it in three, and substituting\nthe middle part by two segments that form an equilateral triangle without the base.\nFrom one segment you obtain four. For each new segment, repeat the process.\n\nImages:\n\n![](\u002Fblog\u002Fkoch\u002Fline-koch-0.png)\n\n![](\u002Fblog\u002Fkoch\u002Fline-koch-1.png)\n![](\u002Fblog\u002Fkoch\u002Fline-koch-2.png)\n![](\u002Fblog\u002Fkoch\u002Fline-koch-3.png)\n![](\u002Fblog\u002Fkoch\u002Fline-koch-4.png)\n![](\u002Fblog\u002Fkoch\u002Fline-koch-5.png)\n![](\u002Fblog\u002Fkoch\u002Fline-koch-6.png)\n![](\u002Fblog\u002Fkoch\u002Fline-koch-7.png)\n\nThe most important aspect of the koch line is that it looks awesome. Furthermore, you\ncan do it for any image that is a collection of segments. In particular, regular\npolygons, both outward and inward.\n\n![](\u002Fblog\u002Fkoch\u002Fpolygon-2.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-reverse-2.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-3.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-reverse-3.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-4.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-reverse-4.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-5.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-reverse-5.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-6.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-reverse-6.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-7.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-reverse-7.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-8.png)\n![](\u002Fblog\u002Fkoch\u002Fpolygon-reverse-8.png)\n\nAnother way to define the four new segments is this: Given the endpoints of the segment\n$P_1$ and $P_2$, we define $\\vec{v} = \\vec{P_1P_2}$. The five points that define the\nfour new segments, in order, are $P_1$, $P_1 + \\frac{1}{3}\\vec{v}$,\n$P_1 + \\frac{1}{2}\\vec{v} + \\alpha R\\vec{v}$, $P1 + \\frac{2}{3}\\vec{v}$ and $P_2$,\nwhere $\\alpha = \\sqrt{3}\u002F6$.\nA simple thing one can do is change the value of $\\alpha$ to obtain different images:\n\n![](\u002Fblog\u002Fkoch\u002Fstar.png)\nUsing a diamond with $\\alpha = 1.25$.\n\n![](\u002Fblog\u002Fkoch\u002Freverse-star.png)\nUsing a square with $\\alpha = 1.2$.\n\n![](\u002Fblog\u002Fkoch\u002Fstargon-3.png)\n![](\u002Fblog\u002Fkoch\u002Fstargon-4.png)\n![](\u002Fblog\u002Fkoch\u002Fstargon-5.png)\nUsing polygons with $N$ equals to 3, 4 and 5 sides, and $\\alpha = 3\\sqrt{N}\u002F5$.\n\n![](\u002Fblog\u002Fkoch\u002Ftri-3.png)\n![](\u002Fblog\u002Fkoch\u002Ftri-4.png)\n![](\u002Fblog\u002Fkoch\u002Ftri-5.png)\nUsing a line segment from the center to the vertex and back and to next vertex, etc.,\nwith $\\alpha = 1$.\n\nAnd to close off, here's a traditional triangle, repeated, with alternating colors.\n![](\u002Fblog\u002Fkoch\u002Fkoch.png)\n\n[Here a larger scale version](\u002Fblog\u002Fkoch\u002Fkoch-large.png)\n![](\u002Fblog\u002Fkoch\u002Fkoch-large.png)\n\nHappy holidays!\n![](\u002Fblog\u002Fkoch\u002Fkoch-julia.png)\n"},{slug:"2018-12-05-package-development-on-julia-10",title:bs,date:"2018-12-05",tags:[H,az,ak,bt],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"package-development-in-julia-10-using-the-repl"},children:[{type:b,tag:f,props:{ariaHidden:r,href:"#package-development-in-julia-10-using-the-repl",tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bs}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is a quick post on package development in Julia 1.0. Let me know if you're\ninterested in more, and what."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Suppose you're developing a package - say, "},{type:b,tag:e,props:{},children:[{type:a,value:"MyPackage.jl"}]},{type:a,value:" - whether from scratch, or\nupdating from Julia 0.6.\nFirst, and foremost, you need to be able to run and test it.\nOn Julia 1.0, this is one possible way, while using the REPL."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Choose a folder to develop it and create the necessary files"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"You'll need"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"- MyPackage.jl\u002F\n  - src\u002F\n    - MyPackage.jl\n  - test\u002F\n    - runtests.jl\n  - README.md (eventually)\n  - LICENSE.md (eventually)\n  - .travis.yml (eventually)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The file "},{type:b,tag:e,props:{},children:[{type:a,value:"src\u002FMyPackage.jl"}]},{type:a,value:" is the file included by Julia when you enter\n"},{type:b,tag:e,props:{},children:[{type:a,value:"Using MyPackage"}]},{type:a,value:". "},{type:b,tag:e,props:{},children:[{type:a,value:bu}]},{type:a,value:" is what is run to test your package. It is\nrequired if you intend to publish your package, but most important, you need to test\nyour package before trying to publish it. README gives information about your package,\nLICENSE gives information about its license, and .travis.yml defines the online testing\nwith continuous integration by Travis. These are usual, but not require when you're\nstarting to develop your package."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For instance, consider the following files"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# src\u002FMyPackage.jl\nmodule MyPackage\n\nexport pi_approximation\n\nfunction pi_approximation()\n  return 22.0 \u002F 7.0\nend\n\nend # module\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# test\u002Fruntests.jl\nusing MyPackage, Test\n\nfunction tests()\n  @testset \"Subset of tests\" begin\n    @test pi_approximation() ≈ pi atol=1e-2\n  end\nend\n\ntests()\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Open the REPL and add your package under the development version"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"I assume Linux, but this will work with minor modifications on OSX and Windows."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"On the terminal, enter julia to open the REPL"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"julia\u003E\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Enter "},{type:b,tag:e,props:{},children:[{type:a,value:az}]},{type:a,value:" mode by pressing "},{type:b,tag:e,props:{},children:[{type:a,value:"]"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"(v1.0) pkg\u003E\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Inform "},{type:b,tag:e,props:{},children:[{type:a,value:az}]},{type:a,value:" that your package folder exists and is under development with "},{type:b,tag:e,props:{},children:[{type:a,value:bt}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"(v1.0) pkg\u003E dev SOME_PATH\u002FMyPackage.jl\n\n[ Info: Assigning UUID XXXXXX to MyPackage\n Resolving package versions...\n  Updating `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FProject.toml`\n  [XXX] + MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  Updating `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FManifest.toml`\n  [XXX] + MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Check that you can see your package"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"(v1.0) pkg\u003E status\n    Status `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FProject.toml`\n  ...\n  [XXX] MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  ...\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Check that everything passes according to your (evil) plan."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"(v1.0) pkg\u003E test MyPackage\n   Testing MyPackage\n Resolving package versions...\n    Status `\u002Ftmp\u002FtmpO7CsSr\u002FManifest.toml`\n  [XXX] MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  ...\nTest Summary:   | Pass  Total\nSubset of tests |    1      1\n   Testing MyPackage tests passed\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"When you're done with your package, you can "},{type:b,tag:e,props:{},children:[{type:a,value:"rm MyPackage"}]},{type:a,value:" to remove your package from\nconsideration without deleting the code."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If your package was already released, then it'll have a different version number. Other\ndifferences may apply."}]}]},dir:C,path:"\u002Fblog\u002F2018-12-05-package-development-on-julia-10",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Package Development in Julia 1.0 using the REPL\n\nThis is a quick post on package development in Julia 1.0. Let me know if you're\ninterested in more, and what.\n\nSuppose you're developing a package - say, `MyPackage.jl` - whether from scratch, or\nupdating from Julia 0.6.\nFirst, and foremost, you need to be able to run and test it.\nOn Julia 1.0, this is one possible way, while using the REPL.\n\n**Choose a folder to develop it and create the necessary files**\n\nYou'll need\n\n```\n- MyPackage.jl\u002F\n  - src\u002F\n    - MyPackage.jl\n  - test\u002F\n    - runtests.jl\n  - README.md (eventually)\n  - LICENSE.md (eventually)\n  - .travis.yml (eventually)\n```\n\nThe file `src\u002FMyPackage.jl` is the file included by Julia when you enter\n`Using MyPackage`. `test\u002Fruntests.jl` is what is run to test your package. It is\nrequired if you intend to publish your package, but most important, you need to test\nyour package before trying to publish it. README gives information about your package,\nLICENSE gives information about its license, and .travis.yml defines the online testing\nwith continuous integration by Travis. These are usual, but not require when you're\nstarting to develop your package.\n\nFor instance, consider the following files\n\n```\n# src\u002FMyPackage.jl\nmodule MyPackage\n\nexport pi_approximation\n\nfunction pi_approximation()\n  return 22.0 \u002F 7.0\nend\n\nend # module\n```\n\n```\n# test\u002Fruntests.jl\nusing MyPackage, Test\n\nfunction tests()\n  @testset \"Subset of tests\" begin\n    @test pi_approximation() ≈ pi atol=1e-2\n  end\nend\n\ntests()\n```\n\n**Open the REPL and add your package under the development version**\n\n_I assume Linux, but this will work with minor modifications on OSX and Windows._\n\nOn the terminal, enter julia to open the REPL\n\n```\njulia\u003E\n```\n\nEnter `pkg` mode by pressing `]`.\n\n```\n(v1.0) pkg\u003E\n```\n\nInform `pkg` that your package folder exists and is under development with `dev`.\n\n```\n(v1.0) pkg\u003E dev SOME_PATH\u002FMyPackage.jl\n\n[ Info: Assigning UUID XXXXXX to MyPackage\n Resolving package versions...\n  Updating `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FProject.toml`\n  [XXX] + MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  Updating `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FManifest.toml`\n  [XXX] + MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n```\n\nCheck that you can see your package\n\n```\n(v1.0) pkg\u003E status\n    Status `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FProject.toml`\n  ...\n  [XXX] MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  ...\n```\n\nCheck that everything passes according to your (evil) plan.\n\n```\n(v1.0) pkg\u003E test MyPackage\n   Testing MyPackage\n Resolving package versions...\n    Status `\u002Ftmp\u002FtmpO7CsSr\u002FManifest.toml`\n  [XXX] MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  ...\nTest Summary:   | Pass  Total\nSubset of tests |    1      1\n   Testing MyPackage tests passed\n```\n\nWhen you're done with your package, you can `rm MyPackage` to remove your package from\nconsideration without deleting the code.\n\nIf your package was already released, then it'll have a different version number. Other\ndifferences may apply.\n"},{slug:"2018-09-04-the-dollar-game-from-numberphile",title:bv,date:"2018-09-04",tags:[H,bw,"numberphile",Y,"linearprogramming"],toc:[{id:bx,depth:I,text:by}],body:{type:A,children:[{type:b,tag:x,props:{id:"optimizing-the-dollar-game-from-numberphile"},children:[{type:b,tag:f,props:{href:"#optimizing-the-dollar-game-from-numberphile",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bv}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I just watched "},{type:b,tag:f,props:{href:"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=U33dsEcKgeQ",rel:[l,m,n],target:o},children:[{type:a,value:"The Dollar Game -\nNumberphile"}]},{type:a,value:", in which a game involving graphs is presented.\nI recommend you watch the video for complete information."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The game involves a graph with integer values on its nodes, positive and\nnegative. For instance, the following graph:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002F2018-09-04\u002Fexample.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Each "},{type:b,tag:v,props:{},children:[{type:a,value:"node"}]},{type:a,value:" corresponds to a person, the "},{type:b,tag:v,props:{},children:[{type:a,value:"node value"}]},{type:a,value:" is the amount of\nmoney that person has, the "},{type:b,tag:v,props:{},children:[{type:a,value:"edges"}]},{type:a,value:" are the people that person can give or\ntake money from.\nThe objective of the game is to have everyone have a non-negative amount of money.\nIn each "},{type:b,tag:v,props:{},children:[{type:a,value:"move"}]},{type:a,value:" of the game, one person decides to give or take money,\n"},{type:b,tag:v,props:{},children:[{type:a,value:"however"}]},{type:a,value:", that person either takes 1 dollar from each of their connections,\nor gives 1 dollar to each one."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"On Numberphile, there are two questions: (i) does the problem has a solution?\n(ii) what's the least amount of moves to find it?\nI've decided to implement this problem using optimization, since it looked\nalmost straightfoward. The optimization model was indeed very simple, and it\ntook more time drawing graphs than modelling. Still fun though."}]},{type:a,value:c},{type:b,tag:J,props:{id:bx},children:[{type:b,tag:f,props:{href:"#the-model",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:by}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Given the undirected graph $G = (V, E)$, and values $w_i, i \\in V$, our\nmodel is based on the following observations:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"The order of moves is irrelevant;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Whether the move is a "},{type:b,tag:G,props:{},children:[{type:a,value:"give"}]},{type:a,value:" or a "},{type:b,tag:G,props:{},children:[{type:a,value:"take"}]},{type:a,value:", is just a question of "},{type:b,tag:v,props:{},children:[{type:a,value:"sign"}]},{type:a,value:Z}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"The value of a node after the moves can be computed by accounting for the\nmoves done by the done and by its neighbours."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Hence, we can model it using two non-negative integer variables $g_i$ and\n$t_i$ storing the number of gives and takes of node $i$. Notice that we\ncould use $y_i = g_i - t_i$, but this is more descriptive."}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Objective: minimize the number of moves"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$\\min \\sum_i (g_i + t_i)$$"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Constraint: after the moves, the values of the nodes should be non-negative"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$\nw_i + \\sum_i (t_i - g_i) |N_i| + \\sum_{j \\in N_i} (g_j - t_j) \\geq 0,\n\\qquad \\forall i \\in V.\n$$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"As it turns out, it's a very simple model. The implementation is also very\nsimple. We're using "},{type:b,tag:f,props:{href:al,rel:[l,m,n],target:o},children:[{type:a,value:"Julia Language"}]},{type:a,value:" with the\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fjuliaopt.org",rel:[l,m,n],target:o},children:[{type:a,value:am}]},{type:a,value:" modelling language, and the\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fjuliagraphs.github.io\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"LightGraphs package from JuliaGraphs"}]},{type:a,value:".\nHere's the code:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"function dollar_game(g, W)\n   nv = length(vertices(g))\n   model = Model(solver = CbcSolver())\n   @variable(model, give[1:nv] \u003E= 0, Int)\n   @variable(model, take[1:nv] \u003E= 0, Int)\n   @objective(model, Min, sum(give[i] + take[i] for i = 1:nv))\n   @expression(model, x[i=1:nv], W[i] +\n               (take[i] - give[i]) * length(neighbors(g, i)) +\n               sum(give[j] - take[j] for j = neighbors(g, i)))\n   @constraint(model, x .\u003E= 0)\n   status = solve(model)\n   println(\"status = $status\")\n   if status != :Optimal\n      return zeros(nv), W\n   end\n\n   give = Int.(getvalue(give))\n   take = Int.(getvalue(take))\n   sol = Int.(getvalue(x))\n   println(\"give = $give\")\n   println(\"take = $take\")\n   println(\"sol = $sol\")\n   return give - take, sol\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The code should be pretty self-explanatory, but ping me on twitter if you need clarification."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Using the results and "},{type:b,tag:"del",props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"mad plotting skillz"}]}]},{type:a,value:" the packages Plots and GR, we\nobtain a solution for the problem above. The moves are illustrated below, where\nblue means giving, and red means taking."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002F2018-09-04\u002Fexample-000.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002F2018-09-04\u002Fexample-001.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002F2018-09-04\u002Fexample-002.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002F2018-09-04\u002Fexample-003.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002F2018-09-04\u002Fexample-004.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002F2018-09-04\u002Fexample-005.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The full code is available at "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FDollarGame.jl",rel:[l,m,n],target:o},children:[{type:a,value:U}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2018-09-04-the-dollar-game-from-numberphile",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Optimizing the Dollar Game from Numberphile\n\nI just watched [The Dollar Game -\nNumberphile](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=U33dsEcKgeQ), in which a game involving graphs is presented.\nI recommend you watch the video for complete information.\n\nThe game involves a graph with integer values on its nodes, positive and\nnegative. For instance, the following graph:\n\n![](\u002Fblog\u002F2018-09-04\u002Fexample.png)\n\nEach **node** corresponds to a person, the **node value** is the amount of\nmoney that person has, the **edges** are the people that person can give or\ntake money from.\nThe objective of the game is to have everyone have a non-negative amount of money.\nIn each **move** of the game, one person decides to give or take money,\n**however**, that person either takes 1 dollar from each of their connections,\nor gives 1 dollar to each one.\n\nOn Numberphile, there are two questions: (i) does the problem has a solution?\n(ii) what's the least amount of moves to find it?\nI've decided to implement this problem using optimization, since it looked\nalmost straightfoward. The optimization model was indeed very simple, and it\ntook more time drawing graphs than modelling. Still fun though.\n\n## The model\n\nGiven the undirected graph $G = (V, E)$, and values $w_i, i \\in V$, our\nmodel is based on the following observations:\n\n- The order of moves is irrelevant;\n- Whether the move is a _give_ or a _take_, is just a question of **sign**;\n- The value of a node after the moves can be computed by accounting for the\n  moves done by the done and by its neighbours.\n\nHence, we can model it using two non-negative integer variables $g_i$ and\n$t_i$ storing the number of gives and takes of node $i$. Notice that we\ncould use $y_i = g_i - t_i$, but this is more descriptive.\n\n- Objective: minimize the number of moves\n\n$$\\min \\sum_i (g_i + t_i)$$\n\n- Constraint: after the moves, the values of the nodes should be non-negative\n\n$$\nw_i + \\sum_i (t_i - g_i) |N_i| + \\sum_{j \\in N_i} (g_j - t_j) \\geq 0,\n\\qquad \\forall i \\in V.\n$$\n\nAs it turns out, it's a very simple model. The implementation is also very\nsimple. We're using [Julia Language](https:\u002F\u002Fjulialang.org) with the\n[JuMP](https:\u002F\u002Fjuliaopt.org) modelling language, and the\n[LightGraphs package from JuliaGraphs](https:\u002F\u002Fjuliagraphs.github.io\u002F).\nHere's the code:\n\n```\nfunction dollar_game(g, W)\n   nv = length(vertices(g))\n   model = Model(solver = CbcSolver())\n   @variable(model, give[1:nv] \u003E= 0, Int)\n   @variable(model, take[1:nv] \u003E= 0, Int)\n   @objective(model, Min, sum(give[i] + take[i] for i = 1:nv))\n   @expression(model, x[i=1:nv], W[i] +\n               (take[i] - give[i]) * length(neighbors(g, i)) +\n               sum(give[j] - take[j] for j = neighbors(g, i)))\n   @constraint(model, x .\u003E= 0)\n   status = solve(model)\n   println(\"status = $status\")\n   if status != :Optimal\n      return zeros(nv), W\n   end\n\n   give = Int.(getvalue(give))\n   take = Int.(getvalue(take))\n   sol = Int.(getvalue(x))\n   println(\"give = $give\")\n   println(\"take = $take\")\n   println(\"sol = $sol\")\n   return give - take, sol\nend\n```\n\nThe code should be pretty self-explanatory, but ping me on twitter if you need clarification.\n\nUsing the results and ~~_mad plotting skillz_~~ the packages Plots and GR, we\nobtain a solution for the problem above. The moves are illustrated below, where\nblue means giving, and red means taking.\n\n![](\u002Fblog\u002F2018-09-04\u002Fexample-000.png)\n![](\u002Fblog\u002F2018-09-04\u002Fexample-001.png)\n![](\u002Fblog\u002F2018-09-04\u002Fexample-002.png)\n![](\u002Fblog\u002F2018-09-04\u002Fexample-003.png)\n![](\u002Fblog\u002F2018-09-04\u002Fexample-004.png)\n![](\u002Fblog\u002F2018-09-04\u002Fexample-005.png)\n\nThe full code is available at [GitHub](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FDollarGame.jl).\n"},{slug:"2018-07-04-my-experience-in-the-jump-dev-annual-workshop",title:bz,date:"2018-07-04",tags:[bw,H,K,Y],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"my-experience-in-the-jump-dev-annual-workshop"},children:[{type:b,tag:f,props:{href:"#my-experience-in-the-jump-dev-annual-workshop",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bz}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Last week I had the pleasure of being invited to the "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.juliaopt.org\u002Fmeetings\u002Fbordeaux2018\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"Second annual JuMP-dev\nworkshop"}]},{type:a,value:", which happened in June 27-29,\n2018 at Bordeaux, France.\nI've presented the packages from the "},{type:b,tag:f,props:{href:"https:\u002F\u002FJuliaSmoothOptimizers.github.io",rel:[l,m,n],target:o},children:[{type:a,value:"Julia Smooth\nOptimizers"}]},{type:a,value:" organization, and had a very good\ntime meeting with the JuMP developers."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For those still unaware, "},{type:b,tag:f,props:{href:bA,rel:[l,m,n],target:o},children:[{type:a,value:am}]},{type:a,value:" is a modelling\nlanguage for Mathematical Programming written in Julia. It provides access to a few\ndifferent solvers for many kinds of problems, and it works inside of Julia, so one can\nenjoy the advantages of having a robust language if there is a need for advanced usage."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I've used Julia in classes since 2016 for teaching numerical calculus, and the packages\nof Julia Smooth Optimizers for nonlinear optimization this last semester.\nI've taught a quick tutorial on JuMP in that class to solve a few nonlinear problems,\nand discuss the starting point dependency of nonlinear solvers.\nThe notebook can be found "},{type:b,tag:f,props:{href:"https:\u002F\u002Fabelsiqueira.github.io\u002Fcm106-2018s1\u002F",rel:[l,m,n],target:o},children:[{type:a,value:M}]},{type:a,value:" in\nportuguese."}]}]},dir:C,path:"\u002Fblog\u002F2018-07-04-my-experience-in-the-jump-dev-annual-workshop",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# My experience in the JuMP-dev annual workshop\n\nLast week I had the pleasure of being invited to the [Second annual JuMP-dev\nworkshop](http:\u002F\u002Fwww.juliaopt.org\u002Fmeetings\u002Fbordeaux2018\u002F), which happened in June 27-29,\n2018 at Bordeaux, France.\nI've presented the packages from the [Julia Smooth\nOptimizers](https:\u002F\u002FJuliaSmoothOptimizers.github.io) organization, and had a very good\ntime meeting with the JuMP developers.\n\nFor those still unaware, [JuMP](https:\u002F\u002Fgithub.com\u002FJuliaOpt\u002FJuMP.jl) is a modelling\nlanguage for Mathematical Programming written in Julia. It provides access to a few\ndifferent solvers for many kinds of problems, and it works inside of Julia, so one can\nenjoy the advantages of having a robust language if there is a need for advanced usage.\n\nI've used Julia in classes since 2016 for teaching numerical calculus, and the packages\nof Julia Smooth Optimizers for nonlinear optimization this last semester.\nI've taught a quick tutorial on JuMP in that class to solve a few nonlinear problems,\nand discuss the starting point dependency of nonlinear solvers.\nThe notebook can be found [here](https:\u002F\u002Fabelsiqueira.github.io\u002Fcm106-2018s1\u002F) in\nportuguese.\n"},{slug:"2017-05-09-introduction-to-performance-profile",title:bB,date:"2017-05-09",tags:[K,bC,bD,Y],toc:[{id:bE,depth:V,text:bF},{id:bG,depth:V,text:bH},{id:bI,depth:V,text:bJ},{id:bK,depth:V,text:bL}],body:{type:A,children:[{type:b,tag:x,props:{id:"introduction-to-performance-profile"},children:[{type:b,tag:f,props:{href:"#introduction-to-performance-profile",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bB}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The comparison of algorithms is an active area of work.\nWhen we start learning algorithms, or more advanced programming,\nwe learn of different ways of doing the same complex task.\nThe most usual first example is sorting, which introduces a series of\ndifferent ways to sort a single array, such as selection sort, insertion sort,\nquick sort, merge sort, etc.\nWhen comparing these algorithms, we take into account a few things:\nhow fast it is, how much memory it needs, what are the best\u002Fworst\u002Faverage-case\ncomplexities, and so on."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"However, in some areas, specially applied mathematics, we have an added\ncomplication: does the algorithm work? (Or does it work with a given budget?)\nThat happens because some types of problems don't have an algorithm that can\nsolve every problem. In particular, consider the problem of finding the minimum\nvalue of a function $f:\\mathbb{R}^n\\rightarrow\\mathbb{R}$ on a set\n$\\Omega \\subset \\mathbb{R}^n$. There are no algorithms that solve this problem\nfor any given $f$ and $\\Omega$, and even for specific, easier, cases, such as\nwhen $f$ is twice-continuously differentiable and $\\Omega = \\mathbb{R}^n$, it could\nhappen that the algorithm steps would take more time than allowed (or some other\nbudget contraint).\nIn these cases, we need another type of comparison between algorithms that take into\naccount the number of problems that are solved."}]},{type:a,value:c},{type:b,tag:W,props:{id:bE},children:[{type:b,tag:f,props:{href:"#performance-profile",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bF}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Described by Dolan and Moré [1] --"}]},{type:a,value:c},{type:b,tag:bM,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"(Edit: 08\u002F08\u002F2022) Professor André L. Tits brought to my attention the 1996 paper by Tits and Yang [3] that was already doing a profile comparison using a cumulative distribution of relative time."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"-- the performance profile takes into account the\nnumber of problems solved as well as the cost it took to solve it. It scaled the\ncost of solving the problem according to the best solver for that problem.\nGiven a set of problems $P$ and a set of algorithms $S$, we define\n$c _ {s,p}$ as the cost of solving problem $p \\in P$ by algorithm $s \\in S$.\nIf algorithm can't solve the problem $p$, we define\n$c _ {s,p} = +\\infty$. We assume that at least one algorithm solves problem $p$.\nThe best algorithm for a given problem is the one that solves it with the least\ncost, i.e., we define"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$ c _ {\\min,p} = \\min _ {s\\in S} c _ {s,p}. $$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now we define the relative cost of the algorithm on a problem:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$ r _ {s,p} = \\frac{ c _ {s,p} }{ c _ {\\min,p} }. $$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Notice that $r _ {s,p} \\geq 1$, with $r _ {s,p} = 1$ meaning that algorithm\n$s$ is (one of) the best for problem $p$.\nFinally, the performance function of algorithm $s$ is given by"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$ P*s(t) = \\frac{ |\\{p \\in P \\mid\\ r * {s,p} \\leq t\\}| }{ |P| }. $$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"See that $P_s(1)$ is the number of problems such that $r _ {s,p} = 1$, that is\nthe number of problems for which algorithm $s$ is one of the best.\nFurthermore, $P_s(r _ {\\max})$ is the number of problems solved by algorithm\n$s$, where"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$r _ {\\max} = \\max _ {s \\in S,\\ p \\in P} r _ {s,p}. $$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The value $P_s(1)$ is called the efficiency of algorithm $s$ and $P_s(r _\n{\\max})$ is the robustness."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The following image shows an example of performance profile:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fperprof-example.png"},children:[]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:W,props:{id:bG},children:[{type:b,tag:f,props:{href:"#example",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bH}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I'm gonna create a simple example. Suppose there are 30 problems and 3 solvers\nand the the following matrix stores the values of $c _ {s,p}$:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"c = rand(30, 3)\nc[rand(1:90, 10)] = Inf # To simulate failure\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The following code computes the minimum, the ratios and the performance\nfunction plots:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cmin = minimum(c, 2)\nR = c .\u002F cmin\nt = sort(unique(R))\nif t[end] == Inf\n  pop!(t)\nend\nplot(xaxis=:log)\nfor i = 1:size(c, 2)\n  plot!(t, [sum(R[:,i] .\u003C= ti)\u002Fsize(c,1) for ti in t], label=\"Alg $i\", t=:steppre, lw=2)\nend\nylims!(0, 1)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The resulting image is"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"\u002Fblog\u002Fperprof-julia.png"},children:[]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:W,props:{id:bI},children:[{type:b,tag:f,props:{href:"#implementations",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bJ}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The traditional implementation of the performance profile was in MatLab, but I\ncan't find it now. Let me know if you have a link to it, so I'll add here."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Another implementation was made by me, Raniere Gaia, and Luiz-Rafael Santos [2],\nin Python, but works as an external program too.\nWe haven't updated it in a while. Contact me if you're interested in helping.\nHere's the "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fufpr-opt\u002Fperprof-py",rel:[l,m,n],target:o},children:[{type:a,value:"link"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Last, but not least, there is an implementation in Julia made by Dominique Orban,\nwhich is part of the\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers",rel:[l,m,n],target:o},children:[{type:a,value:bN}]},{type:a,value:" organization.\nThe direct link is\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FBenchmarkProfiles.jl",rel:[l,m,n],target:o},children:[{type:a,value:M}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:W,props:{id:bK},children:[{type:b,tag:f,props:{href:"#references",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bL}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"[1] Elizabeth D. Dolan and Jorge J. Moré. Benchmarking optimization software\nwith performance profiles.\n"},{type:b,tag:G,props:{},children:[{type:a,value:"Mathematical Programming"}]},{type:a,value:", 91(2):201-213, 2002.\nDOI: 10.1007\u002Fs101070100263."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"[2] A. S. Siqueira, R. G. Costa da Silva, and L.-R. Santos.\nPerprof-py: A Python Package for Performance Profile of Mathematical\nOptimization Software.\n"},{type:b,tag:G,props:{},children:[{type:a,value:"Journal of Open Research Software"}]},{type:a,value:", 4(1), p.e12, 2016.\nDOI: 10.5334\u002Fjors.81."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"[3] A.L. Tits and Y. Yang.\nGlobally convergent algorithms for robust pole placement by state feedback.\n"},{type:b,tag:G,props:{},children:[{type:a,value:"IEEE Transactions on Automatic Control"}]},{type:a,value:", 41(10):1432-1452, 1996.\nDOI: 10.1109\u002F9.539425."}]}]},dir:C,path:"\u002Fblog\u002F2017-05-09-introduction-to-performance-profile",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Introduction to Performance Profile\n\nThe comparison of algorithms is an active area of work.\nWhen we start learning algorithms, or more advanced programming,\nwe learn of different ways of doing the same complex task.\nThe most usual first example is sorting, which introduces a series of\ndifferent ways to sort a single array, such as selection sort, insertion sort,\nquick sort, merge sort, etc.\nWhen comparing these algorithms, we take into account a few things:\nhow fast it is, how much memory it needs, what are the best\u002Fworst\u002Faverage-case\ncomplexities, and so on.\n\nHowever, in some areas, specially applied mathematics, we have an added\ncomplication: does the algorithm work? (Or does it work with a given budget?)\nThat happens because some types of problems don't have an algorithm that can\nsolve every problem. In particular, consider the problem of finding the minimum\nvalue of a function $f:\\mathbb{R}^n\\rightarrow\\mathbb{R}$ on a set\n$\\Omega \\subset \\mathbb{R}^n$. There are no algorithms that solve this problem\nfor any given $f$ and $\\Omega$, and even for specific, easier, cases, such as\nwhen $f$ is twice-continuously differentiable and $\\Omega = \\mathbb{R}^n$, it could\nhappen that the algorithm steps would take more time than allowed (or some other\nbudget contraint).\nIn these cases, we need another type of comparison between algorithms that take into\naccount the number of problems that are solved.\n\n### Performance Profile\n\nDescribed by Dolan and Moré [1] --\n\n\u003E (Edit: 08\u002F08\u002F2022) Professor André L. Tits brought to my attention the 1996 paper by Tits and Yang [3] that was already doing a profile comparison using a cumulative distribution of relative time.\n\n-- the performance profile takes into account the\nnumber of problems solved as well as the cost it took to solve it. It scaled the\ncost of solving the problem according to the best solver for that problem.\nGiven a set of problems $P$ and a set of algorithms $S$, we define\n$c _ {s,p}$ as the cost of solving problem $p \\in P$ by algorithm $s \\in S$.\nIf algorithm can't solve the problem $p$, we define\n$c _ {s,p} = +\\infty$. We assume that at least one algorithm solves problem $p$.\nThe best algorithm for a given problem is the one that solves it with the least\ncost, i.e., we define\n\n$$ c _ {\\min,p} = \\min _ {s\\in S} c \\_ {s,p}. $$\n\nNow we define the relative cost of the algorithm on a problem:\n\n$$ r _ {s,p} = \\frac{ c _ {s,p} }{ c \\_ {\\min,p} }. $$\n\nNotice that $r _ {s,p} \\geq 1$, with $r _ {s,p} = 1$ meaning that algorithm\n$s$ is (one of) the best for problem $p$.\nFinally, the performance function of algorithm $s$ is given by\n\n$$ P*s(t) = \\frac{ |\\\\{p \\in P \\mid\\ r * {s,p} \\leq t\\\\}| }{ |P| }. $$\n\nSee that $P_s(1)$ is the number of problems such that $r _ {s,p} = 1$, that is\nthe number of problems for which algorithm $s$ is one of the best.\nFurthermore, $P_s(r _ {\\max})$ is the number of problems solved by algorithm\n$s$, where\n\n$$r _ {\\max} = \\max _ {s \\in S,\\ p \\in P} r _ {s,p}. $$\n\nThe value $P_s(1)$ is called the efficiency of algorithm $s$ and $P_s(r _\n{\\max})$ is the robustness.\n\nThe following image shows an example of performance profile:\n\n![](\u002Fblog\u002Fperprof-example.png).\n\n### Example\n\nI'm gonna create a simple example. Suppose there are 30 problems and 3 solvers\nand the the following matrix stores the values of $c _ {s,p}$:\n\n```\nc = rand(30, 3)\nc[rand(1:90, 10)] = Inf # To simulate failure\n```\n\nThe following code computes the minimum, the ratios and the performance\nfunction plots:\n\n```\ncmin = minimum(c, 2)\nR = c .\u002F cmin\nt = sort(unique(R))\nif t[end] == Inf\n  pop!(t)\nend\nplot(xaxis=:log)\nfor i = 1:size(c, 2)\n  plot!(t, [sum(R[:,i] .\u003C= ti)\u002Fsize(c,1) for ti in t], label=\"Alg $i\", t=:steppre, lw=2)\nend\nylims!(0, 1)\n```\n\nThe resulting image is\n\n![](\u002Fblog\u002Fperprof-julia.png).\n\n### Implementations\n\nThe traditional implementation of the performance profile was in MatLab, but I\ncan't find it now. Let me know if you have a link to it, so I'll add here.\n\nAnother implementation was made by me, Raniere Gaia, and Luiz-Rafael Santos [2],\nin Python, but works as an external program too.\nWe haven't updated it in a while. Contact me if you're interested in helping.\nHere's the [link](https:\u002F\u002Fgithub.com\u002Fufpr-opt\u002Fperprof-py).\n\nLast, but not least, there is an implementation in Julia made by Dominique Orban,\nwhich is part of the\n[JuliaSmoothOptimizers](https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers) organization.\nThe direct link is\n[here](https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FBenchmarkProfiles.jl).\n\n### References\n\n[1] Elizabeth D. Dolan and Jorge J. Moré. Benchmarking optimization software\nwith performance profiles.\n_Mathematical Programming_, 91(2):201-213, 2002.\nDOI: 10.1007\u002Fs101070100263.\n\n[2] A. S. Siqueira, R. G. Costa da Silva, and L.-R. Santos.\nPerprof-py: A Python Package for Performance Profile of Mathematical\nOptimization Software.\n_Journal of Open Research Software_, 4(1), p.e12, 2016.\nDOI: 10.5334\u002Fjors.81.\n\n[3] A.L. Tits and Y. Yang.\nGlobally convergent algorithms for robust pole placement by state feedback.\n_IEEE Transactions on Automatic Control_, 41(10):1432-1452, 1996.\nDOI: 10.1109\u002F9.539425.\n"},{slug:"2017-03-13-installing-gurobi-7-on-linux",title:bO,date:"2017-03-13",tags:[K,"gurobi",aA],toc:[{id:bP,depth:I,text:bQ},{id:bR,depth:I,text:bS}],body:{type:A,children:[{type:b,tag:x,props:{id:"installing-gurobi-7-on-linux"},children:[{type:b,tag:f,props:{href:"#installing-gurobi-7-on-linux",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bO}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Disclaimer:"}]},{type:a,value:" What I did here might work on Windows or OSX, but I give no\nguarantee."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Request by Clóvis Gonzaga."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"First, create an account "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.gurobi.com\u002F",rel:[l,m,n],target:o},children:[{type:a,value:M}]},{type:a,value:" and login."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Secondly, download the appropriate Gurobi version clicking on "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.gurobi.com\u002Fdownloads\u002Fuser\u002Fgurobi-optimizer",rel:[l,m,n],target:o},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Gurobi\nOptimizer"}]}]},{type:a,value:".\nIn my case, it is Linux 64 bits. Where to download this is optional, but you\nhave to remember, as we'll use later. I use a folder "},{type:b,tag:e,props:{},children:[{type:a,value:"packages"}]},{type:a,value:" on my home\nfolder."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Third, unpack the file. For linux, you might have a "},{type:b,tag:G,props:{},children:[{type:a,value:"file-roller"}]},{type:a,value:" that allows\nclicking and unpacking trivially, but I'll use the command line.\nOpen a terminal and navigate to the folder where you downloaded the file."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"tar -zxf gurobi7.0.2_linux64.tar.gz\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This creates folder "},{type:b,tag:e,props:{},children:[{type:a,value:"gurobi702"}]},{type:a,value:". Inside is folder "},{type:b,tag:e,props:{},children:[{type:a,value:"linux64"}]},{type:a,value:".\nInside are many folders, one being "},{type:b,tag:e,props:{},children:[{type:a,value:"docs"}]},{type:a,value:" which include the quick start guide\nyou might want to read (or not)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Fourth, your system needs to see this installation. On "},{type:b,tag:e,props:{},children:[{type:a,value:bT}]},{type:a,value:" (the usual\nterminal on Ubuntu), you have to open file "},{type:b,tag:e,props:{},children:[{type:a,value:bU}]},{type:a,value:" on your home folder, to\ninput some variables."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"gedit $HOME\u002F.bashrc\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"input the following at the end of the file:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"export GUROBI_HOME=\"\u002FFULL\u002FPATH\u002Fgurobi702\u002Flinux64\"\nexport PATH=\"${PATH}:${GUROBI_HOME}\u002Fbin\"\nexport LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:${GUROBI_HOME}\u002Flib\"\nexport GRB_LICENSE_FILE=\"$HOME\u002Fgurobi.lic\"\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Notice the "},{type:b,tag:e,props:{},children:[{type:a,value:"\u002FFULL\u002FPATH"}]},{type:a,value:" part. This is where you downloaded the package, but it\nhas to be the full path there. You can use "},{type:b,tag:e,props:{},children:[{type:a,value:"$HOME"}]},{type:a,value:" to reference your home\nfolder. For instance, your "},{type:b,tag:e,props:{},children:[{type:a,value:"Desktop"}]},{type:a,value:" is in "},{type:b,tag:e,props:{},children:[{type:a,value:"$HOME\u002FDesktop"}]},{type:a,value:". My packages folder\nis "},{type:b,tag:e,props:{},children:[{type:a,value:"$HOME\u002Fpackages"}]},{type:a,value:".\nAlso notice the "},{type:b,tag:e,props:{},children:[{type:a,value:"GRB_LICENSE_FILE"}]},{type:a,value:" variable. If you intend to put your license\nsomewhere else, you'll need to change that part."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"After that is done you need to either (a) close and reopen the terminal or (b)\ninput "},{type:b,tag:e,props:{},children:[{type:a,value:"source $HOME\u002F.bashrc"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"To know that it's working"}]},{type:a,value:" enter "},{type:b,tag:e,props:{},children:[{type:a,value:"grbgetkey"}]},{type:a,value:" on the terminal. If it's working,\na message like"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Gurobi license key client (version 7.0.2)\nCopyright (c) 2017, Gurobi Optimization, Inc.\n\nEnter the Key Code for the license you are activating\n(format is xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx):\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"will appear. Press \"CTRL+C\" or close the terminal, because you need to get the\nlicense."}]},{type:a,value:c},{type:b,tag:J,props:{id:bP},children:[{type:b,tag:f,props:{href:"#getting-the-license",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bQ}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you already applied for a license before installing Gurobi, you can go to\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fuser.gurobi.com\u002Fdownload\u002Flicenses\u002Fcurrent",rel:[l,m,n],target:o},children:[{type:a,value:"this page"}]},{type:a,value:" to see your\navailable licenses. Otherwise, you need to (a) buy a license; (b) apply for\nan academic license or (c) ask for a trial license.\nI'm gonna focus on the academic license."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Get your academic license clicking on "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.gurobi.com\u002Fdownloads\u002Fuser\u002Flicenses\u002Ffree-academic",rel:[l,m,n],target:o},children:[{type:a,value:"\"Academic\nLicenses\""}]},{type:a,value:".\nAccept the conditions and agreements and click \"Request License\".\nNotice that you need to fulfill some requirement to ask for an academic\nlicense, like being a student or professor."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"After requesting your license, you will get to a page showing your license\ninformation and a line saying"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"grbgetkey xxxxxxxxxxxxxx\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Copy all that line and paste on your terminal."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The software will connect to Gurobi and check that it's a valid serial number,\nand then will download a file "},{type:b,tag:e,props:{},children:[{type:a,value:"gurobi.lic"}]},{type:a,value:". (Press ENTER or choose a different\nfolder). If you choose a different folder, remember to change "},{type:b,tag:e,props:{},children:[{type:a,value:bU}]},{type:a,value:"\naccordingly."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To check that it's working, enter"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"gurobi.sh\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"on a terminal. It will a \"Gurobi Interactive Shell\" message and a prompt\n\"gurobi\u003E \". It if gives any error, check the Quick User Guide."}]},{type:a,value:c},{type:b,tag:J,props:{id:bR},children:[{type:b,tag:f,props:{href:"#gurobi-with-jump-in-julia",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bS}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For the advanced students, if you know the "},{type:b,tag:f,props:{href:al,rel:[l,m,n],target:o},children:[{type:a,value:"Julia\nLanguage"}]},{type:a,value:", and the "},{type:b,tag:f,props:{href:bA,rel:[l,m,n],target:o},children:[{type:a,value:"JuMP Modelling\nLanguage"}]},{type:a,value:", you should be able to install\nGurobi with the julia command "},{type:b,tag:e,props:{},children:[{type:a,value:"Pkg.add(\"Gurobi\")"}]},{type:a,value:" now. Make sure you're in a\nterminal with all variables set."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The following examples solves a simple problem with JuMP and Gurobi:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using JuMP, Gurobi\n\nm = Model(solver=GurobiSolver(Presolve=0)) # Presolve=0 otherwise it will be trivial\n@variable(m, x[1:2] \u003E= 0, Int)\n@objective(m, Max, x[1] + 2*x[2])\n@constraint(m, x[1] + 10*x[2] \u003C= 30)\n@constraint(m, 10*x[1] + x[2] \u003C= 29)\nsolve(m)\ngetvalue(x)\n"}]}]}]}]},dir:C,path:"\u002Fblog\u002F2017-03-13-installing-gurobi-7-on-linux",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Installing Gurobi 7 on Linux\n\n_Disclaimer:_ What I did here might work on Windows or OSX, but I give no\nguarantee.\n\n_Request by Clóvis Gonzaga._\n\nFirst, create an account [here](http:\u002F\u002Fwww.gurobi.com\u002F) and login.\n\nSecondly, download the appropriate Gurobi version clicking on [_Gurobi\nOptimizer_](http:\u002F\u002Fwww.gurobi.com\u002Fdownloads\u002Fuser\u002Fgurobi-optimizer).\nIn my case, it is Linux 64 bits. Where to download this is optional, but you\nhave to remember, as we'll use later. I use a folder `packages` on my home\nfolder.\n\nThird, unpack the file. For linux, you might have a _file-roller_ that allows\nclicking and unpacking trivially, but I'll use the command line.\nOpen a terminal and navigate to the folder where you downloaded the file.\n\n```\ntar -zxf gurobi7.0.2_linux64.tar.gz\n```\n\nThis creates folder `gurobi702`. Inside is folder `linux64`.\nInside are many folders, one being `docs` which include the quick start guide\nyou might want to read (or not).\n\nFourth, your system needs to see this installation. On `bash` (the usual\nterminal on Ubuntu), you have to open file `.bashrc` on your home folder, to\ninput some variables.\n\n```\ngedit $HOME\u002F.bashrc\n```\n\ninput the following at the end of the file:\n\n```\nexport GUROBI_HOME=\"\u002FFULL\u002FPATH\u002Fgurobi702\u002Flinux64\"\nexport PATH=\"${PATH}:${GUROBI_HOME}\u002Fbin\"\nexport LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:${GUROBI_HOME}\u002Flib\"\nexport GRB_LICENSE_FILE=\"$HOME\u002Fgurobi.lic\"\n```\n\nNotice the `\u002FFULL\u002FPATH` part. This is where you downloaded the package, but it\nhas to be the full path there. You can use `$HOME` to reference your home\nfolder. For instance, your `Desktop` is in `$HOME\u002FDesktop`. My packages folder\nis `$HOME\u002Fpackages`.\nAlso notice the `GRB_LICENSE_FILE` variable. If you intend to put your license\nsomewhere else, you'll need to change that part.\n\nAfter that is done you need to either (a) close and reopen the terminal or (b)\ninput `source $HOME\u002F.bashrc`.\n\n**To know that it's working** enter `grbgetkey` on the terminal. If it's working,\na message like\n\n```\nGurobi license key client (version 7.0.2)\nCopyright (c) 2017, Gurobi Optimization, Inc.\n\nEnter the Key Code for the license you are activating\n(format is xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx):\n```\n\nwill appear. Press \"CTRL+C\" or close the terminal, because you need to get the\nlicense.\n\n## Getting the LICENSE\n\nIf you already applied for a license before installing Gurobi, you can go to\n[this page](https:\u002F\u002Fuser.gurobi.com\u002Fdownload\u002Flicenses\u002Fcurrent) to see your\navailable licenses. Otherwise, you need to (a) buy a license; (b) apply for\nan academic license or (c) ask for a trial license.\nI'm gonna focus on the academic license.\n\nGet your academic license clicking on [\"Academic\nLicenses\"](http:\u002F\u002Fwww.gurobi.com\u002Fdownloads\u002Fuser\u002Flicenses\u002Ffree-academic).\nAccept the conditions and agreements and click \"Request License\".\nNotice that you need to fulfill some requirement to ask for an academic\nlicense, like being a student or professor.\n\nAfter requesting your license, you will get to a page showing your license\ninformation and a line saying\n\n```\ngrbgetkey xxxxxxxxxxxxxx\n```\n\nCopy all that line and paste on your terminal.\n\nThe software will connect to Gurobi and check that it's a valid serial number,\nand then will download a file `gurobi.lic`. (Press ENTER or choose a different\nfolder). If you choose a different folder, remember to change `.bashrc`\naccordingly.\n\nTo check that it's working, enter\n\n```\ngurobi.sh\n```\n\non a terminal. It will a \"Gurobi Interactive Shell\" message and a prompt\n\"gurobi\u003E \". It if gives any error, check the Quick User Guide.\n\n## Gurobi with JuMP in Julia\n\nFor the advanced students, if you know the [Julia\nLanguage](https:\u002F\u002Fjulialang.org), and the [JuMP Modelling\nLanguage](https:\u002F\u002Fgithub.com\u002FJuliaOpt\u002FJuMP.jl), you should be able to install\nGurobi with the julia command `Pkg.add(\"Gurobi\")` now. Make sure you're in a\nterminal with all variables set.\n\nThe following examples solves a simple problem with JuMP and Gurobi:\n\n```\nusing JuMP, Gurobi\n\nm = Model(solver=GurobiSolver(Presolve=0)) # Presolve=0 otherwise it will be trivial\n@variable(m, x[1:2] \u003E= 0, Int)\n@objective(m, Max, x[1] + 2*x[2])\n@constraint(m, x[1] + 10*x[2] \u003C= 30)\n@constraint(m, 10*x[1] + x[2] \u003C= 29)\nsolve(m)\ngetvalue(x)\n```\n"},{slug:"2017-02-20-minicurso-de-julia-no-ix-simposio-de-analise-numerica-e-otimizacao-da-ufpr",title:bV,date:"2017-02-20",tags:[H,K,"simposio",aB,bW],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"minicurso-de-julia-no-ix-simpósio-de-análise-numérica-e-otimização-da-ufpr"},children:[{type:b,tag:f,props:{href:"#minicurso-de-julia-no-ix-simp%C3%B3sio-de-an%C3%A1lise-num%C3%A9rica-e-otimiza%C3%A7%C3%A3o-da-ufpr",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bV}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Hoje ministrarei mais um minicurso de Julia na UFPR.\nDesta vez será no IX Simpósio de Análise Numérica e Otimização da UFPR."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Por enquanto, deixo esta página apenas com o link para o notebook que utilizarei:\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fjulia-simposio2017",rel:[l,m,n],target:o},children:[{type:a,value:S}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2017-02-20-minicurso-de-julia-no-ix-simposio-de-analise-numerica-e-otimizacao-da-ufpr",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Minicurso de Julia no IX Simpósio de Análise Numérica e Otimização da UFPR\n\nHoje ministrarei mais um minicurso de Julia na UFPR.\nDesta vez será no IX Simpósio de Análise Numérica e Otimização da UFPR.\n\nPor enquanto, deixo esta página apenas com o link para o notebook que utilizarei:\n[aqui](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fjulia-simposio2017).\n"},{slug:"2017-02-17-nlpmodelsjl-and-cutestjl-constrained-optimization",title:bX,date:"2017-02-17",tags:[H,bY,_,K,Y,"constrained"],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"nlpmodelsjl-and-cutestjl-constrained-optimization"},children:[{type:b,tag:f,props:{href:"#nlpmodelsjl-and-cutestjl-constrained-optimization",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:bX}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is a continuation of "},{type:b,tag:f,props:{href:bZ,rel:[l,m,n],target:o},children:[{type:a,value:b_}]},{type:a,value:".\nAnd again, you can follow the commands of this post in the\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fasciinema.org\u002Fa\u002F103654",rel:[l,m,n],target:o},children:[{type:a,value:"asciinema"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you followed along last post, you should know the basics of our\nNLPModels API, including CUTEst access."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"One thing I didn't explore, though, was constrained problems.\nIt'd complicate too much."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"However, now that we know how to handle the basics, we can move to the\nadvanced."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Nonlinear Programming format"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The NLPModels internal structure is based on the CUTEst way of storing a\nproblem.\nWe use the following form for the optimization problem:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$\n\\begin{align}\n\\min \\quad & f(x) \\\ns.t. \\quad & c_L \\leq c(x) \\leq c_U \\\n& \\ell \\leq x \\leq u\\end{align}\n$$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Given an "},{type:b,tag:e,props:{},children:[{type:a,value:"AbstractNLPModel"}]},{type:a,value:" named "},{type:b,tag:e,props:{},children:[{type:a,value:"nlp"}]},{type:a,value:", the values for $\\ell$, $u$, $c_L$ and\n$c_U$ are stored in an "},{type:b,tag:e,props:{},children:[{type:a,value:"NLPModelMeta"}]},{type:a,value:" structure, and can be accessed by\nthrough "},{type:b,tag:e,props:{},children:[{type:a,value:"nlp.meta"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Let's look back at the simple Rosenbrock problem of before."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using NLPModels\n\nf(x) = (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2\nx0 = [-1.2; 1.0]\nnlp = ADNLPModel(f, x0)\nprint(nlp.meta)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"You should be seeing this:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Minimization problem Generic\nnvar = 2, ncon = 0 (0 linear)\nlvar = -Inf  -Inf\nuvar = Inf  Inf\nlcon = ∅\nucon = ∅\nx0 = -1.2  1.0\ny0 = ∅\nnnzh = 4\nnnzj = 0\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Although the meaning of these values is reasonably straigthforward, I'll explain a bit."}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"nvar"}]},{type:a,value:" is the number of variables in a problem;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"ncon"}]},{type:a,value:" is the number of constraints, without counting the bounds;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"lvar"}]},{type:a,value:" is the vector $\\ell$, the lower bounds on the variables;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"uvar"}]},{type:a,value:" is the vector $u$, the upper bounds on the variables;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:aC}]},{type:a,value:" is the vector $c_L$, the lower bounds of the constraints function;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:aD}]},{type:a,value:" is the vector $c_U$, the upper bounds of the constraints function;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"x0"}]},{type:a,value:" is the initial approximation to the solution, aka the starting point;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"y0"}]},{type:a,value:" is the initial approximation to the Lagrange multipliers;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:aE}]},{type:a,value:" is the number of nonzeros on the Hessian¹;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:b$}]},{type:a,value:" is the number of nonzeros on the Jacobian¹;"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"¹ "},{type:b,tag:e,props:{},children:[{type:a,value:aE}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:b$}]},{type:a,value:" are not consistent between models, because some consider the dense matrix, and for the Hessian, some consider only the triangle. However, if you're possibly considering using "},{type:b,tag:e,props:{},children:[{type:a,value:aE}]},{type:a,value:", you're probably looking for "},{type:b,tag:e,props:{},children:[{type:a,value:ca}]},{type:a,value:" too, and "},{type:b,tag:e,props:{},children:[{type:a,value:ca}]},{type:a,value:" returns with the correct size."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"These values can be accessed directly as fields in "},{type:b,tag:e,props:{},children:[{type:a,value:aF}]},{type:a,value:" with the same name above."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"nlp.meta.ncon\nnlp.meta.x0\nnlp.meta.lvar\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Bounds"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, let's create a bounded problem."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"nlp = ADNLPModel(f, x0, lvar=zeros(2), uvar=[0.4; 0.6])\nprint(nlp.meta)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now the bounds are set, and you can access them with"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"nlp.meta.lvar\nnlp.meta.uvar\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"That's pretty much it. For "},{type:b,tag:e,props:{},children:[{type:a,value:cb}]},{type:a,value:", it's the same thing.\n"},{type:b,tag:e,props:{},children:[{type:a,value:an}]},{type:a,value:" inherits the bounds, as expected:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using JuMP\n\njmp = Model()\nu = [0.4; 0.6]\n@variable(jmp, 0 \u003C= x[i=1:2] \u003C= u[i], start=(x0[i]))\n@NLobjective(jmp, Min, (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2)\nmpbnlp = MathProgNLPModel(jmp)\nprint(mpbnlp.meta)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For CUTEst, there is no differentiation on creating a problem with bounds or\nnot, since it uses the internal description of the problem.\nFor instance, "},{type:b,tag:e,props:{},children:[{type:a,value:"HS4"}]},{type:a,value:" is a bounded problem."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using CUTEst\n\nclp = CUTEstModel(\"HS4\")\nprint(clp.meta)\nfinalize(clp)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Notice that it can happen that one or more of the variables is unlimited\n(lower, upper or both). This is represented by the value "},{type:b,tag:e,props:{},children:[{type:a,value:cc}]},{type:a,value:" in Julia.\nThis should be expected since the unconstrained problem already used these\n"},{type:b,tag:e,props:{},children:[{type:a,value:cc}]},{type:a,value:" values."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"On the other hand, it could happen that $\\ell_i = u_i$, in which case the\nvariable is fixed, or that $\\ell_i \u003E u_i$, in which case the variable (and the\nproblem) is infeasible.\nNote that "},{type:b,tag:e,props:{},children:[{type:a,value:"NLPModels"}]},{type:a,value:" only creates the model, it doesn't check whether it is\nfeasible or not, even in this simple example. That said, CUTEst shouldn't have\nany infeasible variable."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Furthermore, all these types of bounds can be accessed from "},{type:b,tag:e,props:{},children:[{type:a,value:aF}]},{type:a,value:". Notice that\nthere are 6 possible situations:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Free variables, stored in "},{type:b,tag:e,props:{},children:[{type:a,value:"meta.ifree"}]},{type:a,value:Z}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Fixed variables, stored in "},{type:b,tag:e,props:{},children:[{type:a,value:"meta.ifix"}]},{type:a,value:Z}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Variables bounded below, stored in "},{type:b,tag:e,props:{},children:[{type:a,value:"meta.ilow"}]},{type:a,value:Z}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Variables bounded above, stored in "},{type:b,tag:e,props:{},children:[{type:a,value:"meta.iupp"}]},{type:a,value:Z}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Variables bounded above and below, stored in "},{type:b,tag:e,props:{},children:[{type:a,value:"meta.irng"}]},{type:a,value:Z}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Infeasible variables, stored in "},{type:b,tag:e,props:{},children:[{type:a,value:"meta.iinf"}]},{type:a,value:w}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Here is one example with one of each of them"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"nlp = ADNLPModel(x-\u003Edot(x,x), zeros(6),\n  lvar = [-Inf, -Inf, 0.0, 0.0, 0.0,  0.0],\n  uvar = [ Inf,  1.0, Inf, 1.0, 0.0, -1.0])\nnlp.meta.ifree\nnlp.meta.ifix\nnlp.meta.ilow\nnlp.meta.iupp\nnlp.meta.irng\nnlp.meta.iinf\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Constraints"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Constraints are stored in NLPModels following in the format $c_L \\leq c(x) \\leq c_U$.\nThat means that an equality constraint happens when $c_{L_j} = c_{U_j}$.\nLet's look at how to create a problem with constraints."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For "},{type:b,tag:e,props:{},children:[{type:a,value:ao}]},{type:a,value:", you need to pass three keywords arguments: "},{type:b,tag:e,props:{},children:[{type:a,value:aG}]},{type:a,value:N},{type:b,tag:e,props:{},children:[{type:a,value:aC}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:aD}]},{type:a,value:",\nwhich represent $c(x)$, $c_L$ and $c_U$, respectively.\nFor instance, the problem"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$\n\\begin{align}\n\\min \\quad & x_1^2 + x_2^2 \\\ns.t. \\quad & x_1 + x_2 = 1\n\\end{align}\n$$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"is created by doing"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"c(x) = [x[1] + x[2] - 1]\nlcon = [0.0]\nucon = [0.0]\nnlp = ADNLPModel(x-\u003Edot(x,x), zeros(2), c=c, lcon=lcon, ucon=ucon)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"or alternatively, if you don't want the intermediary functions"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"nlp = ADNLPModel(x-\u003Edot(x,x), zeros(2), c=x-\u003E[x[1]+x[2]-1], lcon=[0.0], ucon=[0.0])\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Another possibility is to do"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"nlp = ADNLPModel(x-\u003Edot(x,x), zeros(2), c=x-\u003E[x[1]+x[2]], lcon=[1.0], ucon=[1.0])\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Personally, I prefer the former."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For inequalities, you can have only lower, only upper, and both.\nThe commands"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"nlp = ADNLPModel(x-\u003Edot(x,x), zeros(2),\n  c=x-\u003E[x[1] + x[2]; 3x[1] + 2x[2]; x[1]*x[2]],\n  lcon = [-1.0; -Inf; 1.0],\n  ucon = [Inf;   3.0; 2.0])\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"implement the problem"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$\n\\begin{align}\n\\min \\quad & x_1^2 + x_2^2 \\\ns.t. \\quad & x_1 + x_2 \\geq -1 \\\n& 3x_1 + 2x_2 \\leq 3 \\\n& 1 \\leq x_1x_2 \\leq 2.\n\\end{align}\n$$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Again, the types of constraints can be accessed in "},{type:b,tag:e,props:{},children:[{type:a,value:aF}]},{type:a,value:", through\n"},{type:b,tag:e,props:{},children:[{type:a,value:"nlp.meta.jfix"}]},{type:a,value:N},{type:b,tag:e,props:{},children:[{type:a,value:"jfree"}]},{type:a,value:N},{type:b,tag:e,props:{},children:[{type:a,value:"jinf"}]},{type:a,value:N},{type:b,tag:e,props:{},children:[{type:a,value:"jlow"}]},{type:a,value:N},{type:b,tag:e,props:{},children:[{type:a,value:"jrng"}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:"jupp"}]},{type:a,value:".\nNotice if you forget to set "},{type:b,tag:e,props:{},children:[{type:a,value:aC}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:aD}]},{type:a,value:", there will be no\nconstraints, even though "},{type:b,tag:e,props:{},children:[{type:a,value:aG}]},{type:a,value:" is set. This is because the number of\nconstraints is taken from the lenght of these vectors."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, to access these constraints, let's consider this simple problem."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"nlp = ADNLPModel(f, x0, c=x-\u003E[x[1]*x[2] - 0.5], lcon=[0.0], ucon=[0.0])\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:cd},{type:b,tag:e,props:{},children:[{type:a,value:"cons"}]},{type:a,value:" return $c(x)$."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cons(nlp, nlp.meta.x0)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:cd},{type:b,tag:e,props:{},children:[{type:a,value:"jac"}]},{type:a,value:" returns the Jacobian of $c$. "},{type:b,tag:e,props:{},children:[{type:a,value:"jprod"}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:"jtprod"}]},{type:a,value:" the\nJacobian product times a vector, and "},{type:b,tag:e,props:{},children:[{type:a,value:"jac_op"}]},{type:a,value:" the LinearOperator."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"jac(nlp, nlp.meta.x0)\njprod(nlp, nlp.meta.x0, ones(2))\njtprod(nlp, nlp.meta.x0, ones(1))\nJ = jac_op(nlp, nlp.meta.x0)\nJ * ones(2)\nJ' * ones(1)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To get the Hessian we'll use the same functions as the unconstrained case,\nwith the addition of a keyword parameter "},{type:b,tag:e,props:{},children:[{type:a,value:"y"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"y = [1e4]\nhess(nlp, nlp.meta.x0, y=y)\nhprod(nlp, nlp.meat.x0, ones(2))\nH = hess_op(nlp, nlp.meta.x0, y=y)\nH * ones(2)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you want to ignore the objective function, or scale it by some value,\nyou can use the keyword parameter "},{type:b,tag:e,props:{},children:[{type:a,value:"obj_weight"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"s = 0.0\nhess(nlp, nlp.meta.x0, y=y, obj_weight=s)\nhprod(nlp, nlp.meat.x0, ones(2), obj_weight=s)\nH = hess_op(nlp, nlp.meta.x0, y=y, obj_weight=s)\nH * ones(2)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Check the\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fjuliasmoothoptimizers.github.io\u002FNLPModels.jl\u002Fstable\u002Fapi.html",rel:[l,m,n],target:o},children:[{type:a,value:"API"}]},{type:a,value:"\nfor more details."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We can also create a constrained JuMP model."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"x0 = [-1.2; 1.0]\njmp = Model()\n@variable(jmp, x[i=1:2], start=(x0[i]))\n@NLobjective(jmp, Min, (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2)\n@NLcontraint(jmp, x[1]*x[2] == 0.5)\nmpbnlp = MathProgNLPModel(jmp)\ncons(mpbnlp, mpbnlp.meta.x0)\njac(mpbnlp, mpbnlp.meta.x0)\nhess(mpbnlp, mpbnlp.meta.x0, y=y)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"And again, the access in CUTEst problems is the same."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"clp = CUTEstModel(\"BT1\")\ncons(clp, clp.meta.x0)\njac(clp, clp.meta.x0)\nhess(clp, clp.meta.x0, y=clp.meta.y0)\nfinalize(clp)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Convenience functions"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"There are some convenience functions to check whether a problem has only\nequalities, only bounds, etc.\nFor clarification, we're gonna say function constraint to refer to constraints that are not bounds."}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:ce}]},{type:a,value:cf},{type:b,tag:e,props:{},children:[{type:a,value:r}]},{type:a,value:" is variable has bounds."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:cg}]},{type:a,value:cf},{type:b,tag:e,props:{},children:[{type:a,value:r}]},{type:a,value:" if "},{type:b,tag:e,props:{},children:[{type:a,value:ce}]},{type:a,value:" and no function\nconstraints;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"unconstrained"}]},{type:a,value:": No function constraints nor bounds;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"linearly_constrained"}]},{type:a,value:": There are function constraints, and they are\nlinear; "},{type:b,tag:G,props:{},children:[{type:a,value:"obs: even though a "},{type:b,tag:e,props:{},children:[{type:a,value:cg}]},{type:a,value:" problem is linearly\nconstrained, this will return false"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"equality_constrained"}]},{type:a,value:": There are function constraints, and they are all equalities;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"inequality_constrained"}]},{type:a,value:": There are function constraints, and they are all inequalities;"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Example solver"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Let's implement a \"simple\" solver for constrained optimization.\nOur solver will loosely follow the Byrd-Omojokun implementation of"}]},{type:a,value:c},{type:b,tag:bM,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"M. Lalee, J. Nocedal, and T. Plantenga. "},{type:b,tag:v,props:{},children:[{type:a,value:"On the implementation of an algorithm for large-scale equality constrained optimization"}]},{type:a,value:". SIAM J. Optim., Vol. 8, No. 3, pp. 682-706, 1998."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"function solver(nlp :: AbstractNLPModel)\n  if !equality_constrained(nlp)\n    error(\"This solver is for equality constrained problems\")\n  elseif has_bounds(nlp)\n    error(\"Can't handle bounds\")\n  end\n\n  x = nlp.meta.x0\n\n  fx = obj(nlp, x)\n  cx = cons(nlp, x)\n\n  ∇fx = grad(nlp, x)\n  Jx = jac_op(nlp, x)\n\n  λ = cgls(Jx', -∇fx)[1]\n  ∇ℓx = ∇fx + Jx'*λ\n  norm∇ℓx = norm(∇ℓx)\n\n  Δ = max(0.1, min(100.0, 10norm∇ℓx))\n  μ = 1\n  v = zeros(nlp.meta.nvar)\n\n  iter = 0\n  while (norm∇ℓx \u003E 1e-4 || norm(cx) \u003E 1e-4) && (iter \u003C 10000)\n    # Vertical step\n    if norm(cx) \u003E 1e-4\n      v = cg(Jx'*Jx, -Jx'*cx, radius=0.8Δ)[1]\n      Δp = sqrt(Δ^2 - dot(v,v))\n    else\n      fill!(v, 0)\n      Δp = Δ\n    end\n\n    # Horizontal step\n    # Simplified to consider only ∇ℓx = proj(∇f, Nu(A))\n    B = hess_op(nlp, x, y=λ)\n    B∇ℓx = B * ∇ℓx\n    gtBg = dot(∇ℓx, B∇ℓx)\n    gtγ = dot(∇ℓx, ∇fx + B * v)\n    t = if gtBg \u003C= 0\n      norm∇ℓx \u003E 0 ? Δp\u002Fnorm∇ℓx : 0.0\n    else\n      t = min(gtγ\u002FgtBg, Δp\u002Fnorm∇ℓx)\n    end\n\n    d = v - t * ∇ℓx\n\n    # Trial step acceptance\n    xt = x + d\n    ft = obj(nlp, xt)\n    ct = cons(nlp, xt)\n    γ = dot(d, ∇fx) + 0.5*dot(d, B * d)\n    θ = norm(cx) - norm(Jx * d + cx)\n    normλ = norm(λ, Inf)\n    if θ \u003C= 0\n      μ = normλ\n    elseif normλ \u003E γ\u002Fθ\n      μ = min(normλ, 0.1 + γ\u002Fθ)\n    else\n      μ = 0.1 + γ\u002Fθ\n    end\n    Pred = -γ + μ * θ\n    Ared = fx - ft + μ * (norm(cx) - norm(ct))\n\n    ρ = Ared\u002FPred\n    if ρ \u003E 1e-2\n      x .= xt\n      fx = ft\n      cx .= ct\n      ∇fx = grad(nlp, x)\n      Jx = jac_op(nlp, x)\n      λ = cgls(Jx', -∇fx)[1]\n      ∇ℓx = ∇fx + Jx'*λ\n      norm∇ℓx = norm(∇ℓx)\n      if ρ \u003E 0.75 && norm(d) \u003E 0.99Δ\n        Δ *= 2.0\n      end\n    else\n      Δ *= 0.5\n    end\n\n    iter += 1\n  end\n\n  return x, fx, norm∇ℓx, norm(cx)\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Too loosely, in fact."}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"The horizontal step computes only the Cauchy step;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"No special updates;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"No second-order correction;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"No efficient implementation beyond the easy-to-do."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To test how good it is, let's run on the Hock-Schittkowski constrained problems."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"function runcutest()\n  problems = filter(x-\u003Econtains(x, \"HS\") && length(x) \u003C= 5, CUTEst.select(only_free_var=true, only_equ_con=true))\n  sort!(problems)\n  @printf(\"%-7s  %15s  %15s  %15s\\n\",\n          \"Problem\", \"f(x)\", \"‖∇ℓ(x,λ)‖\", \"‖c(x)‖\")\n  for p in problems\n    nlp = CUTEstModel(p)\n    try\n      x, fx, nlx, ncx = solver(nlp)\n      @printf(\"%-7s  %15.8e  %15.8e  %15.8e\\n\", p, fx, nlx, ncx)\n    catch\n      @printf(\"%-7s  %s\\n\", p, \"failure\")\n    finally\n      finalize(nlp)\n    end\n  end\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I'm gonna print the output of this one, so you can compare it with yours."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Problem             f(x)        ‖∇ℓ(x,λ)‖           ‖c(x)‖\nHS26      5.15931251e-07   9.88009545e-05   5.24359322e-05\nHS27      4.00000164e-02   5.13264248e-05   2.26312672e-09\nHS28      7.00144545e-09   9.46563681e-05   2.44249065e-15\nHS39     -1.00000010e+00   1.99856691e-08   1.61607518e-07\nHS40     -2.50011760e-01   4.52797064e-05   2.53246505e-05\nHS42      1.38577292e+01   5.06661945e-05   5.33092868e-05\nHS46      3.56533430e-06   9.98827045e-05   8.00086215e-05\nHS47      3.53637757e-07   9.71339790e-05   7.70496596e-05\nHS48      4.65110036e-10   4.85457139e-05   2.27798719e-15\nHS49      3.14248189e-06   9.94899395e-05   2.27488138e-13\nHS50      1.36244906e-12   2.16913725e-06   2.90632554e-14\nHS51      1.58249170e-09   8.52213221e-05   6.52675179e-15\nHS52      5.32664756e+00   3.35626559e-05   3.21155766e-14\nHS56     -3.45604528e+00   9.91076239e-05   3.14471179e-05\nHS6       5.93063756e-13   6.88804464e-07   9.61311292e-06\nHS61     -1.43646176e+02   1.06116455e-05   1.80421875e-05\nHS7      -1.73205088e+00   1.23808109e-11   2.60442422e-07\nHS77      2.41501014e-01   8.31210333e-05   7.75367223e-05\nHS78     -2.91972281e+00   2.27102179e-05   2.88776440e-05\nHS79      7.87776482e-02   4.77319205e-05   7.55827729e-05\nHS8      -1.00000000e+00   0.00000000e+00   2.39989802e-06\nHS9      -5.00000000e-01   1.23438228e-06   3.55271368e-15\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you compare against the Hock-Schitkowski paper, you'll see that\nthe method converged for all 22 problems.\nConsidering our simplifications, this is a very exciting."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"That's all for now. Use our RSS feed to keep updated."}]}]},dir:C,path:"\u002Fblog\u002F2017-02-17-nlpmodelsjl-and-cutestjl-constrained-optimization",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# NLPModels.jl and CUTEst.jl&#58; Constrained optimization\n\nThis is a continuation of [this\npost](https:\u002F\u002Fabelsiqueira.github.io{{local_prefix}}nlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia\u002F).\nAnd again, you can follow the commands of this post in the\n[asciinema](https:\u002F\u002Fasciinema.org\u002Fa\u002F103654).\n\nIf you followed along last post, you should know the basics of our\nNLPModels API, including CUTEst access.\n\nOne thing I didn't explore, though, was constrained problems.\nIt'd complicate too much.\n\nHowever, now that we know how to handle the basics, we can move to the\nadvanced.\n\n**Nonlinear Programming format**\n\nThe NLPModels internal structure is based on the CUTEst way of storing a\nproblem.\nWe use the following form for the optimization problem:\n\n$$\n\\begin{align}\n\\min \\quad & f(x) \\\\\ns.t. \\quad & c_L \\leq c(x) \\leq c_U \\\\\n& \\ell \\leq x \\leq u\\end{align}\n$$\n\nGiven an `AbstractNLPModel` named `nlp`, the values for $\\ell$, $u$, $c_L$ and\n$c_U$ are stored in an `NLPModelMeta` structure, and can be accessed by\nthrough `nlp.meta`.\n\nLet's look back at the simple Rosenbrock problem of before.\n\n```\nusing NLPModels\n\nf(x) = (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2\nx0 = [-1.2; 1.0]\nnlp = ADNLPModel(f, x0)\nprint(nlp.meta)\n```\n\nYou should be seeing this:\n\n```\nMinimization problem Generic\nnvar = 2, ncon = 0 (0 linear)\nlvar = -Inf  -Inf\nuvar = Inf  Inf\nlcon = ∅\nucon = ∅\nx0 = -1.2  1.0\ny0 = ∅\nnnzh = 4\nnnzj = 0\n```\n\nAlthough the meaning of these values is reasonably straigthforward, I'll explain a bit.\n\n- `nvar` is the number of variables in a problem;\n- `ncon` is the number of constraints, without counting the bounds;\n- `lvar` is the vector $\\ell$, the lower bounds on the variables;\n- `uvar` is the vector $u$, the upper bounds on the variables;\n- `lcon` is the vector $c_L$, the lower bounds of the constraints function;\n- `ucon` is the vector $c_U$, the upper bounds of the constraints function;\n- `x0` is the initial approximation to the solution, aka the starting point;\n- `y0` is the initial approximation to the Lagrange multipliers;\n- `nnzh` is the number of nonzeros on the Hessian¹;\n- `nnzj` is the number of nonzeros on the Jacobian¹;\n\n_¹ `nnzh` and `nnzj` are not consistent between models, because some consider the dense matrix, and for the Hessian, some consider only the triangle. However, if you're possibly considering using `nnzh`, you're probably looking for `hess_coord` too, and `hess_coord` returns with the correct size._\n\nThese values can be accessed directly as fields in `meta` with the same name above.\n\n```\nnlp.meta.ncon\nnlp.meta.x0\nnlp.meta.lvar\n```\n\n**Bounds**\n\nNow, let's create a bounded problem.\n\n```\nnlp = ADNLPModel(f, x0, lvar=zeros(2), uvar=[0.4; 0.6])\nprint(nlp.meta)\n```\n\nNow the bounds are set, and you can access them with\n\n```\nnlp.meta.lvar\nnlp.meta.uvar\n```\n\nThat's pretty much it. For `SimpleNLPModel`, it's the same thing.\n`MathProgNLPModel` inherits the bounds, as expected:\n\n```\nusing JuMP\n\njmp = Model()\nu = [0.4; 0.6]\n@variable(jmp, 0 \u003C= x[i=1:2] \u003C= u[i], start=(x0[i]))\n@NLobjective(jmp, Min, (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2)\nmpbnlp = MathProgNLPModel(jmp)\nprint(mpbnlp.meta)\n```\n\nFor CUTEst, there is no differentiation on creating a problem with bounds or\nnot, since it uses the internal description of the problem.\nFor instance, `HS4` is a bounded problem.\n\n```\nusing CUTEst\n\nclp = CUTEstModel(\"HS4\")\nprint(clp.meta)\nfinalize(clp)\n```\n\nNotice that it can happen that one or more of the variables is unlimited\n(lower, upper or both). This is represented by the value `Inf` in Julia.\nThis should be expected since the unconstrained problem already used these\n`Inf` values.\n\nOn the other hand, it could happen that $\\ell_i = u_i$, in which case the\nvariable is fixed, or that $\\ell_i \u003E u_i$, in which case the variable (and the\nproblem) is infeasible.\nNote that `NLPModels` only creates the model, it doesn't check whether it is\nfeasible or not, even in this simple example. That said, CUTEst shouldn't have\nany infeasible variable.\n\nFurthermore, all these types of bounds can be accessed from `meta`. Notice that\nthere are 6 possible situations:\n\n- Free variables, stored in `meta.ifree`;\n- Fixed variables, stored in `meta.ifix`;\n- Variables bounded below, stored in `meta.ilow`;\n- Variables bounded above, stored in `meta.iupp`;\n- Variables bounded above and below, stored in `meta.irng`;\n- Infeasible variables, stored in `meta.iinf`.\n\nHere is one example with one of each of them\n\n```\nnlp = ADNLPModel(x-\u003Edot(x,x), zeros(6),\n  lvar = [-Inf, -Inf, 0.0, 0.0, 0.0,  0.0],\n  uvar = [ Inf,  1.0, Inf, 1.0, 0.0, -1.0])\nnlp.meta.ifree\nnlp.meta.ifix\nnlp.meta.ilow\nnlp.meta.iupp\nnlp.meta.irng\nnlp.meta.iinf\n```\n\n**Constraints**\n\nConstraints are stored in NLPModels following in the format $c_L \\leq c(x) \\leq c_U$.\nThat means that an equality constraint happens when $c_{L_j} = c_{U_j}$.\nLet's look at how to create a problem with constraints.\n\nFor `ADNLPModel`, you need to pass three keywords arguments: `c`, `lcon` and `ucon`,\nwhich represent $c(x)$, $c_L$ and $c_U$, respectively.\nFor instance, the problem\n\n$$\n\\begin{align}\n\\min \\quad & x_1^2 + x_2^2 \\\\\ns.t. \\quad & x_1 + x_2 = 1\n\\end{align}\n$$\n\nis created by doing\n\n```\nc(x) = [x[1] + x[2] - 1]\nlcon = [0.0]\nucon = [0.0]\nnlp = ADNLPModel(x-\u003Edot(x,x), zeros(2), c=c, lcon=lcon, ucon=ucon)\n```\n\nor alternatively, if you don't want the intermediary functions\n\n```\nnlp = ADNLPModel(x-\u003Edot(x,x), zeros(2), c=x-\u003E[x[1]+x[2]-1], lcon=[0.0], ucon=[0.0])\n```\n\nAnother possibility is to do\n\n```\nnlp = ADNLPModel(x-\u003Edot(x,x), zeros(2), c=x-\u003E[x[1]+x[2]], lcon=[1.0], ucon=[1.0])\n```\n\nPersonally, I prefer the former.\n\nFor inequalities, you can have only lower, only upper, and both.\nThe commands\n\n```\nnlp = ADNLPModel(x-\u003Edot(x,x), zeros(2),\n  c=x-\u003E[x[1] + x[2]; 3x[1] + 2x[2]; x[1]*x[2]],\n  lcon = [-1.0; -Inf; 1.0],\n  ucon = [Inf;   3.0; 2.0])\n```\n\nimplement the problem\n\n$$\n\\begin{align}\n\\min \\quad & x_1^2 + x_2^2 \\\\\ns.t. \\quad & x_1 + x_2 \\geq -1 \\\\\n& 3x_1 + 2x_2 \\leq 3 \\\\\n& 1 \\leq x_1x_2 \\leq 2.\n\\end{align}\n$$\n\nAgain, the types of constraints can be accessed in `meta`, through\n`nlp.meta.jfix`, `jfree`, `jinf`, `jlow`, `jrng` and `jupp`.\nNotice if you forget to set `lcon` and `ucon`, there will be no\nconstraints, even though `c` is set. This is because the number of\nconstraints is taken from the lenght of these vectors.\n\nNow, to access these constraints, let's consider this simple problem.\n\n```\nnlp = ADNLPModel(f, x0, c=x-\u003E[x[1]*x[2] - 0.5], lcon=[0.0], ucon=[0.0])\n```\n\nThe function `cons` return $c(x)$.\n\n```\ncons(nlp, nlp.meta.x0)\n```\n\nThe function `jac` returns the Jacobian of $c$. `jprod` and `jtprod` the\nJacobian product times a vector, and `jac_op` the LinearOperator.\n\n```\njac(nlp, nlp.meta.x0)\njprod(nlp, nlp.meta.x0, ones(2))\njtprod(nlp, nlp.meta.x0, ones(1))\nJ = jac_op(nlp, nlp.meta.x0)\nJ * ones(2)\nJ' * ones(1)\n```\n\nTo get the Hessian we'll use the same functions as the unconstrained case,\nwith the addition of a keyword parameter `y`.\n\n```\ny = [1e4]\nhess(nlp, nlp.meta.x0, y=y)\nhprod(nlp, nlp.meat.x0, ones(2))\nH = hess_op(nlp, nlp.meta.x0, y=y)\nH * ones(2)\n```\n\nIf you want to ignore the objective function, or scale it by some value,\nyou can use the keyword parameter `obj_weight`.\n\n```\ns = 0.0\nhess(nlp, nlp.meta.x0, y=y, obj_weight=s)\nhprod(nlp, nlp.meat.x0, ones(2), obj_weight=s)\nH = hess_op(nlp, nlp.meta.x0, y=y, obj_weight=s)\nH * ones(2)\n```\n\nCheck the\n[API](http:\u002F\u002Fjuliasmoothoptimizers.github.io\u002FNLPModels.jl\u002Fstable\u002Fapi.html)\nfor more details.\n\nWe can also create a constrained JuMP model.\n\n```\nx0 = [-1.2; 1.0]\njmp = Model()\n@variable(jmp, x[i=1:2], start=(x0[i]))\n@NLobjective(jmp, Min, (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2)\n@NLcontraint(jmp, x[1]*x[2] == 0.5)\nmpbnlp = MathProgNLPModel(jmp)\ncons(mpbnlp, mpbnlp.meta.x0)\njac(mpbnlp, mpbnlp.meta.x0)\nhess(mpbnlp, mpbnlp.meta.x0, y=y)\n```\n\nAnd again, the access in CUTEst problems is the same.\n\n```\nclp = CUTEstModel(\"BT1\")\ncons(clp, clp.meta.x0)\njac(clp, clp.meta.x0)\nhess(clp, clp.meta.x0, y=clp.meta.y0)\nfinalize(clp)\n```\n\n**Convenience functions**\n\nThere are some convenience functions to check whether a problem has only\nequalities, only bounds, etc.\nFor clarification, we're gonna say function constraint to refer to constraints that are not bounds.\n\n- `has_bounds`: Returns `true` is variable has bounds.\n- `bound_constrained`: Returns `true` if `has_bounds` and no function\n  constraints;\n- `unconstrained`: No function constraints nor bounds;\n- `linearly_constrained`: There are function constraints, and they are\n  linear; _obs: even though a `bound_constrained` problem is linearly\n  constrained, this will return false_.\n- `equality_constrained`: There are function constraints, and they are all equalities;\n- `inequality_constrained`: There are function constraints, and they are all inequalities;\n\n**Example solver**\n\nLet's implement a \"simple\" solver for constrained optimization.\nOur solver will loosely follow the Byrd-Omojokun implementation of\n\n\u003E M. Lalee, J. Nocedal, and T. Plantenga. **On the implementation of an algorithm for large-scale equality constrained optimization**. SIAM J. Optim., Vol. 8, No. 3, pp. 682-706, 1998.\n\n```\nfunction solver(nlp :: AbstractNLPModel)\n  if !equality_constrained(nlp)\n    error(\"This solver is for equality constrained problems\")\n  elseif has_bounds(nlp)\n    error(\"Can't handle bounds\")\n  end\n\n  x = nlp.meta.x0\n\n  fx = obj(nlp, x)\n  cx = cons(nlp, x)\n\n  ∇fx = grad(nlp, x)\n  Jx = jac_op(nlp, x)\n\n  λ = cgls(Jx', -∇fx)[1]\n  ∇ℓx = ∇fx + Jx'*λ\n  norm∇ℓx = norm(∇ℓx)\n\n  Δ = max(0.1, min(100.0, 10norm∇ℓx))\n  μ = 1\n  v = zeros(nlp.meta.nvar)\n\n  iter = 0\n  while (norm∇ℓx \u003E 1e-4 || norm(cx) \u003E 1e-4) && (iter \u003C 10000)\n    # Vertical step\n    if norm(cx) \u003E 1e-4\n      v = cg(Jx'*Jx, -Jx'*cx, radius=0.8Δ)[1]\n      Δp = sqrt(Δ^2 - dot(v,v))\n    else\n      fill!(v, 0)\n      Δp = Δ\n    end\n\n    # Horizontal step\n    # Simplified to consider only ∇ℓx = proj(∇f, Nu(A))\n    B = hess_op(nlp, x, y=λ)\n    B∇ℓx = B * ∇ℓx\n    gtBg = dot(∇ℓx, B∇ℓx)\n    gtγ = dot(∇ℓx, ∇fx + B * v)\n    t = if gtBg \u003C= 0\n      norm∇ℓx \u003E 0 ? Δp\u002Fnorm∇ℓx : 0.0\n    else\n      t = min(gtγ\u002FgtBg, Δp\u002Fnorm∇ℓx)\n    end\n\n    d = v - t * ∇ℓx\n\n    # Trial step acceptance\n    xt = x + d\n    ft = obj(nlp, xt)\n    ct = cons(nlp, xt)\n    γ = dot(d, ∇fx) + 0.5*dot(d, B * d)\n    θ = norm(cx) - norm(Jx * d + cx)\n    normλ = norm(λ, Inf)\n    if θ \u003C= 0\n      μ = normλ\n    elseif normλ \u003E γ\u002Fθ\n      μ = min(normλ, 0.1 + γ\u002Fθ)\n    else\n      μ = 0.1 + γ\u002Fθ\n    end\n    Pred = -γ + μ * θ\n    Ared = fx - ft + μ * (norm(cx) - norm(ct))\n\n    ρ = Ared\u002FPred\n    if ρ \u003E 1e-2\n      x .= xt\n      fx = ft\n      cx .= ct\n      ∇fx = grad(nlp, x)\n      Jx = jac_op(nlp, x)\n      λ = cgls(Jx', -∇fx)[1]\n      ∇ℓx = ∇fx + Jx'*λ\n      norm∇ℓx = norm(∇ℓx)\n      if ρ \u003E 0.75 && norm(d) \u003E 0.99Δ\n        Δ *= 2.0\n      end\n    else\n      Δ *= 0.5\n    end\n\n    iter += 1\n  end\n\n  return x, fx, norm∇ℓx, norm(cx)\nend\n```\n\nToo loosely, in fact.\n\n- The horizontal step computes only the Cauchy step;\n- No special updates;\n- No second-order correction;\n- No efficient implementation beyond the easy-to-do.\n\nTo test how good it is, let's run on the Hock-Schittkowski constrained problems.\n\n```\nfunction runcutest()\n  problems = filter(x-\u003Econtains(x, \"HS\") && length(x) \u003C= 5, CUTEst.select(only_free_var=true, only_equ_con=true))\n  sort!(problems)\n  @printf(\"%-7s  %15s  %15s  %15s\\n\",\n          \"Problem\", \"f(x)\", \"‖∇ℓ(x,λ)‖\", \"‖c(x)‖\")\n  for p in problems\n    nlp = CUTEstModel(p)\n    try\n      x, fx, nlx, ncx = solver(nlp)\n      @printf(\"%-7s  %15.8e  %15.8e  %15.8e\\n\", p, fx, nlx, ncx)\n    catch\n      @printf(\"%-7s  %s\\n\", p, \"failure\")\n    finally\n      finalize(nlp)\n    end\n  end\nend\n```\n\nI'm gonna print the output of this one, so you can compare it with yours.\n\n```\nProblem             f(x)        ‖∇ℓ(x,λ)‖           ‖c(x)‖\nHS26      5.15931251e-07   9.88009545e-05   5.24359322e-05\nHS27      4.00000164e-02   5.13264248e-05   2.26312672e-09\nHS28      7.00144545e-09   9.46563681e-05   2.44249065e-15\nHS39     -1.00000010e+00   1.99856691e-08   1.61607518e-07\nHS40     -2.50011760e-01   4.52797064e-05   2.53246505e-05\nHS42      1.38577292e+01   5.06661945e-05   5.33092868e-05\nHS46      3.56533430e-06   9.98827045e-05   8.00086215e-05\nHS47      3.53637757e-07   9.71339790e-05   7.70496596e-05\nHS48      4.65110036e-10   4.85457139e-05   2.27798719e-15\nHS49      3.14248189e-06   9.94899395e-05   2.27488138e-13\nHS50      1.36244906e-12   2.16913725e-06   2.90632554e-14\nHS51      1.58249170e-09   8.52213221e-05   6.52675179e-15\nHS52      5.32664756e+00   3.35626559e-05   3.21155766e-14\nHS56     -3.45604528e+00   9.91076239e-05   3.14471179e-05\nHS6       5.93063756e-13   6.88804464e-07   9.61311292e-06\nHS61     -1.43646176e+02   1.06116455e-05   1.80421875e-05\nHS7      -1.73205088e+00   1.23808109e-11   2.60442422e-07\nHS77      2.41501014e-01   8.31210333e-05   7.75367223e-05\nHS78     -2.91972281e+00   2.27102179e-05   2.88776440e-05\nHS79      7.87776482e-02   4.77319205e-05   7.55827729e-05\nHS8      -1.00000000e+00   0.00000000e+00   2.39989802e-06\nHS9      -5.00000000e-01   1.23438228e-06   3.55271368e-15\n```\n\nIf you compare against the Hock-Schitkowski paper, you'll see that\nthe method converged for all 22 problems.\nConsidering our simplifications, this is a very exciting.\n\nThat's all for now. Use our RSS feed to keep updated.\n"},{slug:"2017-02-07-nlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia",title:ch,date:"2017-02-07",tags:[H,Y,bY,_,K,"juliasmoothoptimizers",bW],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"nlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia"},children:[{type:b,tag:f,props:{href:"#nlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:ch}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A couple of weeks ago me and Professor "},{type:b,tag:f,props:{href:"https:\u002F\u002Fdpo.github.io",rel:[l,m,n],target:o},children:[{type:a,value:"Dominique Orban"}]},{type:a,value:" have finally made a release of\nCUTEst.jl, a wrapper for the CUTEst repository of problems for nonlinear\noptimization (which I've mentioned before).\nAlong with this release, we've done a release of NLPModels.jl, the underlying\npackage. I think it's time I explain a little about these packages, others,\nand how to use them together.\nIf you want to see the output of the commands, you can open\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fasciinema.org\u002Fa\u002F102371",rel:[l,m,n],target:o},children:[{type:a,value:"this ASCIInema"}]},{type:a,value:"\nside by side."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Obs.: Tutorial using Julia 0.5.0"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Edit: Second part is\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fabelsiqueira.github.io%7B%7Blocal_prefix%7D%7Dnlpmodelsjl-and-cutestjl-constrained-optimization\u002F",rel:[l,m,n],target:o},children:[{type:a,value:M}]},{type:a,value:w}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:bN}]},{type:a,value:c},{type:b,tag:f,props:{href:bj,rel:[l,m,n],target:o},children:[{type:b,tag:B,props:{alt:"JuliaSmoothOptimizers logo",src:"https:\u002F\u002Fjuliasmoothoptimizers.github.io\u002Fassets\u002Flogo.png"},children:[]},{type:a,value:"{: .img-view }"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Most packages mentioned here will be a part of the JuliaSmoothOptimizers (JSO)\norganization. There are more packages in the organization that I won't mention here, but you should check it out."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:aH}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"NLPModels is a package for creating Nonlinear Optimization Models. It is\nfocused on the needs of the solver writer, such as the ability to write one\nsolver that works on many models.\nThe package defines a few models, and there are others on the horizon.\nThe ones already done are:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:ao}]},{type:a,value:": A model with automatic differentiation;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:an}]},{type:a,value:": A model for "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FJuliaOpt\u002FMathProgBase.jl",rel:[l,m,n],target:o},children:[{type:a,value:"MathProgBase"}]},{type:a,value:Q},{type:b,tag:f,props:{href:"http:\u002F\u002Fgithub.com\u002FJuliaOpt\u002FJuMP.jl",rel:[l,m,n],target:o},children:[{type:a,value:am}]},{type:a,value:" conversion, whose utility will be shown below (obs: MPB and JuMP are packages from the JuliaOpt organization);"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:cb}]},{type:a,value:": A model in which nothing is automatic, i.e., all functions have to be provided by the user."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"SlackModel"}]},{type:a,value:": A model that changes all inequalities to equalities adding extra variables;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"LBFGSModel"}]},{type:a,value:L},{type:b,tag:v,props:{},children:[{type:a,value:"LSR1Model"}]},{type:a,value:": Models that create quasi-Newton models from another model."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The first two models are designed to be easy to use; the third is useful for\nefficient model creation in specific cases; the last ones are utility models."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Let's begin by installing NLPModels.jl, and a couple of optional requirements."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Pkg.add(\"NLPModels.jl\")\nPkg.add(\"JuMP.jl\") # Installs ForwardDiff also.\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This should install version 0.1.0. After that, just do"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using NLPModels\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, let's create a simple function: Rosenbrock's."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"f(x) = (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The Rosenbrock problem traditionally starts from $(-1.2,1.0)$."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"x0 = [-1.2; 1.0]\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, we are ready to create the problem."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"adnlp = ADNLPModel(f, x0)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, we can access the function and derivatives using the "},{type:b,tag:f,props:{href:"https:\u002F\u002Fjuliasmoothoptimizers.github.io\u002FNLPModels.jl\u002Fstable\u002Fapi.html",rel:[l,m,n],target:o},children:[{type:a,value:"NLPModels API"}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"obj(adnlp, adnlp.meta.x0)\ngrad(adnlp, adnlp.meta.x0)\nhess(adnlp, adnlp.meta.x0)\nobjgrad(adnlp, adnlp.meta.x0)\nhprod(adnlp, adnlp.meta.x0, ones(2))\nH = hess_op(adnlp, adnlp.meta.x0)\nH * ones(2)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"At this point, we can't differentiate many things from simply using\n"},{type:b,tag:e,props:{},children:[{type:a,value:"ForwardDiff"}]},{type:a,value:" interface directly, but two things stand out: "},{type:b,tag:e,props:{},children:[{type:a,value:"objgrad"}]},{type:a,value:" returns\nboth functions at once, and "},{type:b,tag:e,props:{},children:[{type:a,value:$}]},{type:a,value:" returns a\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FLinearOperators.jl",rel:[l,m,n],target:o},children:[{type:a,value:"LinearOperator"}]},{type:a,value:",\nanother structure created in JuliaSmoothOptimizers.\nThis one defines a linear operator, extending Julia matrices in the sense that if"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using LinearOperators\nn = 100\nA = rand(n, n)\nB = rand(n, n)\nopA = LinearOperator(A)\nopB = LinearOperator(B)\nv = rand(n)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"then "},{type:b,tag:e,props:{},children:[{type:a,value:"(A * B) * v"}]},{type:a,value:" computes the matrix product, whereas "},{type:b,tag:e,props:{},children:[{type:a,value:"(opA * opB) * v"}]},{type:a,value:" won't.\nFurthermore, the linear operator can be created from the functions\n"},{type:b,tag:e,props:{},children:[{type:a,value:"v-\u003EMp(v)"}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:"v-\u003EMtp(v)"}]},{type:a,value:", defining the product of the linear operator times a vector and its transpose times a vector."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"T = LinearOperator(2, 2, # sizes\n                   false, false,\n                   v-\u003E[-v[2]; v[1]], v-\u003E[v[2]; -v[1]])\nv = rand(2)\nT * v\nT' * v\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Obs: In the "},{type:b,tag:e,props:{},children:[{type:a,value:ao}]},{type:a,value:" case, "},{type:b,tag:e,props:{},children:[{type:a,value:$}]},{type:a,value:" returns a linear operator that is actually\ncomputing the matrix, but this is a issue to be tackled on the future (PRs\nwelcome). But we'll be back with uses for "},{type:b,tag:e,props:{},children:[{type:a,value:$}]},{type:a,value:" soon."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The next model is the "},{type:b,tag:e,props:{},children:[{type:a,value:an}]},{type:a,value:". This model's main use is the "},{type:b,tag:e,props:{},children:[{type:a,value:am}]},{type:a,value:"\nmodelling language. This is very useful for more elaborate writing, specially\nwith constraints. It does create a little more overhead though, so keep that\nin mind."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using JuMP\njmp = Model()\n@variable(jmp, x[i=1:2], start=(x0[i])) # x0 from before\n@NLobjective(jmp, Min, (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2)\nmpbnlp = MathProgNLPModel(jmp)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Try the commands again."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"obj(mpbnlp, mpbnlp.meta.x0)\ngrad(mpbnlp, mpbnlp.meta.x0)\nhess(mpbnlp, mpbnlp.meta.x0)\nobjgrad(mpbnlp, mpbnlp.meta.x0)\nhprod(mpbnlp, mpbnlp.meta.x0, ones(2))\nH = hess_op(mpbnlp, mpbnlp.meta.x0)\nH * ones(2)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"It should be pretty much the same, though there is a little difference in "},{type:b,tag:e,props:{},children:[{type:a,value:"hess"}]},{type:a,value:".\nJuMP creates the sparse Hessian, which is better, from a computational point of\nview."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Notice how the commands are the same. I've actually copy-pasted the commands\nfrom above.\nThis allows the write of a solver in just a couple of commands.\nFor instance, a simple "},{type:b,tag:v,props:{},children:[{type:a,value:"Newton method"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"function newton(nlp :: AbstractNLPModel)\n  x = nlp.meta.x0\n  fx = obj(nlp, x)\n  gx = grad(nlp, x)\n  ngx = norm(gx)\n  while ngx \u003E 1e-6\n    Hx = hess(nlp, x)\n    d = -gx\n    try\n      G = chol(Hermitian(Hx, :L)) # Make Cholesky work on lower-only matrix.\n      d = -G\\(G'\\gx)\n    catch e\n      if !isa(e, Base.LinAlg.PosDefException); rethrow(e); end\n    end\n    t = 1.0\n    xt = x + t * d\n    ft = obj(nlp, xt)\n    while ft \u003E fx + 0.5 * t * dot(gx, d)\n      t *= 0.5\n      xt = x + t * d\n      ft = obj(nlp, xt)\n    end\n    x = xt\n    fx = ft\n    gx = grad(nlp, x)\n    ngx = norm(gx)\n  end\n  return x, fx, ngx\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"And we run in the problems with"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"newton(adnlp)\nnewton(mpbnlp)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Write once, use on problems from different sources."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, to have more fun, let's get another package:\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FOptimizationProblems.jl",rel:[l,m,n],target:o},children:[{type:a,value:ci}]},{type:a,value:".\nThis package doesn't have a release yet, so we have to clone it:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Pkg.clone(\"https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FOptimizationProblems.jl\")\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"What we have here is a collection of JuMP models implementing some of the\nCUTEst problems. Together with "},{type:b,tag:e,props:{},children:[{type:a,value:aH}]},{type:a,value:", we have a good opportunity to test our Newton implementation."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using OptimizationProblems\n\nx, fx, ngx = newton(MathProgNLPModel( rosenbrock() ))\nx, fx, ngx = newton(MathProgNLPModel( dixmaanj() ))\nx, fx, ngx = newton(MathProgNLPModel( brownbs() ))\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"An issue with OptimizationProblems is that it still doesn't have a way to get\nall unconstrained problems, for instance. (PRs are welcome)."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"So far we used 3 packages from JSO: "},{type:b,tag:e,props:{},children:[{type:a,value:aH}]},{type:a,value:N},{type:b,tag:e,props:{},children:[{type:a,value:"LinearOperators.jl"}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:ci}]},{type:a,value:". It's time to meet another important package."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:ac}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"CUTEst, the Constrained and Unconstrained Testing Environment with safe\nthreads, is a package written in Fortran providing over a thousand problems to\nallow testing of Nonlinear Programming solvers. However, CUTEst is hard to use\nby first-timers. Just installing it was already hard.\nCUTEst.jl provides an interface for CUTEst that is simple to install and use\n(comparing to the original)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Obs.: CUTEst.jl does not work on Windows for now. In fact, there is no plan to\nmake it work on Windows because \"people interested in doing it\"∩\"people capable\nof doing it\" = ∅, as far as we've looked. If you are in this set, PRs are\nwelcome."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To install CUTEst.jl you need to install something manually. Unfortunately,\nthis is specific for each system. Except for OSX, actually, which is using\n"},{type:b,tag:f,props:{href:cj,rel:[l,m,n],target:o},children:[{type:a,value:"homebrew-cutest"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For Linux users, check out "},{type:b,tag:f,props:{href:"http:\u002F\u002Fjuliasmoothoptimizers.github.io\u002FCUTEst.jl\u002Flatest\u002F#Installing-1",rel:[l,m,n],target:o},children:[{type:a,value:"this\npage"}]},{type:a,value:".\nEssentially, we need "},{type:b,tag:e,props:{},children:[{type:a,value:"libgfortran.so"}]},{type:a,value:" in a visible place. And it's especially\nannoying that some distritions don't put it in a visible place."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"With that done, enter"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Pkg.add(\"CUTEst\")\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"which should install CUTEst.jl 0.1.0."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Yes, it takes some time."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Finally, we start using CUTEst with"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using CUTEst\n\nnlp = CUTEstModel(\"ROSENBR\")\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"ROSENBR"}]},{type:a,value:" is a CUTEst problem, in case you want the list, see\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.cuter.rl.ac.uk\u002FProblems\u002Fmastsif.html",rel:[l,m,n],target:o},children:[{type:a,value:M}]},{type:a,value:". Keep reading for a way\nto select them, though."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, let's solve this CUTEst problem with our Newton method."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"x, fx, ngx = newton(nlp)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Yes, exactly like before!"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"CUTEst is a little more annoying in other aspect also. Like, you can't have two\nor more problems open at the same time, and you have to close this problem\nbefore opening a new one. (Again, PRs are welcome)."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"finalize(nlp)\nnlp = CUTEstModel(\"HIMMELBB\")\nx, fx, ngx = newton(nlp)\nfinalize(nlp)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This allows a simple workflow for writing optimization solvers."}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Write some problems by hand (using "},{type:b,tag:e,props:{},children:[{type:a,value:ao}]},{type:a,value:ck},{type:b,tag:e,props:{},children:[{type:a,value:an}]},{type:a,value:");"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Test your solvers with these hand-written problems;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Repeat last two steps until you believe you're ready to competitive comparison;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Test with CUTEst problems seamlessly."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, let's get back to "},{type:b,tag:e,props:{},children:[{type:a,value:$}]},{type:a,value:". Remember that it used Matrix vector products?\nWell, CUTEst has separate functions for the product of the Hessian at a point\nand a vector. Which means that "},{type:b,tag:e,props:{},children:[{type:a,value:ap}]},{type:a,value:" actually computes this product without\nhaving to create the matrix. Which means it is, at least, memory-efficient.\nFurthermore, "},{type:b,tag:e,props:{},children:[{type:a,value:$}]},{type:a,value:" will be created with the "},{type:b,tag:e,props:{},children:[{type:a,value:ap}]},{type:a,value:" function, which means\nit is also memory-efficient."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Let's look at a huge problem to feel the difference."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"nlp = CUTEstModel(\"BOX\")\nnlp.meta.nvar\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Let's make a simple comparison"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"function foo1()\n  H = hess(nlp, nlp.meta.x0)\n  v = ones(nlp.meta.nvar)\n  return Hermitian(H, :L) * v\nend\n\nfunction foo2()\n  H = hess_op(nlp, nlp.meta.x0)\n  v = ones(nlp.meta.nvar)\n  return H * v\nend\n\n@time w1 = foo1();\n@time w2 = foo2();\nnorm(w1 - w2)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Yes, that's a huge difference."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is a very good reason to use "},{type:b,tag:e,props:{},children:[{type:a,value:$}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:ap}]},{type:a,value:". But let's take a step further."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We can't implement Cholesky using only "},{type:b,tag:e,props:{},children:[{type:a,value:ap}]},{type:a,value:"s, so our Newton method would\nactually take a long time to reach a solution for the problem above.\nTo circunvent that, we could try using the Conjugate Gradients Method instead\nof Cholesky. This would only use Hessian-vector products."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We arrive on a new package,\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FKrylov.jl",rel:[l,m,n],target:o},children:[{type:a,value:"Krylov.jl"}]},{type:a,value:", which\nimplements Krylov methods. In particular, Conjugate Gradients.\nThis package is also unreleased, so we need to clone it."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Pkg.clone(\"https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FKrylov.jl\")\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Consider a simple example"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using Krylov\nA = rand(3,3)\nA = A*A'\nb = A*ones(3)\ncg(A, b)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"As expected, the system is solver, and the solution is $(1,1,1)$.\nBut let's do something more."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"A = -A\ncg(A, b)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Yes, Krylov does indeed solves the non-positive definite system using Conjugate Gradient.\nWell, actually, a variant."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"That's not enough tough. Krylov.jl also accepts an additional argument "},{type:b,tag:e,props:{},children:[{type:a,value:"radius"}]},{type:a,value:"\nto set a trust-region radius."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cg(A, b, radius=0.1)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Well, as an exercise I suggest you implement a trust-region version of Newton\nmethod, but for now, let's continue with our line-search version."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We know now how "},{type:b,tag:e,props:{},children:[{type:a,value:"cg"}]},{type:a,value:" behaves for non-positive definite systems, we can't make\nthe changes for a new method."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"function newton2(nlp :: AbstractNLPModel)\n  x = nlp.meta.x0\n  fx = obj(nlp, x)\n  gx = grad(nlp, x)\n  ngx = norm(gx)\n  while norm(gx) \u003E 1e-6\n    Hx = hess_op(nlp, x)\n    d, _ = cg(Hx, -gx)\n    slope = dot(gx, d)\n    if slope \u003E= 0 # Not a descent direction\n      d = -gx\n      slope = -dot(d,d)\n    end\n    t = 1.0\n    xt = x + t * d\n    ft = obj(nlp, xt)\n    while ft \u003E fx + 0.5 * t * slope\n      t *= 0.5\n      xt = x + t * d\n      ft = obj(nlp, xt)\n    end\n    x = xt\n    fx = ft\n    gx = grad(nlp, x)\n    ngx = norm(gx)\n  end\n  return x, fx, ngx\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, running "},{type:b,tag:e,props:{},children:[{type:a,value:"newton2"}]},{type:a,value:" on our large problem, we obtain"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"x, fx, ngx = newton2(nlp)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Which is the method working very fast. Less that a second here."}]},{type:a,value:c},{type:b,tag:aq,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"There is actually another package I'd like to talk about, but it needs some\nmore work for it to be ready for a release:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Optimize.jl"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Optimize.jl is a package with solvers. We intend to implement some high quality\nsolvers in there, but there is actually more to it. We have in there tools to\nbenchmark packages. These tools should allow the testing of a set of solvers in\na set of problems without much fuss, while creating the comparison information,\nincluding the performance profile.\nIt also includes, or will include, \"parts\" of solvers to create your own\nsolver. Like trust-region and line-search algorithms and auxiliary functions\nand types.\nUnfortunately, it's not done enough for me to extend on it, and this is already\ngetting too long."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"End"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I hope you enjoyed this overview of packages.\nSubscribe to the RSS feed to keep updated in future tutorials. I intend to talk\nabout the constrained part of NLPModels soon."}]}]},dir:C,path:"\u002Fblog\u002F2017-02-07-nlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# NLPModels.jl, CUTEst.jl and other Nonlinear Optimization Packages on Julia\n\nA couple of weeks ago me and Professor [Dominique Orban](https:\u002F\u002Fdpo.github.io) have finally made a release of\nCUTEst.jl, a wrapper for the CUTEst repository of problems for nonlinear\noptimization (which I've mentioned before).\nAlong with this release, we've done a release of NLPModels.jl, the underlying\npackage. I think it's time I explain a little about these packages, others,\nand how to use them together.\nIf you want to see the output of the commands, you can open\n[this ASCIInema](https:\u002F\u002Fasciinema.org\u002Fa\u002F102371)\nside by side.\n\n_Obs.: Tutorial using Julia 0.5.0_\n\n_Edit: Second part is\n[here](https:\u002F\u002Fabelsiqueira.github.io{{local_prefix}}nlpmodelsjl-and-cutestjl-constrained-optimization\u002F)._\n\n**JuliaSmoothOptimizers**\n[![JuliaSmoothOptimizers logo](https:\u002F\u002Fjuliasmoothoptimizers.github.io\u002Fassets\u002Flogo.png){: .img-view }](https:\u002F\u002Fjuliasmoothoptimizers.github.io)\n\nMost packages mentioned here will be a part of the JuliaSmoothOptimizers (JSO)\norganization. There are more packages in the organization that I won't mention here, but you should check it out.\n\n**NLPModels.jl**\n\nNLPModels is a package for creating Nonlinear Optimization Models. It is\nfocused on the needs of the solver writer, such as the ability to write one\nsolver that works on many models.\nThe package defines a few models, and there are others on the horizon.\nThe ones already done are:\n\n- **ADNLPModel**: A model with automatic differentiation;\n- **MathProgNLPModel**: A model for [MathProgBase](https:\u002F\u002Fgithub.com\u002FJuliaOpt\u002FMathProgBase.jl)\u002F[JuMP](http:\u002F\u002Fgithub.com\u002FJuliaOpt\u002FJuMP.jl) conversion, whose utility will be shown below (obs: MPB and JuMP are packages from the JuliaOpt organization);\n- **SimpleNLPModel**: A model in which nothing is automatic, i.e., all functions have to be provided by the user.\n- **SlackModel**: A model that changes all inequalities to equalities adding extra variables;\n- **LBFGSModel** and **LSR1Model**: Models that create quasi-Newton models from another model.\n\nThe first two models are designed to be easy to use; the third is useful for\nefficient model creation in specific cases; the last ones are utility models.\n\nLet's begin by installing NLPModels.jl, and a couple of optional requirements.\n\n```\nPkg.add(\"NLPModels.jl\")\nPkg.add(\"JuMP.jl\") # Installs ForwardDiff also.\n```\n\nThis should install version 0.1.0. After that, just do\n\n```\nusing NLPModels\n```\n\nNow, let's create a simple function: Rosenbrock's.\n\n```\nf(x) = (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2\n```\n\nThe Rosenbrock problem traditionally starts from $(-1.2,1.0)$.\n\n```\nx0 = [-1.2; 1.0]\n```\n\nNow, we are ready to create the problem.\n\n```\nadnlp = ADNLPModel(f, x0)\n```\n\nNow, we can access the function and derivatives using the [NLPModels API](https:\u002F\u002Fjuliasmoothoptimizers.github.io\u002FNLPModels.jl\u002Fstable\u002Fapi.html)\n\n```\nobj(adnlp, adnlp.meta.x0)\ngrad(adnlp, adnlp.meta.x0)\nhess(adnlp, adnlp.meta.x0)\nobjgrad(adnlp, adnlp.meta.x0)\nhprod(adnlp, adnlp.meta.x0, ones(2))\nH = hess_op(adnlp, adnlp.meta.x0)\nH * ones(2)\n```\n\nAt this point, we can't differentiate many things from simply using\n`ForwardDiff` interface directly, but two things stand out: `objgrad` returns\nboth functions at once, and `hess_op` returns a\n[LinearOperator](https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FLinearOperators.jl),\nanother structure created in JuliaSmoothOptimizers.\nThis one defines a linear operator, extending Julia matrices in the sense that if\n\n```\nusing LinearOperators\nn = 100\nA = rand(n, n)\nB = rand(n, n)\nopA = LinearOperator(A)\nopB = LinearOperator(B)\nv = rand(n)\n```\n\nthen `(A * B) * v` computes the matrix product, whereas `(opA * opB) * v` won't.\nFurthermore, the linear operator can be created from the functions\n`v-\u003EMp(v)` and `v-\u003EMtp(v)`, defining the product of the linear operator times a vector and its transpose times a vector.\n\n```\nT = LinearOperator(2, 2, # sizes\n                   false, false,\n                   v-\u003E[-v[2]; v[1]], v-\u003E[v[2]; -v[1]])\nv = rand(2)\nT * v\nT' * v\n```\n\n_Obs: In the `ADNLPModel` case, `hess_op` returns a linear operator that is actually\ncomputing the matrix, but this is a issue to be tackled on the future (PRs\nwelcome). But we'll be back with uses for `hess_op` soon._\n\nThe next model is the `MathProgNLPModel`. This model's main use is the `JuMP`\nmodelling language. This is very useful for more elaborate writing, specially\nwith constraints. It does create a little more overhead though, so keep that\nin mind.\n\n```\nusing JuMP\njmp = Model()\n@variable(jmp, x[i=1:2], start=(x0[i])) # x0 from before\n@NLobjective(jmp, Min, (x[1] - 1)^2 + 100*(x[2] - x[1]^2)^2)\nmpbnlp = MathProgNLPModel(jmp)\n```\n\nTry the commands again.\n\n```\nobj(mpbnlp, mpbnlp.meta.x0)\ngrad(mpbnlp, mpbnlp.meta.x0)\nhess(mpbnlp, mpbnlp.meta.x0)\nobjgrad(mpbnlp, mpbnlp.meta.x0)\nhprod(mpbnlp, mpbnlp.meta.x0, ones(2))\nH = hess_op(mpbnlp, mpbnlp.meta.x0)\nH * ones(2)\n```\n\nIt should be pretty much the same, though there is a little difference in `hess`.\nJuMP creates the sparse Hessian, which is better, from a computational point of\nview.\n\nNotice how the commands are the same. I've actually copy-pasted the commands\nfrom above.\nThis allows the write of a solver in just a couple of commands.\nFor instance, a simple **Newton method**.\n\n```\nfunction newton(nlp :: AbstractNLPModel)\n  x = nlp.meta.x0\n  fx = obj(nlp, x)\n  gx = grad(nlp, x)\n  ngx = norm(gx)\n  while ngx \u003E 1e-6\n    Hx = hess(nlp, x)\n    d = -gx\n    try\n      G = chol(Hermitian(Hx, :L)) # Make Cholesky work on lower-only matrix.\n      d = -G\\(G'\\gx)\n    catch e\n      if !isa(e, Base.LinAlg.PosDefException); rethrow(e); end\n    end\n    t = 1.0\n    xt = x + t * d\n    ft = obj(nlp, xt)\n    while ft \u003E fx + 0.5 * t * dot(gx, d)\n      t *= 0.5\n      xt = x + t * d\n      ft = obj(nlp, xt)\n    end\n    x = xt\n    fx = ft\n    gx = grad(nlp, x)\n    ngx = norm(gx)\n  end\n  return x, fx, ngx\nend\n```\n\nAnd we run in the problems with\n\n```\nnewton(adnlp)\nnewton(mpbnlp)\n```\n\n_Write once, use on problems from different sources._\n\nNow, to have more fun, let's get another package:\n[OptimizationProblems.jl](https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FOptimizationProblems.jl).\nThis package doesn't have a release yet, so we have to clone it:\n\n```\nPkg.clone(\"https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FOptimizationProblems.jl\")\n```\n\nWhat we have here is a collection of JuMP models implementing some of the\nCUTEst problems. Together with `NLPModels.jl`, we have a good opportunity to test our Newton implementation.\n\n```\nusing OptimizationProblems\n\nx, fx, ngx = newton(MathProgNLPModel( rosenbrock() ))\nx, fx, ngx = newton(MathProgNLPModel( dixmaanj() ))\nx, fx, ngx = newton(MathProgNLPModel( brownbs() ))\n```\n\n_An issue with OptimizationProblems is that it still doesn't have a way to get\nall unconstrained problems, for instance. (PRs are welcome)._\n\nSo far we used 3 packages from JSO: `NLPModels.jl`, `LinearOperators.jl` and `OptimizationProblems.jl`. It's time to meet another important package.\n\n**CUTEst.jl**\n\nCUTEst, the Constrained and Unconstrained Testing Environment with safe\nthreads, is a package written in Fortran providing over a thousand problems to\nallow testing of Nonlinear Programming solvers. However, CUTEst is hard to use\nby first-timers. Just installing it was already hard.\nCUTEst.jl provides an interface for CUTEst that is simple to install and use\n(comparing to the original).\n\n_Obs.: CUTEst.jl does not work on Windows for now. In fact, there is no plan to\nmake it work on Windows because \"people interested in doing it\"∩\"people capable\nof doing it\" = ∅, as far as we've looked. If you are in this set, PRs are\nwelcome._\n\nTo install CUTEst.jl you need to install something manually. Unfortunately,\nthis is specific for each system. Except for OSX, actually, which is using\n[homebrew-cutest](https:\u002F\u002Fgithub.com\u002Foptimizers\u002Fhomebrew-cutest).\n\nFor Linux users, check out [this\npage](http:\u002F\u002Fjuliasmoothoptimizers.github.io\u002FCUTEst.jl\u002Flatest\u002F#Installing-1).\nEssentially, we need `libgfortran.so` in a visible place. And it's especially\nannoying that some distritions don't put it in a visible place.\n\nWith that done, enter\n\n```\nPkg.add(\"CUTEst\")\n```\n\nwhich should install CUTEst.jl 0.1.0.\n\nYes, it takes some time.\n\nFinally, we start using CUTEst with\n\n```\nusing CUTEst\n\nnlp = CUTEstModel(\"ROSENBR\")\n```\n\n`ROSENBR` is a CUTEst problem, in case you want the list, see\n[here](http:\u002F\u002Fwww.cuter.rl.ac.uk\u002FProblems\u002Fmastsif.html). Keep reading for a way\nto select them, though.\n\nNow, let's solve this CUTEst problem with our Newton method.\n\n```\nx, fx, ngx = newton(nlp)\n```\n\n**Yes, exactly like before!**.\n\nCUTEst is a little more annoying in other aspect also. Like, you can't have two\nor more problems open at the same time, and you have to close this problem\nbefore opening a new one. (Again, PRs are welcome).\n\n```\nfinalize(nlp)\nnlp = CUTEstModel(\"HIMMELBB\")\nx, fx, ngx = newton(nlp)\nfinalize(nlp)\n```\n\nThis allows a simple workflow for writing optimization solvers.\n\n- Write some problems by hand (using `ADNLPModel` or `MathProgNLPModel`);\n- Test your solvers with these hand-written problems;\n- Repeat last two steps until you believe you're ready to competitive comparison;\n- Test with CUTEst problems seamlessly.\n\nNow, let's get back to `hess_op`. Remember that it used Matrix vector products?\nWell, CUTEst has separate functions for the product of the Hessian at a point\nand a vector. Which means that `hprod` actually computes this product without\nhaving to create the matrix. Which means it is, at least, memory-efficient.\nFurthermore, `hess_op` will be created with the `hprod` function, which means\nit is also memory-efficient.\n\nLet's look at a huge problem to feel the difference.\n\n```\nnlp = CUTEstModel(\"BOX\")\nnlp.meta.nvar\n```\n\nLet's make a simple comparison\n\n```\nfunction foo1()\n  H = hess(nlp, nlp.meta.x0)\n  v = ones(nlp.meta.nvar)\n  return Hermitian(H, :L) * v\nend\n\nfunction foo2()\n  H = hess_op(nlp, nlp.meta.x0)\n  v = ones(nlp.meta.nvar)\n  return H * v\nend\n\n@time w1 = foo1();\n@time w2 = foo2();\nnorm(w1 - w2)\n```\n\nYes, that's a huge difference.\n\nThis is a very good reason to use `hess_op` and `hprod`. But let's take a step further.\n\nWe can't implement Cholesky using only `hprod`s, so our Newton method would\nactually take a long time to reach a solution for the problem above.\nTo circunvent that, we could try using the Conjugate Gradients Method instead\nof Cholesky. This would only use Hessian-vector products.\n\nWe arrive on a new package,\n[Krylov.jl](https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FKrylov.jl), which\nimplements Krylov methods. In particular, Conjugate Gradients.\nThis package is also unreleased, so we need to clone it.\n\n```\nPkg.clone(\"https:\u002F\u002Fgithub.com\u002FJuliaSmoothOptimizers\u002FKrylov.jl\")\n```\n\nConsider a simple example\n\n```\nusing Krylov\nA = rand(3,3)\nA = A*A'\nb = A*ones(3)\ncg(A, b)\n```\n\nAs expected, the system is solver, and the solution is $(1,1,1)$.\nBut let's do something more.\n\n```\nA = -A\ncg(A, b)\n```\n\nYes, Krylov does indeed solves the non-positive definite system using Conjugate Gradient.\nWell, actually, a variant.\n\nThat's not enough tough. Krylov.jl also accepts an additional argument `radius`\nto set a trust-region radius.\n\n```\ncg(A, b, radius=0.1)\n```\n\nWell, as an exercise I suggest you implement a trust-region version of Newton\nmethod, but for now, let's continue with our line-search version.\n\nWe know now how `cg` behaves for non-positive definite systems, we can't make\nthe changes for a new method.\n\n```\nfunction newton2(nlp :: AbstractNLPModel)\n  x = nlp.meta.x0\n  fx = obj(nlp, x)\n  gx = grad(nlp, x)\n  ngx = norm(gx)\n  while norm(gx) \u003E 1e-6\n    Hx = hess_op(nlp, x)\n    d, _ = cg(Hx, -gx)\n    slope = dot(gx, d)\n    if slope \u003E= 0 # Not a descent direction\n      d = -gx\n      slope = -dot(d,d)\n    end\n    t = 1.0\n    xt = x + t * d\n    ft = obj(nlp, xt)\n    while ft \u003E fx + 0.5 * t * slope\n      t *= 0.5\n      xt = x + t * d\n      ft = obj(nlp, xt)\n    end\n    x = xt\n    fx = ft\n    gx = grad(nlp, x)\n    ngx = norm(gx)\n  end\n  return x, fx, ngx\nend\n```\n\nNow, running `newton2` on our large problem, we obtain\n\n```\nx, fx, ngx = newton2(nlp)\n```\n\nWhich is the method working very fast. Less that a second here.\n\n---\n\nThere is actually another package I'd like to talk about, but it needs some\nmore work for it to be ready for a release:\n\n**Optimize.jl**\n\nOptimize.jl is a package with solvers. We intend to implement some high quality\nsolvers in there, but there is actually more to it. We have in there tools to\nbenchmark packages. These tools should allow the testing of a set of solvers in\na set of problems without much fuss, while creating the comparison information,\nincluding the performance profile.\nIt also includes, or will include, \"parts\" of solvers to create your own\nsolver. Like trust-region and line-search algorithms and auxiliary functions\nand types.\nUnfortunately, it's not done enough for me to extend on it, and this is already\ngetting too long.\n\n**End**\n\nI hope you enjoyed this overview of packages.\nSubscribe to the RSS feed to keep updated in future tutorials. I intend to talk\nabout the constrained part of NLPModels soon.\n"},{slug:"2017-01-15-julia-fractal-on-julia",title:cl,date:"2017-01-15",tags:[H,bq,"image","background",ar],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"julia-fractal-on-julia"},children:[{type:b,tag:f,props:{href:"#julia-fractal-on-julia",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cl}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I wanted a background that would update automatically in some\ninteresting way, instead of just random images.\nAfter some thought, I decided to use some "},{type:b,tag:f,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FJulia_set",rel:[l,m,n],target:o},children:[{type:a,value:"Julia\nfractals"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I made a code to create the Julia fractals in the "},{type:b,tag:f,props:{href:al,rel:[l,m,n],target:o},children:[{type:a,value:"Julia\nlanguage"}]},{type:a,value:", and then some code to run it for a random\npoint."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The code is "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fjuliabg",rel:[l,m,n],target:o},children:[{type:a,value:M}]},{type:a,value:", including some\nexplaining on how to use and install it."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Here are some examples:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:E,src:"https:\u002F\u002Fraw.githubusercontent.com\u002Fabelsiqueira\u002Fjuliabg\u002Fmaster\u002Fex1.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"https:\u002F\u002Fraw.githubusercontent.com\u002Fabelsiqueira\u002Fjuliabg\u002Fmaster\u002Fex2.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"https:\u002F\u002Fraw.githubusercontent.com\u002Fabelsiqueira\u002Fjuliabg\u002Fmaster\u002Fex3.png"},children:[]},{type:a,value:c},{type:b,tag:B,props:{alt:E,src:"https:\u002F\u002Fraw.githubusercontent.com\u002Fabelsiqueira\u002Fjuliabg\u002Fmaster\u002Fex4.png"},children:[]}]}]},dir:C,path:"\u002Fblog\u002F2017-01-15-julia-fractal-on-julia",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Julia Fractal on Julia\n\nI wanted a background that would update automatically in some\ninteresting way, instead of just random images.\nAfter some thought, I decided to use some [Julia\nfractals](https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FJulia_set).\n\nI made a code to create the Julia fractals in the [Julia\nlanguage](https:\u002F\u002Fjulialang.org), and then some code to run it for a random\npoint.\n\nThe code is [here](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fjuliabg), including some\nexplaining on how to use and install it.\n\nHere are some examples:\n\n![](https:\u002F\u002Fraw.githubusercontent.com\u002Fabelsiqueira\u002Fjuliabg\u002Fmaster\u002Fex1.png)\n![](https:\u002F\u002Fraw.githubusercontent.com\u002Fabelsiqueira\u002Fjuliabg\u002Fmaster\u002Fex2.png)\n![](https:\u002F\u002Fraw.githubusercontent.com\u002Fabelsiqueira\u002Fjuliabg\u002Fmaster\u002Fex3.png)\n![](https:\u002F\u002Fraw.githubusercontent.com\u002Fabelsiqueira\u002Fjuliabg\u002Fmaster\u002Fex4.png)\n"},{slug:"2016-12-18-advent-of-code-2016-in-julia",title:cm,date:"2016-12-18",tags:[H,e,ar],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"advent-of-code-2016-in-julia"},children:[{type:b,tag:f,props:{href:"#advent-of-code-2016-in-julia",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cm}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Last year I discovered by chance a code competition that happens in the month\nof December: The "},{type:b,tag:f,props:{href:"http:\u002F\u002Fadventofcode.com",rel:[l,m,n],target:o},children:[{type:a,value:"Advent of Code"}]},{type:a,value:".\nThis event consists of small puzzles release every day of December, up to the\n25th. Which amounts to 25 problems! (I can do math)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Last year I tried doing some on Bash, and latter switched to Julia, but never\ngot to finish them.\nThis year I decided to use "},{type:b,tag:f,props:{href:al,rel:[l,m,n],target:o},children:[{type:a,value:O}]},{type:a,value:", because I want to\ntest it for these general problems. Some problems are very hard, and I want\nto have the packages at my disposal."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"There is a leaderboard"}]},{type:a,value:", which revolves around the first 100 solvers for\neach day. Most problems are solved in the first 5 minutes of its release, and\nthe 100th place is usually less than 15 minutes. The best I got was 30 minutes,\ngetting the 135th position and zero points. However, I'm usually not trying to\nget there because the problems are release at 3am for me (Brazil), and by that\ntime I'm usually sleeping."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This year I'm trying to follow more closely the dates, managed to solve one by\nday until a gigantic workload halted my progress for a week. Yesterday I\nreturned to these problems and solved the missing ones up until now."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you like coding, you should give it a try. My code for this year is\navailable at "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FAoC2016",rel:[l,m,n],target:o},children:[{type:a,value:U}]},{type:a,value:", but only open\nit if you decided not to play. Be warned that most of my answers were poorly\nwritten because I still want to do it fast, and am not worried about cleaning\nof efficiency."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Happy new year, holidays, and coding."}]}]},dir:C,path:"\u002Fblog\u002F2016-12-18-advent-of-code-2016-in-julia",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Advent of Code 2016 in Julia\n\nLast year I discovered by chance a code competition that happens in the month\nof December: The [Advent of Code](http:\u002F\u002Fadventofcode.com).\nThis event consists of small puzzles release every day of December, up to the\n25th. Which amounts to 25 problems! (I can do math).\n\nLast year I tried doing some on Bash, and latter switched to Julia, but never\ngot to finish them.\nThis year I decided to use [Julia](https:\u002F\u002Fjulialang.org), because I want to\ntest it for these general problems. Some problems are very hard, and I want\nto have the packages at my disposal.\n\n**There is a leaderboard**, which revolves around the first 100 solvers for\neach day. Most problems are solved in the first 5 minutes of its release, and\nthe 100th place is usually less than 15 minutes. The best I got was 30 minutes,\ngetting the 135th position and zero points. However, I'm usually not trying to\nget there because the problems are release at 3am for me (Brazil), and by that\ntime I'm usually sleeping.\n\nThis year I'm trying to follow more closely the dates, managed to solve one by\nday until a gigantic workload halted my progress for a week. Yesterday I\nreturned to these problems and solved the missing ones up until now.\n\nIf you like coding, you should give it a try. My code for this year is\navailable at [GitHub](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FAoC2016), but only open\nit if you decided not to play. Be warned that most of my answers were poorly\nwritten because I still want to do it fast, and am not worried about cleaning\nof efficiency.\n\nHappy new year, holidays, and coding.\n"},{slug:"2016-11-29-smne-2016-julia",title:cn,date:"2016-11-29",tags:[H,as,"smne",K],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"apresentação-de-julia-no-smne"},children:[{type:b,tag:f,props:{href:"#apresenta%C3%A7%C3%A3o-de-julia-no-smne",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cn}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Nos dias 30 de Novembro à 2 de Dezembro de 2016 acontece o "},{type:b,tag:f,props:{href:"http:\u002F\u002Feventos.ufpr.br\u002Fsmne\u002FSMNE1",rel:[l,m,n],target:o},children:[{type:a,value:"primeiro Simpósio\nde Métodos Numéricos em Engenharia"}]},{type:a,value:".\nNeste simpósio darei um minicurso sobre Julia."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Deixo aqui o material preliminar para os alunos do minicurso, ou interessados."}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:P,props:{to:"\u002Fblog\u002Fsmne-julia.ipynb"},children:[{type:a,value:"Notebook (necessário)"}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:P,props:{to:"\u002Fblog\u002Fexemplo.jl"},children:[{type:a,value:"exemplo.jl (necessário)"}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:P,props:{to:"\u002Fblog\u002Fsmne-julia.html"},children:[{type:a,value:"HTML estático do notebook - para quem não conseguiu\ninstalar"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Também deixo "},{type:b,tag:f,props:{href:"https:\u002F\u002Fpad.riseup.net\u002Fp\u002FaCXYqUjz3cCS",rel:[l,m,n],target:o},children:[{type:a,value:S}]},{type:a,value:" o link do Etherpad\npara usarmos na aula."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Quem não conseguiu instalar até agora, pode tentar usar o\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fjuliabox.com\u002F",rel:[l,m,n],target:o},children:[{type:a,value:co}]},{type:a,value:", que roda Julia online. "},{type:b,tag:v,props:{},children:[{type:a,value:"Não sei se teremos\ninternet boa o suficiente no evento"}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2016-11-29-smne-2016-julia",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Apresentação de Julia no SMNE\n\nNos dias 30 de Novembro à 2 de Dezembro de 2016 acontece o [primeiro Simpósio\nde Métodos Numéricos em Engenharia](http:\u002F\u002Feventos.ufpr.br\u002Fsmne\u002FSMNE1).\nNeste simpósio darei um minicurso sobre Julia.\n\nDeixo aqui o material preliminar para os alunos do minicurso, ou interessados.\n\n- [Notebook (necessário)](\u002Fblog\u002Fsmne-julia.ipynb)\n- [exemplo.jl (necessário)](\u002Fblog\u002Fexemplo.jl)\n- [HTML estático do notebook - para quem não conseguiu\n  instalar](\u002Fblog\u002Fsmne-julia.html)\n\nTambém deixo [aqui](https:\u002F\u002Fpad.riseup.net\u002Fp\u002FaCXYqUjz3cCS) o link do Etherpad\npara usarmos na aula.\n\nQuem não conseguiu instalar até agora, pode tentar usar o\n[JuliaBox](https:\u002F\u002Fjuliabox.com\u002F), que roda Julia online. **Não sei se teremos\ninternet boa o suficiente no evento**.\n"},{slug:"2016-08-21-a-quasi-solution-to-my-bib-problem",title:cp,date:"2016-08-21",tags:[cq,at,K,cr],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"a-quasi-solution-to-my-bib-problem"},children:[{type:b,tag:f,props:{href:"#a-quasi-solution-to-my-bib-problem",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cp}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For some time, one of my concerns is bibliography management.\nSee my "},{type:b,tag:f,props:{href:"http:\u002F\u002Fabelsiqueira.github.io\u002Fen\u002Fprojects\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"projects page"}]},{type:a,value:" if you have\ninterest on working with something like that."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In the past, what we had was simply writing all your bibliographies directly on\na .tex file. Then, if you needed to write again, you would copy-paste it\nsomewhere. If you made a mistake, you would have to fix it by hand. If the\njournal changed styles, you would have to change everything by hand.\n"},{type:b,tag:v,props:{},children:[{type:a,value:"If you're still doing this. STOP."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Then, we got BibTeX and all it's reimplementations. BibTeX allows you to define\nkey-value pairs and process to the specific style desired.\nSo, this"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"\\bibitem{key} Author, S.: Some Title. Journal of Something, 10, 200-230, (2016)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"which was written directly in the .tex, changed to this"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"@journal{key,\nauthor = \"Some Author\",\ntitle = \"Some title\",\njournal = \"Journal of something\",\nvolume = \"10\",\npages = \"200-230\",\nyear = \"2016\"\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"in a different .bib file, and the .tex had 4-5 lines adding a package, options,\nstyle, the .bib file, and where to put the bib."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is useful. Really, it is. Perhaps you don't think so, because you have to\nlearn something new, and it looks strange (?), and nobody uses it (??), but\nreally, it is useful. Keep reading."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, we need something new. BibTeX was created 31 years ago, and it really\nneeded something new. Well, it has. You wanna you "},{type:b,tag:v,props:{},children:[{type:a,value:"BibLaTeX"}]},{type:a,value:" now, instead of\nBibTeX, but it works in the same way. But what we really need is something new,\nand smarter."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Computers are very fast and smart now, we can have something more useful.\nSomething in the cloud (#thereisnocloud), some server-like thing using HTML5.\nUse JSON."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Anyway, the BibTeX problem is a part of the LaTeX problem, which is also too\nold, but there is nothing fully working as good right now."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For now, I found some middle ground, specially if you're trying to leave writing\ndirectly on the .tex, and wants to create a .bib file."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Use JabRef + JabFox. Search each entry of your bibliography and use JabFox to\nsave it. There is an option to update the entries that have DOI, so do that too.\nThen you can generate your .bib as needed."}]}]},dir:C,path:"\u002Fblog\u002F2016-08-21-a-quasi-solution-to-my-bib-problem",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# A quasi-solution to my bib problem\n\nFor some time, one of my concerns is bibliography management.\nSee my [projects page](http:\u002F\u002Fabelsiqueira.github.io\u002Fen\u002Fprojects\u002F) if you have\ninterest on working with something like that.\n\nIn the past, what we had was simply writing all your bibliographies directly on\na .tex file. Then, if you needed to write again, you would copy-paste it\nsomewhere. If you made a mistake, you would have to fix it by hand. If the\njournal changed styles, you would have to change everything by hand.\n**If you're still doing this. STOP.**\n\nThen, we got BibTeX and all it's reimplementations. BibTeX allows you to define\nkey-value pairs and process to the specific style desired.\nSo, this\n\n```\n\\bibitem{key} Author, S.: Some Title. Journal of Something, 10, 200-230, (2016)\n```\n\nwhich was written directly in the .tex, changed to this\n\n```\n@journal{key,\nauthor = \"Some Author\",\ntitle = \"Some title\",\njournal = \"Journal of something\",\nvolume = \"10\",\npages = \"200-230\",\nyear = \"2016\"\n}\n```\n\nin a different .bib file, and the .tex had 4-5 lines adding a package, options,\nstyle, the .bib file, and where to put the bib.\n\nThis is useful. Really, it is. Perhaps you don't think so, because you have to\nlearn something new, and it looks strange (?), and nobody uses it (??), but\nreally, it is useful. Keep reading.\n\nNow, we need something new. BibTeX was created 31 years ago, and it really\nneeded something new. Well, it has. You wanna you **BibLaTeX** now, instead of\nBibTeX, but it works in the same way. But what we really need is something new,\nand smarter.\n\nComputers are very fast and smart now, we can have something more useful.\nSomething in the cloud (#thereisnocloud), some server-like thing using HTML5.\nUse JSON.\n\nAnyway, the BibTeX problem is a part of the LaTeX problem, which is also too\nold, but there is nothing fully working as good right now.\n\nFor now, I found some middle ground, specially if you're trying to leave writing\ndirectly on the .tex, and wants to create a .bib file.\n\nUse JabRef + JabFox. Search each entry of your bibliography and use JabFox to\nsave it. There is an option to update the entries that have DOI, so do that too.\nThen you can generate your .bib as needed.\n"},{slug:"2016-08-07-oficina-de-ferramentas-computacionais-na-ufpr-01-de-agosto-de-2016",title:cs,date:"2016-08-07",tags:[ct,aB,"oficina",au],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"oficina-de-ferramentas-computacionais-na-ufpr-01-de-agosto-de-2016"},children:[{type:b,tag:f,props:{href:"#oficina-de-ferramentas-computacionais-na-ufpr-01-de-agosto-de-2016",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cs}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Nesta semana que passou, dos dias 01 a 03 de Agosto, aconteceu uma Oficina de\nFerramentas Computacionais na UFPR. Essa oficina seguiu os moldes das oficinas\ndo "},{type:b,tag:f,props:{href:"http:\u002F\u002Fsoftware-carpentry.org\u002F",rel:[l,m,n],target:o},children:[{type:a,value:cu}]},{type:a,value:" e\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fdatacarpentry.org\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"Data Carpentry"}]},{type:a,value:".\nEsta foi a segunda oficina neste padrão que organizei, a\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Flocalhost:4000%7B%7Blocal_prefix%7D%7Dresultado-da-oficina-de-ferramentas-computacionais-para-pesquisadores\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"primeira"}]},{type:a,value:"\nfoi há um pouco mais de um ano, e foi apenas um dia.\nNesta tivemos 3 dias de atividades, e vários participantes."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A oficina teve 28 participantes, porém nem todos vieram a todos os tutoriais.\nO maior número de pessoas num mesmo tutorial foi 23 e o menor foi 15.\nTivemos aulas de Shell, Julia, R, LaTeX, Git e RMarkdown."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Os instrutores foram o "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.leg.ufpr.br\u002Fdoku.php\u002Fpessoais:fernandomayer",rel:[l,m,n],target:o},children:[{type:a,value:"Fernando\nMayer"}]},{type:a,value:", a\nKally Chung, e eu.\nNós mesmos nos revezamos como monitores."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A maior parte dos participantes eram da pós-graduação, e da computação.\nTivemos uma quantidade saudável de pessoas da graduação, e dois professores.\nTivemos participantes da matemática, da matemática industrial, da física, da\nquímica, e um participante da farmácia."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Começamos com uma breve introdução e um help pra instalar o Julia. Tivemos muita\ndificuldade em fazer o Julia funcionar por motivos variados. Essencialmente\ndeveria precisar começar instalando o Jupyter pelo IJulia. Talvez funcionasse\nassim. Seguimos para um breve coffee."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Depois do coffee, fizemos uma aula de Shell. Começamos mais cedo e ficamos quase\numa hora a mais do que o planejado. Como sempre o tempo ficou bastante apertado.\nMostramos no fim que existem comandos um pouco mais interessantes, como o "},{type:b,tag:e,props:{},children:[{type:a,value:"grep"}]},{type:a,value:"\ne o "},{type:b,tag:e,props:{},children:[{type:a,value:"find"}]},{type:a,value:". Não deu pra falar muito mais, mas chegamos no "},{type:b,tag:e,props:{},children:[{type:a,value:"for"}]},{type:a,value:X},{type:b,tag:e,props:{},children:[{type:a,value:"scripts"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Depois do almoço fizemos a aula de Julia. Havia planejado 3 a 4 aulas com um\npouco de análise de dados. No fim das contas consegui passar apenas o mínimo de\nJulia. Mostrando um pouco de álgebra linear numérica, mas não for, while e if."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Por fim tivemos R, que também ficou razoavelmente limitado aos comandos básicos."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"No segundo dia tivemos a primeira aula de Git, que foi bem. Considerando a\ncomplexidade da ferramenta, tivemos bons resultados."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O segundo tutorial da manhã foi a segunda parte de R. Nessa parte vimos os\ngráficos e a análise de dados."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:"Fernando",src:"\u002Fblog\u002F2016-08-01-swc3.jpg"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A tarde foi apenas de LaTeX. Fizemos uma aula lendo um .tex pronto e modificando\nalgumas coisas. Conseguimos fazer as partes principais para fazer uma tese.\nInclusive BibTeX com Biblatex (básico)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:"Abel",src:"\u002Fblog\u002F2016-08-01-swc4.jpg"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O último dia de workshop teve o fim da aula de Git: a parte remota.\nFizemos contas no github, subimos o trabalho do dia anterior, baixamos e fizemos\nmodificações."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Depois fizemos a segunda aula de Julia, onde pude apresentar for, while, if,\nplots e arquivos."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Por fim, fizemos uma aula de RMarkdown, finalizando em como montar um site com\nele."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Como sempre, tivemos algumas dificuldades com tempo e internet."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Fotos:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:"Wrap 1",src:"\u002Fblog\u002F2016-08-01-swc1.jpg"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:B,props:{alt:"Wrap 2",src:"\u002Fblog\u002F2016-08-01-swc2.jpg"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Infelizmente não tiramos fotos da Kally ensinando."}]}]},dir:C,path:"\u002Fblog\u002F2016-08-07-oficina-de-ferramentas-computacionais-na-ufpr-01-de-agosto-de-2016",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Oficina de Ferramentas Computacionais na UFPR, 01 de Agosto de 2016\n\nNesta semana que passou, dos dias 01 a 03 de Agosto, aconteceu uma Oficina de\nFerramentas Computacionais na UFPR. Essa oficina seguiu os moldes das oficinas\ndo [Software Carpentry](http:\u002F\u002Fsoftware-carpentry.org\u002F) e\n[Data Carpentry](http:\u002F\u002Fdatacarpentry.org\u002F).\nEsta foi a segunda oficina neste padrão que organizei, a\n[primeira](http:\u002F\u002Flocalhost:4000{{local_prefix}}resultado-da-oficina-de-ferramentas-computacionais-para-pesquisadores\u002F)\nfoi há um pouco mais de um ano, e foi apenas um dia.\nNesta tivemos 3 dias de atividades, e vários participantes.\n\nA oficina teve 28 participantes, porém nem todos vieram a todos os tutoriais.\nO maior número de pessoas num mesmo tutorial foi 23 e o menor foi 15.\nTivemos aulas de Shell, Julia, R, LaTeX, Git e RMarkdown.\n\nOs instrutores foram o [Fernando\nMayer](http:\u002F\u002Fwww.leg.ufpr.br\u002Fdoku.php\u002Fpessoais:fernandomayer), a\nKally Chung, e eu.\nNós mesmos nos revezamos como monitores.\n\nA maior parte dos participantes eram da pós-graduação, e da computação.\nTivemos uma quantidade saudável de pessoas da graduação, e dois professores.\nTivemos participantes da matemática, da matemática industrial, da física, da\nquímica, e um participante da farmácia.\n\nComeçamos com uma breve introdução e um help pra instalar o Julia. Tivemos muita\ndificuldade em fazer o Julia funcionar por motivos variados. Essencialmente\ndeveria precisar começar instalando o Jupyter pelo IJulia. Talvez funcionasse\nassim. Seguimos para um breve coffee.\n\nDepois do coffee, fizemos uma aula de Shell. Começamos mais cedo e ficamos quase\numa hora a mais do que o planejado. Como sempre o tempo ficou bastante apertado.\nMostramos no fim que existem comandos um pouco mais interessantes, como o `grep`\ne o `find`. Não deu pra falar muito mais, mas chegamos no `for` e `scripts`.\n\nDepois do almoço fizemos a aula de Julia. Havia planejado 3 a 4 aulas com um\npouco de análise de dados. No fim das contas consegui passar apenas o mínimo de\nJulia. Mostrando um pouco de álgebra linear numérica, mas não for, while e if.\n\nPor fim tivemos R, que também ficou razoavelmente limitado aos comandos básicos.\n\nNo segundo dia tivemos a primeira aula de Git, que foi bem. Considerando a\ncomplexidade da ferramenta, tivemos bons resultados.\n\nO segundo tutorial da manhã foi a segunda parte de R. Nessa parte vimos os\ngráficos e a análise de dados.\n\n![Fernando](\u002Fblog\u002F2016-08-01-swc3.jpg)\n\nA tarde foi apenas de LaTeX. Fizemos uma aula lendo um .tex pronto e modificando\nalgumas coisas. Conseguimos fazer as partes principais para fazer uma tese.\nInclusive BibTeX com Biblatex (básico).\n\n![Abel](\u002Fblog\u002F2016-08-01-swc4.jpg)\n\nO último dia de workshop teve o fim da aula de Git: a parte remota.\nFizemos contas no github, subimos o trabalho do dia anterior, baixamos e fizemos\nmodificações.\n\nDepois fizemos a segunda aula de Julia, onde pude apresentar for, while, if,\nplots e arquivos.\n\nPor fim, fizemos uma aula de RMarkdown, finalizando em como montar um site com\nele.\n\nComo sempre, tivemos algumas dificuldades com tempo e internet.\n\nFotos:\n\n![Wrap 1](\u002Fblog\u002F2016-08-01-swc1.jpg)\n\n![Wrap 2](\u002Fblog\u002F2016-08-01-swc2.jpg)\n\nInfelizmente não tiramos fotos da Kally ensinando.\n"},{slug:"2016-07-06-long-time-away",title:cv,date:"2016-07-06",tags:["life"],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"long-time-away"},children:[{type:b,tag:f,props:{ariaHidden:r,href:"#long-time-away",tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cv}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Hello, it's been a long time since my last post, and a lot has\nhappened since.\nI've had difficulty finding time to write a good post, or even a bad\npost, sometimes, but now I return with a brief explaining, and some\npossible continuation posts."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"First, during the classes period, I have a lot of obligations that use\na lot of time: Preparing classes, tests, projects, grading, etc.\nThis was most of my time."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Additionally, in May, I went to two conferences in my field, the\nOptimization Days 2016, in Montreal, Canada, and the XI Brazilian Workshop on\nContinuos Optimization, in Manaus\u002FAmazonas, here in Brazil.\nFor the first, I left at the end of April, but I had no visa, so I had\nto rush to get everything in order, then get the tickets and the\nhotel, while preparing the talk. I also worked with Dominique Orban in\nthere, which you should know from CUTEst."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Furthermore, I also gave a talk about Games and Artificial\nIntelligence for undergrad students around April and a talk about\nJulia for the Informatics grad program around May."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"June was a month of closures. I (re)done an old paper with Francisco\nGomes and submitted it. I almost finished the content of a paper with\nGeovani Grapiglia. CUTEst (and related) is (are) almost ready for\nrelease. The classes finished."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This week, the first of July, I had the pleasure of having Miles\nLubin, from MIT, over at UFPR. He gave a tutorial on JuMP, presenting\na linear and a non-linear model. People were very interested, and it\nwas very popular. There were 28 people attending it, with interest\nfrom the audience and a wide range of fields. I do plan to use JuMP in\nfuture classes, and some colleagues might too.\nAlso this week, there is a Term Paper defense, and the second part of my\ntenure-track avaliation."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now that I'll have more time again, I'll probably make more posts. I\nhave one about CUTEst, which I expected to make when released, but\nmaybe I'll have to do earlier to avoid confusion.\nI also want to make more applications of mathematics with Julia, but\nlet's see what happens."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"See you soon."}]}]},dir:C,path:"\u002Fblog\u002F2016-07-06-long-time-away",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Long time away\n\nHello, it's been a long time since my last post, and a lot has\nhappened since.\nI've had difficulty finding time to write a good post, or even a bad\npost, sometimes, but now I return with a brief explaining, and some\npossible continuation posts.\n\nFirst, during the classes period, I have a lot of obligations that use\na lot of time: Preparing classes, tests, projects, grading, etc.\nThis was most of my time.\n\nAdditionally, in May, I went to two conferences in my field, the\nOptimization Days 2016, in Montreal, Canada, and the XI Brazilian Workshop on\nContinuos Optimization, in Manaus\u002FAmazonas, here in Brazil.\nFor the first, I left at the end of April, but I had no visa, so I had\nto rush to get everything in order, then get the tickets and the\nhotel, while preparing the talk. I also worked with Dominique Orban in\nthere, which you should know from CUTEst.\n\nFurthermore, I also gave a talk about Games and Artificial\nIntelligence for undergrad students around April and a talk about\nJulia for the Informatics grad program around May.\n\nJune was a month of closures. I (re)done an old paper with Francisco\nGomes and submitted it. I almost finished the content of a paper with\nGeovani Grapiglia. CUTEst (and related) is (are) almost ready for\nrelease. The classes finished.\n\nThis week, the first of July, I had the pleasure of having Miles\nLubin, from MIT, over at UFPR. He gave a tutorial on JuMP, presenting\na linear and a non-linear model. People were very interested, and it\nwas very popular. There were 28 people attending it, with interest\nfrom the audience and a wide range of fields. I do plan to use JuMP in\nfuture classes, and some colleagues might too.\nAlso this week, there is a Term Paper defense, and the second part of my\ntenure-track avaliation.\n\nNow that I'll have more time again, I'll probably make more posts. I\nhave one about CUTEst, which I expected to make when released, but\nmaybe I'll have to do earlier to avoid confusion.\nI also want to make more applications of mathematics with Julia, but\nlet's see what happens.\n\nSee you soon.\n"},{slug:"2016-03-20-games-for-programmers",title:cw,date:"2016-03-20",tags:["games","teaching",cx],toc:[{id:cy,depth:I,text:cz},{id:cA,depth:I,text:cB},{id:cC,depth:I,text:cD},{id:cE,depth:I,text:cF}],body:{type:A,children:[{type:b,tag:x,props:{id:"games-for-programmers"},children:[{type:b,tag:f,props:{href:"#games-for-programmers",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cw}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ever since I can remember I liked puzzles. My father had a book on puzzles, and\nthere were also puzzle magazines. I liked it much\nI also liked gaming very much. I don't remember where it started, but I played\na lot.\nWell, today I'll talk about games that have programming involved, albeit\nindirectly."}]},{type:a,value:c},{type:b,tag:J,props:{id:cy},children:[{type:b,tag:f,props:{href:"#light-bot",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.kongregate.com\u002Fgames\u002FCoolio_Niato\u002Flight-bot",rel:[l,m,n],target:o},children:[{type:a,value:cz}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is a very simple game at first. It scales after some levels, but a\nprogrammer shouldn't have much trouble completing it.\nFor a non-programmer, it is a great starting point. It really is made for\nbeginners."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"There is also a Light-Bot 2.0, which you can continue after."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"They also made Light-Bot Rewired, but that is only the first game again to get\nmoney from you."}]},{type:a,value:c},{type:b,tag:J,props:{id:cA},children:[{type:b,tag:f,props:{href:"#tile-factory",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.kongregate.com\u002Fgames\u002Fduerig\u002Ftile-factory",rel:[l,m,n],target:o},children:[{type:a,value:cB}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is a good continuation. It is very big, but it starts easy enough.\nAfter some levels you will get some headache with timing and \"crossing lanes\",\nbut it still very good.\nThe "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FTile-Factory-Unbound\u002Ftile-factory-unbound",rel:[l,m,n],target:o},children:[{type:a,value:"source was\nopened"}]},{type:a,value:"\nsome time ago, so maybe a continuation can be made from interest people.\nTell me it that's the case."}]},{type:a,value:c},{type:b,tag:J,props:{id:cC},children:[{type:b,tag:f,props:{href:"#manufactoria",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.kongregate.com\u002Fgames\u002FPleasingFungus\u002Fmanufactoria",rel:[l,m,n],target:o},children:[{type:a,value:cD}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now things get ugly (or beautiful). This game really increases the difficulty.\nYou must use conditionals and loops from the early game.\nThis is easily my favorite of the list, althought it is very hard.\nI can't even remember if I finished all levels (in part because I eventually\nhave to change computers and start again)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you already are a programmer, you have to try it."}]},{type:a,value:c},{type:b,tag:J,props:{id:cE},children:[{type:b,tag:f,props:{href:"#other-games",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cF}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Some other games I must mention:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.kongregate.com\u002Fgames\u002Fkrispykrem\u002Fkohctpyktop-engineer-of-the-people",rel:[l,m,n],target:o},children:[{type:a,value:"KOHCTPYKTOP"}]},{type:a,value:":\nA game in which you design integrated circuits. It involves a little more\nknowledge of circuits than I have, so it became quite hard to do anything."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.kongregate.com\u002Fgames\u002Fkrispykrem\u002Fthe-codex-of-alchemical-engineering",rel:[l,m,n],target:o},children:[{type:a,value:"The Codex of Alchemical\nEngineering"}]},{type:a,value:":\nThis is similar to lightbot, but a little more difficult. For some reason, I\ndidn't enjoyed this enough."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"All these games were played on Kongregate because I spent a lot of time on that,\nbut most can be played on other sites too."}]}]},dir:C,path:"\u002Fblog\u002F2016-03-20-games-for-programmers",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Games for Programmers\n\nEver since I can remember I liked puzzles. My father had a book on puzzles, and\nthere were also puzzle magazines. I liked it much\nI also liked gaming very much. I don't remember where it started, but I played\na lot.\nWell, today I'll talk about games that have programming involved, albeit\nindirectly.\n\n## [Light-Bot](http:\u002F\u002Fwww.kongregate.com\u002Fgames\u002FCoolio_Niato\u002Flight-bot)\n\nThis is a very simple game at first. It scales after some levels, but a\nprogrammer shouldn't have much trouble completing it.\nFor a non-programmer, it is a great starting point. It really is made for\nbeginners.\n\nThere is also a Light-Bot 2.0, which you can continue after.\n\nThey also made Light-Bot Rewired, but that is only the first game again to get\nmoney from you.\n\n## [Tile Factory](http:\u002F\u002Fwww.kongregate.com\u002Fgames\u002Fduerig\u002Ftile-factory)\n\nThis is a good continuation. It is very big, but it starts easy enough.\nAfter some levels you will get some headache with timing and \"crossing lanes\",\nbut it still very good.\nThe [source was\nopened](https:\u002F\u002Fgithub.com\u002FTile-Factory-Unbound\u002Ftile-factory-unbound)\nsome time ago, so maybe a continuation can be made from interest people.\nTell me it that's the case.\n\n## [Manufactoria](http:\u002F\u002Fwww.kongregate.com\u002Fgames\u002FPleasingFungus\u002Fmanufactoria)\n\nNow things get ugly (or beautiful). This game really increases the difficulty.\nYou must use conditionals and loops from the early game.\nThis is easily my favorite of the list, althought it is very hard.\nI can't even remember if I finished all levels (in part because I eventually\nhave to change computers and start again).\n\nIf you already are a programmer, you have to try it.\n\n## Other games\n\nSome other games I must mention:\n\n- [KOHCTPYKTOP](http:\u002F\u002Fwww.kongregate.com\u002Fgames\u002Fkrispykrem\u002Fkohctpyktop-engineer-of-the-people):\n  A game in which you design integrated circuits. It involves a little more\n  knowledge of circuits than I have, so it became quite hard to do anything.\n- [The Codex of Alchemical\n  Engineering](http:\u002F\u002Fwww.kongregate.com\u002Fgames\u002Fkrispykrem\u002Fthe-codex-of-alchemical-engineering):\n  This is similar to lightbot, but a little more difficult. For some reason, I\n  didn't enjoyed this enough.\n\nAll these games were played on Kongregate because I spent a lot of time on that,\nbut most can be played on other sites too.\n"},{slug:"2016-03-13-test-driven-development-in-julia",title:cG,date:"2016-03-13",tags:["tdd",H],toc:[{id:H,depth:I,text:O},{id:cH,depth:I,text:cI},{id:cJ,depth:I,text:cK}],body:{type:A,children:[{type:b,tag:x,props:{id:"test-driven-development-in-julia"},children:[{type:b,tag:f,props:{href:"#test-driven-development-in-julia",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cG}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"First, what is Test Driven Development (TDD)?\nWell, I'm not an expert, so don't quote me, but in practice it means that you\ndevelop your code to fulfill tests that you define prior to beginning your work.\nYou do not define "},{type:b,tag:v,props:{},children:[{type:a,value:cL}]},{type:a,value:" your tests first, though. You define a single test,\nand produce code to pass it. Then you define another code, and produce code to\npass both. And so forth until you complete your specification."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is good because:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Wherever you stop, you know what is working."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"When you finish, your code already has tests."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:"http:\u002F\u002Fc2.com\u002Fcgi\u002Fwiki?PrematureOptimization",rel:[l,m,n],target:o},children:[{type:a,value:"You don't have to optimize prematurely."}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The steps of TDD can be described as "},{type:b,tag:f,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FTest-driven_development",rel:[l,m,n],target:o},children:[{type:a,value:"from\nWikipedia"}]}]},{type:a,value:c},{type:b,tag:av,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Add tests"}]},{type:a,value:": These should be useful, "},{type:b,tag:G,props:{},children:[{type:a,value:"and should fail"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:aI}]},{type:a,value:": Verify that the test fails. If not, go back to 1."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Write code"}]},{type:a,value:": Write enough code to pass the test."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:aI}]},{type:a,value:": Verify that "},{type:b,tag:v,props:{},children:[{type:a,value:cL}]},{type:a,value:" tests pass. If some of the tests fail, go back to 3."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Refactor"}]},{type:a,value:": Now that everything passes, make the code looks nicer. This is harder for non-seasoned programmers, because it's vague. Essentially, it means removing duplicate code, magic numbers, clarifying names, etc."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:aI}]},{type:a,value:": Again. Should be done during refactoring, to guarantee you're not breaking anything. But just to be very clear: "},{type:b,tag:G,props:{},children:[{type:a,value:"your tests should pass at the end of refactoring"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Repeat"}]},{type:a,value:w}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is one way of describing TDD, but there are other. Many others, by the way.\nIn fact, there are many images describing it, so you can print one and staple it\naround."}]},{type:a,value:c},{type:b,tag:J,props:{id:H},children:[{type:b,tag:f,props:{href:cM,ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"First, we are gonna follow the "},{type:b,tag:G,props:{},children:[{type:a,value:"package"}]},{type:a,value:" layout in Julia.\n"},{type:b,tag:f,props:{href:cN},children:[{type:a,value:"This post"}]},{type:a,value:" mentions it at the end.\nBasically, we need"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Folder PackageName.jl\n"},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:cO},{type:b,tag:e,props:{},children:[{type:a,value:cP}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"PackageName.jl"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:cO},{type:b,tag:e,props:{},children:[{type:a,value:ak}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"runtests.jl"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:aJ}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:aK}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In our example, we're gonna write a program to convert Roman numbers to decimal,\nand vice-versa.\nThis was inspired by "},{type:b,tag:f,props:{href:"http:\u002F\u002Fcodingdojo.org\u002Fcgi-bin\u002Findex.pl?KataRomanNumerals",rel:[l,m,n],target:o},children:[{type:a,value:"this\nsite"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Important: You should use git, but I'll skip it here"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Let's begin writing the outline of the project"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"mkdir RomanNumerals.jl\ncd RomanNumerals\nmkdir src test\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File src\u002FRomanNumerals.jl\nmodule RomanNumerals\n\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File test\u002Fruntests.jl\nusing RomanNumerals\n\ninclude(\"test_digits.jl\")\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This defines the building blocks. Note that "},{type:b,tag:e,props:{},children:[{type:a,value:"test_digits.jl"}]},{type:a,value:" does not exist. We're\ngonna create it to test the individuals digits."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Our testing environment will consist of having a terminal open at all\ntimes at the root of this project. Our testing command will be"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"julia -L src\u002FRomanNumerals.jl test\u002Fruntests.jl\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"There are different ways to issue the same command, but this is locally good."}]},{type:a,value:c},{type:b,tag:J,props:{id:cH},children:[{type:b,tag:f,props:{href:"#tests",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cI}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Julia comes with a "},{type:b,tag:e,props:{},children:[{type:a,value:cQ}]},{type:a,value:" package, which is the least you should use.\nFor all basic things it is enough. It provides the "},{type:b,tag:e,props:{},children:[{type:a,value:cR}]},{type:a,value:" macro, which you can\nuse as"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using Base.Test\n@test 1 == 1 # This will pass\n@test 1 == 0 # This will fail\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We're gonna go a step beyong and use\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FJuliaLang\u002FFactCheck.jl",rel:[l,m,n],target:o},children:[{type:a,value:"FactCheck.jl"}]},{type:a,value:".\nThis provides more information about the tests."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We're gonna implement the function "},{type:b,tag:e,props:{},children:[{type:a,value:"roman_to_dec"}]},{type:a,value:" which receives a string with\nroman numerals and returns the decimal equivalent of the number.\nWith "},{type:b,tag:e,props:{},children:[{type:a,value:"FactCheck"}]},{type:a,value:", our first test will be"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File test\u002Ftest_digits.jl\nusing FactCheck\n\nfacts(\"Testing digits\") do\n  @fact roman_to_dec(\"I\") --\u003E 1\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"When we run our test, we'll get"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Testing digits\n  Error :: (line:-1)\n    Expression: roman_to_dec(\"I\") --\u003E 1\n    UndefVarError: roman_to_dec not defined\n      ...\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Look, "},{type:b,tag:e,props:{},children:[{type:a,value:"roman_to_dec not defined"}]},{type:a,value:". Well, let's define it."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File src\u002FRomanNumerals.jl\n...\nexport roman_to_dec\n\nfunction roman_to_dec(s)\nend\n...\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Running again, we get an even better message"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Testing digits\n  Error :: (line:-1) :: fact was false\n    Expression: roman_to_dec(\"I\") --\u003E 1\n      Expected: 1\n      Occurred: nothing\nOut of 1 total fact:\n  Failed:   1\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Expected 1, nothing ocurred. Well, that's easy."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File src\u002FRomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  return 1\nend\n...\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Testing digits\n1 fact verified\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Done. We're successful. Rejoice. Back to work."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We've written a test, we've tested it, we've written code to fix it, we tested\nit. Not much to refactor, this is a silly example."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Repeat. Let's improve the tests."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File test\u002Ftest_digits.jl\n...\nfacts(\"Testing digits\") do\n  @fact roman_to_dec(\"I\") --\u003E 1\n  @fact roman_to_dec(\"V\") --\u003E 5\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Running, we obtain"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Testing digits\n  Error :: (line:-1) :: fact was false\n    Expression: roman_to_dec(\"V\") --\u003E 5\n      Expected: 5\n      Occurred: 1\nOut of 2 total fact:\n  Verified: 1\n  Failed:   1\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, that's better. Improving the code."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File src\u002FRomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  if s == \"I\"\n    return 1\n  else\n    return 5\n  end\nend\n...\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This too will pass. Notice that this example is very silly. It is instructional,\nof course. On a real application, you could start with all digits at once, for\ninstance."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"More tests and solutions:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File test\u002Ftest_digits.jl\n...\nfacts(\"Testing digits\") do\n  @fact roman_to_dec(\"I\") --\u003E 1\n  @fact roman_to_dec(\"V\") --\u003E 5\n  @fact roman_to_dec(\"X\") --\u003E 10\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File src\u002FRomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  if s == \"I\"\n    return 1\n  elseif s == \"V\"\n    return 5\n  else\n    return 10\n  end\nend\n...\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now we can refactor, because it's getting very ugly."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File src\u002FRomanNumerals.jl\n...\nconst digits = Dict(\"I\"=\u003E1, \"V\"=\u003E5, \"X\"=\u003E10)\n\nfunction roman_to_dec(s)\n  return digits[s]\nend\n...\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We can also refactor the test."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File test\u002Ftest_digits.jl\n...\nfacts(\"Testing digits\") do\n  for (digit,value) in [(\"I\",1), (\"V\",5), (\"X\",10)]\n    @fact roman_to_dec(digit) --\u003E value\n  end\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Test. Now we can add more tests for digits, and it will be much easier (because\nit's refactored) to both create the test and to solve it."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Understanding the logic now, you can add all the rest of the digits at once.\n"},{type:b,tag:v,props:{},children:[{type:a,value:"Remember to test before start fixing,"}]},{type:a,value:" even though is very easy now.\nThis could be a breaking moment on your code. If, when trying to fix it, you\nrealize it's not as simple as you expected. Remove the test, and add a smaller\none. At this time it will be very useful to have been using git."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File test\u002Ftest_digits.jl\n...\nfacts(\"Testing digits\") do\n  for (digit,value) in [(\"I\",1), (\"V\",5), (\"X\",10), (\"L\",50), (\"C\",100),\n      (\"D\",500), (\"M\",1000)]\n    @fact roman_to_dec(digit) --\u003E value\n  end\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File src\u002FRomanNumerals.jl\n...\nconst digits = Dict(\"I\"=\u003E1, \"V\"=\u003E5, \"X\"=\u003E10, \"L\"=\u003E50, \"C\"=\u003E100, \"D\"=\u003E500,\n  \"M\"=\u003E1000)\n...\n"}]}]}]},{type:a,value:c},{type:b,tag:J,props:{id:cJ},children:[{type:b,tag:f,props:{href:"#next-test",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cK}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We've completed a test. Let's do the next."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File test\u002Fruntests.jl\nusing RomanNumerals\n\ninclude(\"test_digits.jl\")\ninclude(\"test_double_digits.jl\")\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Double digits are more complex that single digits (by at least at factor of 2?\n:) ). Let's break it down using "},{type:b,tag:e,props:{},children:[{type:a,value:"context"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File test\u002Ftest_double_digits.jl\nusing FactCheck\n\nfacts(\"Testing double digits\") do\n  context(\"Repeated digits\") do\n    @fact roman_to_dec(\"II\") --\u003E 2\n  end\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Testing this will fail (as it should), with a "},{type:b,tag:e,props:{},children:[{type:a,value:"KeyError: II not found"}]},{type:a,value:", because\nwe're using the dictionary, and \"II\" is not in it."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Before reading the solution, try to fix it yourself. There are many ways to do\nit."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File src\u002FRomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  dec = 0\n  for i = 1:length(s)\n    dec += digits[s[i:i]]\n  end\n  return dec\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This fixes it. Now to refactor. You may have noticed that "},{type:b,tag:e,props:{},children:[{type:a,value:"s[i]"}]},{type:a,value:" does not work\ninside "},{type:b,tag:e,props:{},children:[{type:a,value:"digits"}]},{type:a,value:". That is because julia differentiates characters and single\ndigits strings (like C, unlike Python). One refactor option is to change the\ndictionary to use chars.\nAnother option is to use a better variable instead of s, since it start to\nbecome a nuisance to read.\nYet another, is to use another way to make the sum."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Since this post explains the usage of TDD, it ends here.\nYou can continue with this problem until you can make a complete conversor of\nroman to decimal."}]}]},dir:C,path:"\u002Fblog\u002F2016-03-13-test-driven-development-in-julia",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Test Driven Development in Julia\n\nFirst, what is Test Driven Development (TDD)?\nWell, I'm not an expert, so don't quote me, but in practice it means that you\ndevelop your code to fulfill tests that you define prior to beginning your work.\nYou do not define **all** your tests first, though. You define a single test,\nand produce code to pass it. Then you define another code, and produce code to\npass both. And so forth until you complete your specification.\n\nThis is good because:\n\n- Wherever you stop, you know what is working.\n- When you finish, your code already has tests.\n- [You don't have to optimize prematurely.](http:\u002F\u002Fc2.com\u002Fcgi\u002Fwiki?PrematureOptimization)\n\nThe steps of TDD can be described as [from\nWikipedia](https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FTest-driven_development)\n\n1. **Add tests**: These should be useful, _and should fail_.\n2. **Run tests**: Verify that the test fails. If not, go back to 1.\n3. **Write code**: Write enough code to pass the test.\n4. **Run tests**: Verify that **all** tests pass. If some of the tests fail, go back to 3.\n5. **Refactor**: Now that everything passes, make the code looks nicer. This is harder for non-seasoned programmers, because it's vague. Essentially, it means removing duplicate code, magic numbers, clarifying names, etc.\n6. **Run tests**: Again. Should be done during refactoring, to guarantee you're not breaking anything. But just to be very clear: _your tests should pass at the end of refactoring_.\n7. **Repeat**.\n\nThis is one way of describing TDD, but there are other. Many others, by the way.\nIn fact, there are many images describing it, so you can print one and staple it\naround.\n\n## Julia\n\nFirst, we are gonna follow the _package_ layout in Julia.\n[This post]({{local_prefix}}\u002Fautomated-testing\u002F) mentions it at the end.\nBasically, we need\n\n- Folder PackageName.jl\n  - Folder `src`\n  - PackageName.jl\n  - Folder `test`\n  - runtests.jl\n  - README.md\n  - LICENSE.md\n\nIn our example, we're gonna write a program to convert Roman numbers to decimal,\nand vice-versa.\nThis was inspired by [this\nsite](http:\u002F\u002Fcodingdojo.org\u002Fcgi-bin\u002Findex.pl?KataRomanNumerals).\n\n**Important: You should use git, but I'll skip it here**\n\nLet's begin writing the outline of the project\n\n```\nmkdir RomanNumerals.jl\ncd RomanNumerals\nmkdir src test\n```\n\n```\n# File src\u002FRomanNumerals.jl\nmodule RomanNumerals\n\nend\n```\n\n```\n# File test\u002Fruntests.jl\nusing RomanNumerals\n\ninclude(\"test_digits.jl\")\n```\n\nThis defines the building blocks. Note that `test_digits.jl` does not exist. We're\ngonna create it to test the individuals digits.\n\nOur testing environment will consist of having a terminal open at all\ntimes at the root of this project. Our testing command will be\n\n```\njulia -L src\u002FRomanNumerals.jl test\u002Fruntests.jl\n```\n\nThere are different ways to issue the same command, but this is locally good.\n\n## Tests\n\nJulia comes with a `Base.Test` package, which is the least you should use.\nFor all basic things it is enough. It provides the `@test` macro, which you can\nuse as\n\n```\nusing Base.Test\n@test 1 == 1 # This will pass\n@test 1 == 0 # This will fail\n```\n\nWe're gonna go a step beyong and use\n[FactCheck.jl](https:\u002F\u002Fgithub.com\u002FJuliaLang\u002FFactCheck.jl).\nThis provides more information about the tests.\n\nWe're gonna implement the function `roman_to_dec` which receives a string with\nroman numerals and returns the decimal equivalent of the number.\nWith `FactCheck`, our first test will be\n\n```\n# File test\u002Ftest_digits.jl\nusing FactCheck\n\nfacts(\"Testing digits\") do\n  @fact roman_to_dec(\"I\") --\u003E 1\nend\n```\n\nWhen we run our test, we'll get\n\n```\nTesting digits\n  Error :: (line:-1)\n    Expression: roman_to_dec(\"I\") --\u003E 1\n    UndefVarError: roman_to_dec not defined\n      ...\n```\n\nLook, `roman_to_dec not defined`. Well, let's define it.\n\n```\n# File src\u002FRomanNumerals.jl\n...\nexport roman_to_dec\n\nfunction roman_to_dec(s)\nend\n...\n```\n\nRunning again, we get an even better message\n\n```\nTesting digits\n  Error :: (line:-1) :: fact was false\n    Expression: roman_to_dec(\"I\") --\u003E 1\n      Expected: 1\n      Occurred: nothing\nOut of 1 total fact:\n  Failed:   1\n```\n\nExpected 1, nothing ocurred. Well, that's easy.\n\n```\n# File src\u002FRomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  return 1\nend\n...\n```\n\n```\nTesting digits\n1 fact verified\n```\n\nDone. We're successful. Rejoice. Back to work.\n\nWe've written a test, we've tested it, we've written code to fix it, we tested\nit. Not much to refactor, this is a silly example.\n\nRepeat. Let's improve the tests.\n\n```\n# File test\u002Ftest_digits.jl\n...\nfacts(\"Testing digits\") do\n  @fact roman_to_dec(\"I\") --\u003E 1\n  @fact roman_to_dec(\"V\") --\u003E 5\nend\n```\n\nRunning, we obtain\n\n```\nTesting digits\n  Error :: (line:-1) :: fact was false\n    Expression: roman_to_dec(\"V\") --\u003E 5\n      Expected: 5\n      Occurred: 1\nOut of 2 total fact:\n  Verified: 1\n  Failed:   1\n```\n\nNow, that's better. Improving the code.\n\n```\n# File src\u002FRomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  if s == \"I\"\n    return 1\n  else\n    return 5\n  end\nend\n...\n```\n\nThis too will pass. Notice that this example is very silly. It is instructional,\nof course. On a real application, you could start with all digits at once, for\ninstance.\n\nMore tests and solutions:\n\n```\n# File test\u002Ftest_digits.jl\n...\nfacts(\"Testing digits\") do\n  @fact roman_to_dec(\"I\") --\u003E 1\n  @fact roman_to_dec(\"V\") --\u003E 5\n  @fact roman_to_dec(\"X\") --\u003E 10\nend\n```\n\n```\n# File src\u002FRomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  if s == \"I\"\n    return 1\n  elseif s == \"V\"\n    return 5\n  else\n    return 10\n  end\nend\n...\n```\n\nNow we can refactor, because it's getting very ugly.\n\n```\n# File src\u002FRomanNumerals.jl\n...\nconst digits = Dict(\"I\"=\u003E1, \"V\"=\u003E5, \"X\"=\u003E10)\n\nfunction roman_to_dec(s)\n  return digits[s]\nend\n...\n```\n\nWe can also refactor the test.\n\n```\n# File test\u002Ftest_digits.jl\n...\nfacts(\"Testing digits\") do\n  for (digit,value) in [(\"I\",1), (\"V\",5), (\"X\",10)]\n    @fact roman_to_dec(digit) --\u003E value\n  end\nend\n```\n\nTest. Now we can add more tests for digits, and it will be much easier (because\nit's refactored) to both create the test and to solve it.\n\nUnderstanding the logic now, you can add all the rest of the digits at once.\n**Remember to test before start fixing,** even though is very easy now.\nThis could be a breaking moment on your code. If, when trying to fix it, you\nrealize it's not as simple as you expected. Remove the test, and add a smaller\none. At this time it will be very useful to have been using git.\n\n```\n# File test\u002Ftest_digits.jl\n...\nfacts(\"Testing digits\") do\n  for (digit,value) in [(\"I\",1), (\"V\",5), (\"X\",10), (\"L\",50), (\"C\",100),\n      (\"D\",500), (\"M\",1000)]\n    @fact roman_to_dec(digit) --\u003E value\n  end\nend\n```\n\n```\n# File src\u002FRomanNumerals.jl\n...\nconst digits = Dict(\"I\"=\u003E1, \"V\"=\u003E5, \"X\"=\u003E10, \"L\"=\u003E50, \"C\"=\u003E100, \"D\"=\u003E500,\n  \"M\"=\u003E1000)\n...\n```\n\n## Next test\n\nWe've completed a test. Let's do the next.\n\n```\n# File test\u002Fruntests.jl\nusing RomanNumerals\n\ninclude(\"test_digits.jl\")\ninclude(\"test_double_digits.jl\")\n```\n\nDouble digits are more complex that single digits (by at least at factor of 2?\n:) ). Let's break it down using `context`.\n\n```\n# File test\u002Ftest_double_digits.jl\nusing FactCheck\n\nfacts(\"Testing double digits\") do\n  context(\"Repeated digits\") do\n    @fact roman_to_dec(\"II\") --\u003E 2\n  end\nend\n```\n\nTesting this will fail (as it should), with a `KeyError: II not found`, because\nwe're using the dictionary, and \"II\" is not in it.\n\nBefore reading the solution, try to fix it yourself. There are many ways to do\nit.\n\n```\n# File src\u002FRomanNumerals.jl\n...\nfunction roman_to_dec(s)\n  dec = 0\n  for i = 1:length(s)\n    dec += digits[s[i:i]]\n  end\n  return dec\nend\n```\n\nThis fixes it. Now to refactor. You may have noticed that `s[i]` does not work\ninside `digits`. That is because julia differentiates characters and single\ndigits strings (like C, unlike Python). One refactor option is to change the\ndictionary to use chars.\nAnother option is to use a better variable instead of s, since it start to\nbecome a nuisance to read.\nYet another, is to use another way to make the sum.\n\nSince this post explains the usage of TDD, it ends here.\nYou can continue with this problem until you can make a complete conversor of\nroman to decimal.\n"},{slug:"2016-03-06-latex-tools-for-revision",title:cS,date:"2016-03-06",tags:[at,"diff","revision","xournal"],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"latex-tools-for-revision"},children:[{type:b,tag:f,props:{href:"#latex-tools-for-revision",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cS}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This post is just to introduce two new tools I found."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fftilmann\u002Flatexdiff",rel:[l,m,n],target:o},children:[{type:a,value:"LatexDiff"}]},{type:a,value:" is a tool that compares two\ntex files and generates a third marking the differences between them.\nIt is great, for instance, when you update a thesis or article, and want to show\nthe differences to your advisor or colleague."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Beware that this tool is not without mistakes. Sometimes it fails to mark a\ndifference, specially in equations."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The other tools is "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgitlab.com\u002Flatexpand\u002Flatexpand",rel:[l,m,n],target:o},children:[{type:a,value:"Latexpand"}]},{type:a,value:", which\nreads a .tex file and replace "},{type:b,tag:e,props:{},children:[{type:a,value:"input"}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:"include"}]},{type:a,value:" commands with the content of\nthe tex.\nThis tools isn't really necessary in a normal context because latexdiff can do\nthis expansion (or flattening) if you use the argument "},{type:b,tag:e,props:{},children:[{type:a,value:"--flatten"}]},{type:a,value:". I haven't\ntried it, though."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"What I did was use them with git. If you want to compare two files under git,\none simple option is"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"git checkout old-commit\nlatexpand main.tex \u003E oldmain.tex\ngit checkout new-commit\nlatexpend main.tex \u003E newmain.tex\nlatexdiff oldmain.tex newmain.tex \u003E diffmain.tex\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I'm still going to try it under git difftool."}]}]},dir:C,path:"\u002Fblog\u002F2016-03-06-latex-tools-for-revision",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# LaTeX tools for revision\n\nThis post is just to introduce two new tools I found.\n\n[LatexDiff](https:\u002F\u002Fgithub.com\u002Fftilmann\u002Flatexdiff) is a tool that compares two\ntex files and generates a third marking the differences between them.\nIt is great, for instance, when you update a thesis or article, and want to show\nthe differences to your advisor or colleague.\n\nBeware that this tool is not without mistakes. Sometimes it fails to mark a\ndifference, specially in equations.\n\nThe other tools is [Latexpand](https:\u002F\u002Fgitlab.com\u002Flatexpand\u002Flatexpand), which\nreads a .tex file and replace `input` and `include` commands with the content of\nthe tex.\nThis tools isn't really necessary in a normal context because latexdiff can do\nthis expansion (or flattening) if you use the argument `--flatten`. I haven't\ntried it, though.\n\nWhat I did was use them with git. If you want to compare two files under git,\none simple option is\n\n```\ngit checkout old-commit\nlatexpand main.tex \u003E oldmain.tex\ngit checkout new-commit\nlatexpend main.tex \u003E newmain.tex\nlatexdiff oldmain.tex newmain.tex \u003E diffmain.tex\n```\n\nI'm still going to try it under git difftool.\n"},{slug:"2016-02-28-minicurso-de-julia-para-otimizacao",title:cT,date:"2016-02-28",tags:[H,K,Y],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"minicurso-de-julia-para-otimização"},children:[{type:b,tag:f,props:{href:"#minicurso-de-julia-para-otimiza%C3%A7%C3%A3o",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cT}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Semana passada, nos dias 22 a 24 de Fevereiro aconteceu o VIII Simpósio de\nAnálise Numérica e Otimização.\nNesse evento, eu apresentei um minicurso de Julia com foco em Otimização não\nLinear.\nEntre 10 e 15 pessoas participaram no total, entre alunos de graduação, de\npós-graduação, e professores.\nO objetivo principal era apresentar a linguagem e alguns detalhes importante\npara otimização não linear, o que foi obtido.\nPor outro lado, as aulas foram mais longas do que deveriam, e o conteúdo ficou\nmuito esparso, pois tive que variar entre o básico e uma aplicação mais\navançada.\nPara o próximo workshop, provavelmente focarei na introdução, que foi a primeira\naula."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O conteúdo pode ser obtido\n"},{type:b,tag:f,props:{href:cU,rel:[l,m,n],target:o},children:[{type:a,value:S}]},{type:a,value:", e consiste de três\n"},{type:b,tag:f,props:{href:cV,rel:[l,m,n],target:o},children:[{type:a,value:"notebooks em Jupyter"}]},{type:a,value:", uma introdução e outros arquivos."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Para rodar os notebooks, você precisa instalar o\n"},{type:b,tag:f,props:{href:cV,rel:[l,m,n],target:o},children:[{type:a,value:"Jupyter"}]},{type:a,value:", o "},{type:b,tag:f,props:{href:cW,rel:[l,m,n],target:o},children:[{type:a,value:O}]},{type:a,value:cX},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FJuliaLang\u002FIJulia.jl",rel:[l,m,n],target:o},children:[{type:a,value:"IJulia"}]},{type:a,value:".\nAlternativamente, use o "},{type:b,tag:f,props:{href:"https:\u002F\u002Fjuliabox.org\u002F",rel:[l,m,n],target:o},children:[{type:a,value:co}]},{type:a,value:" para rodá-los online."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Além disso, para a segunda aula em diante você precisa do CUTEst, que pode ser\ninstalado seguindo\n"},{type:b,tag:f,props:{href:"%7B%7Blocal_prefix%7D%7D\u002Finstalling-cutest-and-cutest.jl\u002F"},children:[{type:a,value:cY}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Minha recomendação de editor é o "},{type:b,tag:f,props:{href:"http:\u002F\u002Fatom.io",rel:[l,m,n],target:o},children:[{type:a,value:"Atom"}]},{type:a,value:", com os plugins\n"},{type:b,tag:e,props:{},children:[{type:a,value:"language-julia"}]},{type:a,value:X},{type:b,tag:e,props:{},children:[{type:a,value:"latex-completions"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Para uma experiência com testes automatizados, veja também\n"},{type:b,tag:f,props:{href:cN},children:[{type:a,value:cY}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2016-02-28-minicurso-de-julia-para-otimizacao",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Minicurso de Julia para Otimização\n\nSemana passada, nos dias 22 a 24 de Fevereiro aconteceu o VIII Simpósio de\nAnálise Numérica e Otimização.\nNesse evento, eu apresentei um minicurso de Julia com foco em Otimização não\nLinear.\nEntre 10 e 15 pessoas participaram no total, entre alunos de graduação, de\npós-graduação, e professores.\nO objetivo principal era apresentar a linguagem e alguns detalhes importante\npara otimização não linear, o que foi obtido.\nPor outro lado, as aulas foram mais longas do que deveriam, e o conteúdo ficou\nmuito esparso, pois tive que variar entre o básico e uma aplicação mais\navançada.\nPara o próximo workshop, provavelmente focarei na introdução, que foi a primeira\naula.\n\nO conteúdo pode ser obtido\n[aqui](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fjulia-workshop), e consiste de três\n[notebooks em Jupyter](http:\u002F\u002Fjupyter.org\u002F), uma introdução e outros arquivos.\n\nPara rodar os notebooks, você precisa instalar o\n[Jupyter](http:\u002F\u002Fjupyter.org\u002F), o [Julia](http:\u002F\u002Fjulialang.org\u002F) e o\n[IJulia](https:\u002F\u002Fgithub.com\u002FJuliaLang\u002FIJulia.jl).\nAlternativamente, use o [JuliaBox](https:\u002F\u002Fjuliabox.org\u002F) para rodá-los online.\n\nAlém disso, para a segunda aula em diante você precisa do CUTEst, que pode ser\ninstalado seguindo\n[este post]({{local_prefix}}\u002Finstalling-cutest-and-cutest.jl\u002F).\n\nMinha recomendação de editor é o [Atom](http:\u002F\u002Fatom.io), com os plugins\n`language-julia` e `latex-completions`.\n\nPara uma experiência com testes automatizados, veja também\n[este post]({{local_prefix}}\u002Fautomated-testing\u002F).\n"},{slug:"2016-02-23-ubuntu-graphic-interface-stopped-working",title:cZ,date:"2016-02-23",tags:[K,c_],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"ubuntu-graphic-interface-stopped-working"},children:[{type:b,tag:f,props:{href:"#ubuntu-graphic-interface-stopped-working",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:cZ}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Some time ago, I helped a colleague "},{type:b,tag:f,props:{href:"%7B%7Blocal_prefix%7D%7D\u002Finstalando-o-ubuntu-14.10-no-sony-vaio\u002F"},children:[{type:a,value:"install Ubuntu in a Sony Vaio, which ended\nup having SSD\nproblems"}]},{type:a,value:".\nToday, his computer started without the bar and menu from Unity.\nOnly the desktop and icons were appearing, and the keyboards shortcuts were also\nnot working."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To fix, I found "},{type:b,tag:f,props:{href:"http:\u002F\u002Faskubuntu.com\u002Fquestions\u002F17381\u002Funity-doesnt-load-no-launcher-no-dash-appears",rel:[l,m,n],target:o},children:[{type:a,value:"this askubuntu\nquestion"}]},{type:a,value:",\nthat worked like a charm."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The steps were simply:"}]},{type:a,value:c},{type:b,tag:av,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Enter the terminal mode with Ctrl+Shift+F2 (or other number);"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Login;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Enter the commands"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"export DISPLAY=:0\nsudo dconf reset -f \u002Forg\u002Fcompiz\u002F\nsetsid unity\n"}]}]}]},{type:a,value:c},{type:b,tag:av,props:{start:4},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Reboot with"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"sudo reboot\n"}]}]}]},{type:a,value:c},{type:b,tag:av,props:{start:5},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Verify everything is working now."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This was enough to fix it."}]}]},dir:C,path:"\u002Fblog\u002F2016-02-23-ubuntu-graphic-interface-stopped-working",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Ubuntu graphic interface stopped working\n\nSome time ago, I helped a colleague [install Ubuntu in a Sony Vaio, which ended\nup having SSD\nproblems]({{local_prefix}}\u002Finstalando-o-ubuntu-14.10-no-sony-vaio\u002F).\nToday, his computer started without the bar and menu from Unity.\nOnly the desktop and icons were appearing, and the keyboards shortcuts were also\nnot working.\n\nTo fix, I found [this askubuntu\nquestion](http:\u002F\u002Faskubuntu.com\u002Fquestions\u002F17381\u002Funity-doesnt-load-no-launcher-no-dash-appears),\nthat worked like a charm.\n\nThe steps were simply:\n\n1. Enter the terminal mode with Ctrl+Shift+F2 (or other number);\n2. Login;\n3. Enter the commands\n\n```\nexport DISPLAY=:0\nsudo dconf reset -f \u002Forg\u002Fcompiz\u002F\nsetsid unity\n```\n\n4. Reboot with\n\n```\nsudo reboot\n```\n\n5. Verify everything is working now.\n\nThis was enough to fix it.\n"},{slug:"2016-02-21-automated-testing",title:c$,date:"2016-02-21",tags:[ak,H,"travis","coveralls",aL],toc:[{id:da,depth:I,text:db},{id:dc,depth:I,text:dd},{id:de,depth:I,text:df},{id:dg,depth:I,text:dh},{id:di,depth:I,text:dj}],body:{type:A,children:[{type:b,tag:x,props:{id:"automated-testing"},children:[{type:b,tag:f,props:{href:"#automated-testing",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:c$}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We're gonna learn how to make a test for your Julia code that runs whenever you\npublish it online. We're gonna use"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:aM,rel:[l,m,n],target:o},children:[{type:a,value:U}]},{type:a,value:" to store the code;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:"http:\u002F\u002Ftravis-ci.com",rel:[l,m,n],target:o},children:[{type:a,value:"Travis CI"}]},{type:a,value:" to run your tests;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:"http:\u002F\u002Fcoveralls.io",rel:[l,m,n],target:o},children:[{type:a,value:"Coveralls.io"}]},{type:a,value:" to verify which lines of code your test are missing."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Alternatively, for a open source alternative, see "},{type:b,tag:f,props:{href:"http:\u002F\u002Fgitlab.com",rel:[l,m,n],target:o},children:[{type:a,value:"GitLab"}]},{type:a,value:",\nwhich I don't know enough yet."}]},{type:a,value:c},{type:b,tag:aq,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Let's make a litte code to solve a linear system, paying attention to the\nproblems it may arise, like incorrect dimensions, underdetermined and\noverdetermined systems, singular matrices, etc.\nAnd we'll be using the factorizations, but not "},{type:b,tag:e,props:{},children:[{type:a,value:"\\"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:J,props:{id:da},children:[{type:b,tag:f,props:{href:"#the-math",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:db}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A simple (not cheap) way to do it is using Singular Value Decomposition (SVD).\nWe have"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$\nA = U\\Sigma V^T = \\sum_{i=1}^r \\sigma_i u_i v_i^T.\n$$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"where $r$ is the rank of $A$.\nSince the columns of $V$ form a basis for $\\mathbb{R}^n$ (where $x$ resides),\nthen"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$\nx = \\sum_{j=1}^n \\alpha_j v_j.\n$$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, we have"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$\nAx = \\sum_{i=1}^r \\sum_{j=1}^n \\sigma_i \\alpha_j u_i v_i^Tv_j\n= \\sum_{i=1}^r \\sigma_i \\alpha_i u_i\n$$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If the system has a solution, that is $Ax = b$, then we multiply by $u_j^T$,\nobtaining"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"$$\nu_j^TAx = \\sum_{i=1}^r \\sigma_i \\alpha_i u_j^Tu_i\n= \\sigma_j\\alpha_j = u_j^Tb\n$$"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Thus, $ \\alpha_j = \\dfrac{u_j^Tb}{\\sigma_j} $.\nIf the system doesn't have a solution, this still holds. I'll leave the steps to\nyou."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If $r \u003C n$, then $\\alpha$ has undetermined values. However, when that's the\ncase, the solution we'll use is the one with the smallest norm, that is, the one\nthat minimizes $\\Vert x\\Vert$.\nSince $v_i$ are orthonormal, then\n$$ \\Vert x\\Vert^2 = \\sum_{i=1}^n \\alpha_i^2.$$\nSo, in order to minimize the norm of x, we use $\\alpha_i = 0$ for $i \u003E r$."}]},{type:a,value:c},{type:b,tag:J,props:{id:dc},children:[{type:b,tag:f,props:{href:"#the-code",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:dd}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We'll store the code on\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FBlogAutomatedTesting.jl",rel:[l,m,n],target:o},children:[{type:a,value:"this"}]},{type:a,value:" GitHub\nrepository.\nNote, however, that it will point to the completed version."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A possible implementation of our code is as follows:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# File src\u002Fsolve_linear.jl\n{% include_relative {{ page.name }}\u002Fsolve_linear1.jl %}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To test it, open julia on the root folder and do"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"julia\u003E A = rand(5,5); b = rand(5)\njulia\u003E include(\"src\u002Fsolve_linear.jl\")\njulia\u003E norm(linear_system(A,b) - A\\b)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If the result is around $10^{-16}$, then everything went well.\nVery rarely, the generated matrix could be ill-conditioned.\nRun again, to verify if that's the case."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If everything went well, we'll write a test now."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For now, let's write a simple test running a lot of square linear systems.\nFor each system, to avoid using "},{type:b,tag:e,props:{},children:[{type:a,value:"A\\b"}]},{type:a,value:", we'll create a vector "},{type:b,tag:e,props:{},children:[{type:a,value:"b"}]},{type:a,value:" from a known\nsolution. Then we'll "},{type:b,tag:v,props:{},children:[{type:a,value:"assure"}]},{type:a,value:" that $\\Vert Ax-b\\Vert \u003C \\epsilon$\nand $\\Vert x-e\\Vert \u003C \\epsilon$.\nTo do that, we'll use "},{type:b,tag:e,props:{},children:[{type:a,value:cQ}]},{type:a,value:".\nNote however, that the condition of the matrix influences the error, and there\nare numerical errors involved. So we'll use the condition\n$$\\Vert x-e\\Vert \u003C 10^{-12} \\text{cond}(A).$$\nThe code is"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# file test\u002Ftest1.jl\n{% include_relative {{ page.name }}\u002Ftest1.jl %}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Run with"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ julia test\u002Ftest1.jl\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Nothing should appear."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The first line is a kludge to read the correct file from wherever the run the\ncode. If you're not building a module, this is ok. But normally you'll want to\nbuild a module. Ignore that for now.\nThe first for varies the dimension, and the second for runs the code a specific\nnumber of times.\nThis totals a hundred square linear systems being run.\nThe "},{type:b,tag:e,props:{},children:[{type:a,value:cR}]},{type:a,value:" macro verifies that the given expression is true.\nIf any solution is wrong, the code will be wrong. Also, if you use a smaller\ntolerance, the numerical rounding may give a error here."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ok, first thing you wanna do now is commit this code."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ git init\n$ git add src test\n$ git commit -m 'First commit'\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Then, go to GitHub, create an account, then a repository for this code (e.g.\nlinear_system.jl), then push the code.\n"},{type:b,tag:v,props:{},children:[{type:a,value:"Use the name with .jl in the end for the repository."}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ git add origin http:\u002F\u002Flink\u002Fto\u002Fyour\u002Fgithub\u002Frepository\u002F\n$ git push -u origin master\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Enter your password and verify the code is online."}]},{type:a,value:c},{type:b,tag:J,props:{id:de},children:[{type:b,tag:f,props:{href:"#online-testing",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:df}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now go to Travis and create an account. Go to your profile and\nclick on the "},{type:b,tag:e,props:{},children:[{type:a,value:"Sync account"}]},{type:a,value:" button if necessary.\nFind your repository and set the button to on.\nNow, with the next commit, a test will start. Let's make it happen."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Create a file "},{type:b,tag:e,props:{},children:[{type:a,value:aw}]},{type:a,value:" (yes, with a leading dot) with information for the\nbuild. Here's a simple file:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# file .travis.yml\n{% include_relative {{ page.name }}\u002Ftravis1.yml %}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Include the file and push"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ git add .travis.yml\n$ git commit -m 'Add .travis.yml'\n$ git push\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, go to your travis page, and after a while you'll see your repository with a\ntest running (or already finished, because it is short).\nYou should have a passing test. If not, verify your files again, then the error\non travis.\nNotice that you can see the complete log of what is run."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Using an online automated testing is useful for many reasons:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Everyone can see if the code is working;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Pull requests generate a travis build, so you can see if it's working;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"You don't forget to test;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"You test on a clean environment;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"You can test with multiple versions of Julia (or other linguage)."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:J,props:{id:dg},children:[{type:b,tag:f,props:{href:"#coverage",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:dh}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, let's see the code coverage.\nFirst, for coverage you'll need a package to see the coverage, and the service\nto publish the coverage."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Use "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FJuliaCI\u002FCoverage.jl",rel:[l,m,n],target:o},children:[{type:a,value:"Coverage.jl"}]},{type:a,value:" to see your coverage\n(including locally).\nInstall with"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"julia\u003E Pkg.add(\"Coverage\")\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Then run"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ julia --code-coverage=user --inline=no test\u002Ftest1.jl\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This will generate a file "},{type:b,tag:e,props:{},children:[{type:a,value:"src\u002Fsolve_linear.jl.xxx.cov"}]},{type:a,value:" with the information.\nThe option "},{type:b,tag:e,props:{},children:[{type:a,value:"--inline=no"}]},{type:a,value:" gives more accurate results, but slow down the code.\nYou can see which function are not being run by reading it, but it's better to\nsee it online."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To see a summary, use"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"julia\u003E using Coverage\njulia\u003E cov = process_folder()\njulia\u003E c, t = get_summary(cov)\njulia\u003E println(\"$(100c\u002Ft)% of lines covered\")\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"But we want to see it online. So go to Coveralls.io and create an account.\nClick on "},{type:b,tag:e,props:{},children:[{type:a,value:"Add repos"}]},{type:a,value:" and find you repository.\nEnable it, and change the "},{type:b,tag:e,props:{},children:[{type:a,value:aw}]},{type:a,value:" file to"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# file .travis.yml\n{% include_relative {{ page.name }}\u002Ftravis2.yml %}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"After a success, we install Coverage and run the relevant code.\nCheck your repository on Coveralls to see the results.\nNotice how the "},{type:b,tag:e,props:{},children:[{type:a,value:"error"}]},{type:a,value:" line on our code never gets called."}]},{type:a,value:c},{type:b,tag:J,props:{id:di},children:[{type:b,tag:f,props:{href:"#improving-to-a-module",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:dj}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you want people to use your code, you should use a module in Julia.\nThis allows easy installation of your code, and not much more work.\nChanging to a module is very simple, so I'll run through it.\nThe folders "},{type:b,tag:e,props:{},children:[{type:a,value:cP}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:ak}]},{type:a,value:" are required. But we also need"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"A file in src with the same name as the repository;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"The keyword "},{type:b,tag:e,props:{},children:[{type:a,value:"module"}]},{type:a,value:" on that file;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"export"}]},{type:a,value:" the relevant functions;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"A file "},{type:b,tag:e,props:{},children:[{type:a,value:bu}]},{type:a,value:" that run the tests;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:dk},{type:b,tag:e,props:{},children:[{type:a,value:aJ}]},{type:a,value:" for people to know about your thing;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:dk},{type:b,tag:e,props:{},children:[{type:a,value:aK}]},{type:a,value:" for people to know what they can do with your file;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Different "},{type:b,tag:e,props:{},children:[{type:a,value:aw}]},{type:a,value:w}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I'm using the name "},{type:b,tag:e,props:{},children:[{type:a,value:"BlogAutomatedTesting.jl"}]},{type:a,value:", so a create the file"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# file src\u002FBlogAutomatedTesting.jl\n{% include_relative {{ page.name }}\u002Fmain.jl %}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I edit the file"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# file src\u002Fsolve_linear.jl\n{% include_relative {{ page.name }}\u002Fsolve_linear2.jl %}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Then file"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# file test\u002Fruntests.jl\ninclude(\"test1.jl\")\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"and"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# file test\u002Ftest1.jl\n{% include_relative {{ page.name }}\u002Ftest12.jl %}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"And create a "},{type:b,tag:e,props:{},children:[{type:a,value:aJ}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# BlogAutomatedTesting.jl\n\nThis package was created from the tutorial on\n[Abel Siqueira's blog]({{ site.url }}\u002F{{local_prefix}}{{ post.url }})\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The "},{type:b,tag:e,props:{},children:[{type:a,value:aK}]},{type:a,value:" file is up which license you'll choose.\nSee "},{type:b,tag:f,props:{href:"choosealicense.com"},children:[{type:a,value:"this site"}]},{type:a,value:" for options.\nCopy the contents to the file."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now change "},{type:b,tag:e,props:{},children:[{type:a,value:aw}]},{type:a,value:" to treat your code like a package."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# file .travis.yml\n{% include_relative {{ page.name }}\u002Ftravis3.yml %}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Commit and verify your update on Travis and Coveralls"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ git add .\n$ git commit -m 'Change to module'\n$ git push\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I hope this was helpful enough."}]}]},dir:C,path:"\u002Fblog\u002F2016-02-21-automated-testing",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Automated testing\n\nWe're gonna learn how to make a test for your Julia code that runs whenever you\npublish it online. We're gonna use\n\n- [GitHub](http:\u002F\u002Fgithub.com) to store the code;\n- [Travis CI](http:\u002F\u002Ftravis-ci.com) to run your tests;\n- [Coveralls.io](http:\u002F\u002Fcoveralls.io) to verify which lines of code your test are missing.\n\nAlternatively, for a open source alternative, see [GitLab](http:\u002F\u002Fgitlab.com),\nwhich I don't know enough yet.\n\n---\n\nLet's make a litte code to solve a linear system, paying attention to the\nproblems it may arise, like incorrect dimensions, underdetermined and\noverdetermined systems, singular matrices, etc.\nAnd we'll be using the factorizations, but not `\\`.\n\n## The math\n\nA simple (not cheap) way to do it is using Singular Value Decomposition (SVD).\nWe have\n\n$$\n  A = U\\Sigma V^T = \\sum_{i=1}^r \\sigma_i u_i v_i^T.\n$$\n\nwhere $r$ is the rank of $A$.\nSince the columns of $V$ form a basis for $\\mathbb{R}^n$ (where $x$ resides),\nthen\n\n$$\n  x = \\sum_{j=1}^n \\alpha_j v_j.\n$$\n\nNow, we have\n\n$$\n  Ax = \\sum_{i=1}^r \\sum_{j=1}^n \\sigma_i \\alpha_j u_i v_i^Tv_j\n     = \\sum_{i=1}^r \\sigma_i \\alpha_i u_i\n$$\n\nIf the system has a solution, that is $Ax = b$, then we multiply by $u_j^T$,\nobtaining\n\n$$\n  u_j^TAx = \\sum_{i=1}^r \\sigma_i \\alpha_i u_j^Tu_i\n          = \\sigma_j\\alpha_j = u_j^Tb\n$$\n\nThus, $ \\alpha_j = \\dfrac{u_j^Tb}{\\sigma_j} $.\nIf the system doesn't have a solution, this still holds. I'll leave the steps to\nyou.\n\nIf $r \u003C n$, then $\\alpha$ has undetermined values. However, when that's the\ncase, the solution we'll use is the one with the smallest norm, that is, the one\nthat minimizes $\\Vert x\\Vert$.\nSince $v_i$ are orthonormal, then\n$$ \\Vert x\\Vert^2 = \\sum\\_{i=1}^n \\alpha_i^2.$$\nSo, in order to minimize the norm of x, we use $\\alpha_i = 0$ for $i \u003E r$.\n\n## The code\n\nWe'll store the code on\n[this](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FBlogAutomatedTesting.jl) GitHub\nrepository.\nNote, however, that it will point to the completed version.\n\nA possible implementation of our code is as follows:\n\n```\n# File src\u002Fsolve_linear.jl\n{% include_relative {{ page.name }}\u002Fsolve_linear1.jl %}\n```\n\nTo test it, open julia on the root folder and do\n\n```\njulia\u003E A = rand(5,5); b = rand(5)\njulia\u003E include(\"src\u002Fsolve_linear.jl\")\njulia\u003E norm(linear_system(A,b) - A\\b)\n```\n\nIf the result is around $10^{-16}$, then everything went well.\nVery rarely, the generated matrix could be ill-conditioned.\nRun again, to verify if that's the case.\n\nIf everything went well, we'll write a test now.\n\nFor now, let's write a simple test running a lot of square linear systems.\nFor each system, to avoid using `A\\b`, we'll create a vector `b` from a known\nsolution. Then we'll **assure** that $\\Vert Ax-b\\Vert \u003C \\epsilon$\nand $\\Vert x-e\\Vert \u003C \\epsilon$.\nTo do that, we'll use `Base.Test`.\nNote however, that the condition of the matrix influences the error, and there\nare numerical errors involved. So we'll use the condition\n$$\\Vert x-e\\Vert \u003C 10^{-12} \\text{cond}(A).$$\nThe code is\n\n```\n# file test\u002Ftest1.jl\n{% include_relative {{ page.name }}\u002Ftest1.jl %}\n```\n\nRun with\n\n```\n$ julia test\u002Ftest1.jl\n```\n\nNothing should appear.\n\nThe first line is a kludge to read the correct file from wherever the run the\ncode. If you're not building a module, this is ok. But normally you'll want to\nbuild a module. Ignore that for now.\nThe first for varies the dimension, and the second for runs the code a specific\nnumber of times.\nThis totals a hundred square linear systems being run.\nThe `@test` macro verifies that the given expression is true.\nIf any solution is wrong, the code will be wrong. Also, if you use a smaller\ntolerance, the numerical rounding may give a error here.\n\nOk, first thing you wanna do now is commit this code.\n\n```\n$ git init\n$ git add src test\n$ git commit -m 'First commit'\n```\n\nThen, go to GitHub, create an account, then a repository for this code (e.g.\nlinear_system.jl), then push the code.\n**Use the name with .jl in the end for the repository.**\n\n```\n$ git add origin http:\u002F\u002Flink\u002Fto\u002Fyour\u002Fgithub\u002Frepository\u002F\n$ git push -u origin master\n```\n\nEnter your password and verify the code is online.\n\n## Online testing\n\nNow go to Travis and create an account. Go to your profile and\nclick on the `Sync account` button if necessary.\nFind your repository and set the button to on.\nNow, with the next commit, a test will start. Let's make it happen.\n\nCreate a file `.travis.yml` (yes, with a leading dot) with information for the\nbuild. Here's a simple file:\n\n```\n# file .travis.yml\n{% include_relative {{ page.name }}\u002Ftravis1.yml %}\n```\n\nInclude the file and push\n\n```\n$ git add .travis.yml\n$ git commit -m 'Add .travis.yml'\n$ git push\n```\n\nNow, go to your travis page, and after a while you'll see your repository with a\ntest running (or already finished, because it is short).\nYou should have a passing test. If not, verify your files again, then the error\non travis.\nNotice that you can see the complete log of what is run.\n\nUsing an online automated testing is useful for many reasons:\n\n- Everyone can see if the code is working;\n- Pull requests generate a travis build, so you can see if it's working;\n- You don't forget to test;\n- You test on a clean environment;\n- You can test with multiple versions of Julia (or other linguage).\n\n## Coverage\n\nNow, let's see the code coverage.\nFirst, for coverage you'll need a package to see the coverage, and the service\nto publish the coverage.\n\nUse [Coverage.jl](https:\u002F\u002Fgithub.com\u002FJuliaCI\u002FCoverage.jl) to see your coverage\n(including locally).\nInstall with\n\n```\njulia\u003E Pkg.add(\"Coverage\")\n```\n\nThen run\n\n```\n$ julia --code-coverage=user --inline=no test\u002Ftest1.jl\n```\n\nThis will generate a file `src\u002Fsolve_linear.jl.xxx.cov` with the information.\nThe option `--inline=no` gives more accurate results, but slow down the code.\nYou can see which function are not being run by reading it, but it's better to\nsee it online.\n\nTo see a summary, use\n\n```\njulia\u003E using Coverage\njulia\u003E cov = process_folder()\njulia\u003E c, t = get_summary(cov)\njulia\u003E println(\"$(100c\u002Ft)% of lines covered\")\n```\n\nBut we want to see it online. So go to Coveralls.io and create an account.\nClick on `Add repos` and find you repository.\nEnable it, and change the `.travis.yml` file to\n\n```\n# file .travis.yml\n{% include_relative {{ page.name }}\u002Ftravis2.yml %}\n```\n\nAfter a success, we install Coverage and run the relevant code.\nCheck your repository on Coveralls to see the results.\nNotice how the `error` line on our code never gets called.\n\n## Improving to a module\n\nIf you want people to use your code, you should use a module in Julia.\nThis allows easy installation of your code, and not much more work.\nChanging to a module is very simple, so I'll run through it.\nThe folders `src` and `test` are required. But we also need\n\n- A file in src with the same name as the repository;\n- The keyword `module` on that file;\n- `export` the relevant functions;\n- A file `test\u002Fruntests.jl` that run the tests;\n- A `README.md` for people to know about your thing;\n- A `LICENSE.md` for people to know what they can do with your file;\n- Different `.travis.yml`.\n\nI'm using the name `BlogAutomatedTesting.jl`, so a create the file\n\n```\n# file src\u002FBlogAutomatedTesting.jl\n{% include_relative {{ page.name }}\u002Fmain.jl %}\n```\n\nI edit the file\n\n```\n# file src\u002Fsolve_linear.jl\n{% include_relative {{ page.name }}\u002Fsolve_linear2.jl %}\n```\n\nThen file\n\n```\n# file test\u002Fruntests.jl\ninclude(\"test1.jl\")\n```\n\nand\n\n```\n# file test\u002Ftest1.jl\n{% include_relative {{ page.name }}\u002Ftest12.jl %}\n```\n\nAnd create a `README.md`\n\n```\n# BlogAutomatedTesting.jl\n\nThis package was created from the tutorial on\n[Abel Siqueira's blog]({{ site.url }}\u002F{{local_prefix}}{{ post.url }})\n```\n\nThe `LICENSE.md` file is up which license you'll choose.\nSee [this site](choosealicense.com) for options.\nCopy the contents to the file.\n\nNow change `.travis.yml` to treat your code like a package.\n\n```\n# file .travis.yml\n{% include_relative {{ page.name }}\u002Ftravis3.yml %}\n```\n\nCommit and verify your update on Travis and Coveralls\n\n```\n$ git add .\n$ git commit -m 'Change to module'\n$ git push\n```\n\nI hope this was helpful enough.\n"},{slug:"2016-02-14-viii-simposio-de-analise-numerica",title:dl,date:"2016-02-14",tags:[au,H,K,as],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"viii-simpósio-de-análise-numérica-e-otimização---minicurso-de-julia"},children:[{type:b,tag:f,props:{href:"#viii-simp%C3%B3sio-de-an%C3%A1lise-num%C3%A9rica-e-otimiza%C3%A7%C3%A3o---minicurso-de-julia",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:dl}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Nos dias 22 a 24 de Fevereiro de 2016 acontecerá o "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.mat.ufpr.br\u002Fverao\u002F2016\u002Fm4_otimiza.html",rel:[l,m,n],target:o},children:[{type:a,value:"VIII Simpósio de Análise\nNumérica e Otimização"}]},{type:a,value:".\nÉ uma ótima oportunidade para interagir com colegas e conhecer alguns assuntos\nnovos de pesquisa."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Em particular, nesse simpósio apresentarei um minicurso sobre Julia com foco em\nOtimização. O minicurso é voltado para pessoas que conhecem um pouco de MatLab\nou alguma outra linguagem. Serão três dias, com uma introdução à linguagem,\nalguns exemplos, o "},{type:b,tag:f,props:{href:"http:\u002F\u002Fgithub.com\u002FJuliaOptimizers\u002FCUTEst.jl",rel:[l,m,n],target:o},children:[{type:a,value:ac}]},{type:a,value:",\ne um workflow para criar um pacote de otimização com transição para C e Fortran."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O material para o minicurso está disponível\n"},{type:b,tag:f,props:{href:cU,rel:[l,m,n],target:o},children:[{type:a,value:S}]},{type:a,value:"\n(neste momento ainda incompleto)."}]}]},dir:C,path:"\u002Fblog\u002F2016-02-14-viii-simposio-de-analise-numerica",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# VIII Simpósio de Análise Numérica e Otimização - Minicurso de Julia\n\nNos dias 22 a 24 de Fevereiro de 2016 acontecerá o [VIII Simpósio de Análise\nNumérica e Otimização](http:\u002F\u002Fwww.mat.ufpr.br\u002Fverao\u002F2016\u002Fm4_otimiza.html).\nÉ uma ótima oportunidade para interagir com colegas e conhecer alguns assuntos\nnovos de pesquisa.\n\nEm particular, nesse simpósio apresentarei um minicurso sobre Julia com foco em\nOtimização. O minicurso é voltado para pessoas que conhecem um pouco de MatLab\nou alguma outra linguagem. Serão três dias, com uma introdução à linguagem,\nalguns exemplos, o [CUTEst.jl](http:\u002F\u002Fgithub.com\u002FJuliaOptimizers\u002FCUTEst.jl),\ne um workflow para criar um pacote de otimização com transição para C e Fortran.\n\nO material para o minicurso está disponível\n[aqui](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fjulia-workshop)\n(neste momento ainda incompleto).\n"},{slug:"2016-02-13-professional-site-and-blog-for-researchers-professores-and-students",title:dm,date:"2016-02-13",tags:["jekyll",ba,ai],toc:[{id:dn,depth:I,text:do0},{id:dp,depth:V,text:aN},{id:dq,depth:V,text:aO},{id:dr,depth:V,text:aP}],body:{type:A,children:[{type:b,tag:x,props:{id:"professional-site-and-blog-for-researchers-professors-and-students"},children:[{type:b,tag:f,props:{href:"#professional-site-and-blog-for-researchers-professors-and-students",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:dm}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"TL; DR: Make a professional web page, like "},{type:b,tag:f,props:{href:"%7B%7Blocal_prefix%7D%7D\u002F..\u002F"},children:[{type:a,value:ds}]},{type:a,value:",\nand\u002For a blog, like "},{type:b,tag:f,props:{href:"%7B%7Blocal_prefix%7D%7D"},children:[{type:a,value:ds}]},{type:a,value:". Use\n"},{type:b,tag:f,props:{href:dt,rel:[l,m,n],target:o},children:[{type:a,value:du}]},{type:a,value:" and my links:\n"},{type:b,tag:f,props:{href:dv,rel:[l,m,n],target:o},children:[{type:a,value:"work page"}]},{type:a,value:dw},{type:b,tag:f,props:{href:aQ,rel:[l,m,n],target:o},children:[{type:a,value:"blog page"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:aq,props:{},children:[]},{type:a,value:c},{type:b,tag:J,props:{id:dn},children:[{type:b,tag:f,props:{href:"#summary",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:do0}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:dx},children:[{type:a,value:aN}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:dy},children:[{type:a,value:aO}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:dz},children:[{type:a,value:aP}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:dA},children:[{type:a,value:dB}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:dC},children:[{type:a,value:dD}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:dE},children:[{type:a,value:dF}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:dG},children:[{type:a,value:dH}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:dI},children:[{type:a,value:dJ}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:aq,props:{},children:[]},{type:a,value:c},{type:b,tag:W,props:{id:dp},children:[{type:b,tag:f,props:{href:dx,ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:aN}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We live in the age of information.\nIt is easier than ever to find someone from another site of the planet, and\ncontact them.\nThat said, that is only possible if you are online."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Most of us are online, some way or another. If you google your full name,\nchances are you're gonna find some information about you. Possibly a Facebook or\nother social media page.\nMaybe an old blog, that you forgot to delete.\nPossibly things you didn't even know were online, like public documents with\nyour name, or aggregator sites with your information.\nMost of all, you'll probably find things that aren't you."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Suppose someone is trying to find you, but they know only your name, and\npossibly occupation. Could they?\nFurthermore, could they contact you?\nDo you have enough information for they to discern if it is really you?\nDo they have to contact you to see your area of expertise? Your projects?\nFor that end, it is usually a good idea to store some information about youself\nin a webpage mantained by yourself."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I'll will show an example of web page management that takes little effort, and\nyou can use for a personal page and\u002For a blog."}]},{type:a,value:c},{type:b,tag:W,props:{id:dq},children:[{type:b,tag:f,props:{href:dy,ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:aO}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The name of the game is\n"},{type:b,tag:f,props:{href:dt,rel:[l,m,n],target:o},children:[{type:a,value:du}]},{type:a,value:". This software mantains web pages using\ntemplates, page snippets, and a little programming to make your job easier.\nIf you enter "},{type:b,tag:f,props:{href:aQ,rel:[l,m,n],target:o},children:[{type:a,value:"this blog"}]},{type:a,value:", you'll see what\nit looks like."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The most important folder is "},{type:b,tag:e,props:{},children:[{type:a,value:dK}]},{type:a,value:". This is where you write your posts. The\nnaming follows the format "},{type:b,tag:e,props:{},children:[{type:a,value:"YYYY-MM-DD-name-of-the-post.ext"}]},{type:a,value:", and you begin the\nfile with a little header like"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"---\nlayout: post\ntitle:  Professional site and blog for researchers, professors and students\ndate:   2016-02-13\nname:   2016-02-13-professional-site-and-blog-for-researchers-professores-and-students\n---\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"and then you can write the content.\nOn a clean project, just creating a new file like this is enough for you to have\na new blog post, but now you want to make it look good.\nTo create a page that is not a post, like my "},{type:b,tag:e,props:{},children:[{type:a,value:"about"}]},{type:a,value:" page, you can simply create\na file inside the folder, create a similar header, and write the page. See my\nown\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fraw.githubusercontent.com\u002Fabelsiqueira%7B%7Blocal_prefix%7D%7Dgh-pages\u002Fabout.md",rel:[l,m,n],target:o},children:[{type:a,value:dL}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The first thing you'll notice is the "},{type:b,tag:e,props:{},children:[{type:a,value:"layout"}]},{type:a,value:" part. In the folder "},{type:b,tag:e,props:{},children:[{type:a,value:"_layouts"}]},{type:a,value:"\nthere are some templates for a site. For instance, the \"default\" layout is an\nhtml documeent that includes a head.html, then a header.html, then the content,\nthen a footer.html. These included files reside in the folder "},{type:b,tag:e,props:{},children:[{type:a,value:"_includes"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Notice that the content is written between\n"},{type:b,tag:e,props:{},children:[{type:a,value:dM}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:dN}]},{type:a,value:". This is the language\nthat Jekyll interprets to generate the site. This between\n"},{type:b,tag:e,props:{},children:[{type:a,value:"{% raw %}{%{% endraw %}"}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:"{% raw %}%}{% endraw %}"}]},{type:a,value:" are for\ncommands, and between\n"},{type:b,tag:e,props:{},children:[{type:a,value:dM}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:dN}]},{type:a,value:" are for variable input.\nFor instance, to print the current page's title somewhere in your text, you may\nuse "},{type:b,tag:e,props:{},children:[{type:a,value:"{% raw %}{{ page.title }}{% endraw %}"}]},{type:a,value:". Not very useful so far, but if want\nto put a list of posts in a page you may use"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"{% raw %}{% for pt in site.posts %}\n  - {{ pt.date }}: {{ pt.title }}\n{% endfor %}{% endraw %}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is only a simple example, and you'll probably want to improve your list to\nyour liking.\nIn addition, you can play around with conditionals and filters. For instance,\nthe navigation bar on my work site is a list of all pages with a title, of the\nsame language of the one you're in, ordered by an internal value."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To create a clean site and test these fun things, first install Jekyll (follow\nthe instructions on the site for your system), and then issue the commands in\nthe terminal"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"jekyll new mysite\ncd mysite\njekyll serve -w\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Your site will be built and available at\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Flocalhost:4000",rel:[l,m,n],target:o},children:[{type:a,value:"localhost:4000"}]},{type:a,value:".\nTo get the site to look good, however, you'll need to edit a few things, like\nthe layouts for your liking, the css, and so on.\nTo avoid doing that, you can use my own site as a starting point. I show you how\nin the next section."}]},{type:a,value:c},{type:b,tag:W,props:{id:dr},children:[{type:b,tag:f,props:{href:dz,ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:aP}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"First, let's create a work page. If you don't want one, then jump to the blog\npart.\nAlso, if you know git, and are familiar with GitHub, you can jump a few steps."}]},{type:a,value:c},{type:b,tag:ad,props:{id:"work-page---easy-way"},children:[{type:b,tag:f,props:{href:dA,ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:dB}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:dO},{type:b,tag:f,props:{href:aM,rel:[l,m,n],target:o},children:[{type:a,value:U}]},{type:a,value:dP}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:dQ},{type:b,tag:f,props:{href:dv,rel:[l,m,n],target:o},children:[{type:a,value:"my github page"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:dR}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"In your page, with name "},{type:b,tag:f,props:{href:dS,rel:[l,m,n],target:o},children:[{type:a,value:dS}]},{type:a,value:", go to"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"settings, and rename the repository to `youruser.github.io`.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:dT},{type:b,tag:e,props:{},children:[{type:a,value:dU}]},{type:a,value:dV},{type:b,tag:v,props:{},children:[{type:a,value:dW}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This is sufficient for a site to appear on "},{type:b,tag:e,props:{},children:[{type:a,value:dX}]},{type:a,value:" in at\nmost a few minutes. Now you only need to edit to your liking.\nFor a multilingual support (default), I suggest you create files with the format\n"},{type:b,tag:e,props:{},children:[{type:a,value:"name.lg.md"}]},{type:a,value:" where "},{type:b,tag:e,props:{},children:[{type:a,value:bn}]},{type:a,value:" is whatever name you want to give, like "},{type:b,tag:e,props:{},children:[{type:a,value:"research"}]},{type:a,value:dY},{type:b,tag:e,props:{},children:[{type:a,value:"lg"}]},{type:a,value:" is a language prefix. There is no real need to follow this, but it's\ncleaner.\nThen inside this file, you need to fill"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"---\nlayout: page\ntitle:  Page Title\nkey:    name\nlang:   lg\norder:  Where you want the page in the navigation bar. Lower if leftmost.\npermalink: \u002Flg\u002Fname\u002F\n---\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"See the files "},{type:b,tag:e,props:{},children:[{type:a,value:"research.br.md"}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:"research.en.md"}]},{type:a,value:" for the differences."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"It's very important that pages that are translations for each other to have the\nsame key. Also, for the flag image to appear, you need a file "},{type:b,tag:e,props:{},children:[{type:a,value:"lg.png"}]},{type:a,value:" in the\nfolder "},{type:b,tag:e,props:{},children:[{type:a,value:"assets"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I keep a folder "},{type:b,tag:e,props:{},children:[{type:a,value:"disciplinas"}]},{type:a,value:" for my teaching files. You may erase it."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you don't want a blog, you probably want to delete the navigation bar's\n"},{type:b,tag:e,props:{},children:[{type:a,value:ai}]},{type:a,value:", which is hardcoded. Go to file "},{type:b,tag:e,props:{},children:[{type:a,value:dZ}]},{type:a,value:" and find the\nlines with "},{type:b,tag:e,props:{},children:[{type:a,value:"\u003Ca class=...Blog\u003C\u002Fa\u003E"}]},{type:a,value:" and delete it."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Change the picture."}]},{type:a,value:c},{type:b,tag:ad,props:{id:"work-page---hard-way"},children:[{type:b,tag:f,props:{href:dC,ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:dD}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Read the easy way first, but don't do anything yet.\nDownload my page's source code, either using git or zip.\nModify as you see fit, following the guidelines above.\nTest the page with "},{type:b,tag:e,props:{},children:[{type:a,value:"jekyll serve -w"}]},{type:a,value:" as I said before, and build it for\npublishing with "},{type:b,tag:e,props:{},children:[{type:a,value:"jekyll build"}]},{type:a,value:".\nYour page's files will be inside the folder "},{type:b,tag:e,props:{},children:[{type:a,value:"_site"}]},{type:a,value:".\nYou can publish them however you want. If you have a site at your university,\nyou can send these files there (probably). For that, you'll have to check with\nyour IT department."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The advantage of this is that you don't have to use GitHub (or even git) for\nanything. The disavantage is that you need to install Jekyll, and you won't have\na default site location."}]},{type:a,value:c},{type:b,tag:ad,props:{id:"blog-page---easy-way"},children:[{type:b,tag:f,props:{href:dE,ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:dF}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:dO},{type:b,tag:f,props:{href:aM,rel:[l,m,n],target:o},children:[{type:a,value:U}]},{type:a,value:dP}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:dQ},{type:b,tag:f,props:{href:aQ,rel:[l,m,n],target:o},children:[{type:a,value:"my github blog page"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:dR}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:dT},{type:b,tag:e,props:{},children:[{type:a,value:dU}]},{type:a,value:dV},{type:b,tag:v,props:{},children:[{type:a,value:dW}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Edit the "},{type:b,tag:e,props:{},children:[{type:a,value:dL}]},{type:a,value:" file to be about you."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Delete all posts in "},{type:b,tag:e,props:{},children:[{type:a,value:dK}]},{type:a,value:", except maybe one to use as a beginning point."}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Write your post."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you access "},{type:b,tag:e,props:{},children:[{type:a,value:"http:\u002F\u002Fyouruser.github.io{{local_prefix}}"}]},{type:a,value:", you'll see your blog. Notice\nthat, if you haven't created the work page, "},{type:b,tag:e,props:{},children:[{type:a,value:dX}]},{type:a,value:" won't\nexist, although your blog will.\nAlso, you won't want the "},{type:b,tag:e,props:{},children:[{type:a,value:"Work"}]},{type:a,value:" entry on the navigation bar.\nGo to the file "},{type:b,tag:e,props:{},children:[{type:a,value:dZ}]},{type:a,value:" and modify the line\n"},{type:b,tag:e,props:{},children:[{type:a,value:"\u003Ca class=\"page-link\" href=\"\u002F\"\u003EWork\u003C\u002Fa\u003E"}]},{type:a,value:".\nIf you don't have a work page, then delete it.\nIf you do, you can change the \"\u002F\" to your work page url."}]},{type:a,value:c},{type:b,tag:ad,props:{id:"blog-page---hard-way"},children:[{type:b,tag:f,props:{href:dG,ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:dH}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Read everything. Do as in the hard part of the work page."}]},{type:a,value:c},{type:b,tag:ad,props:{id:"both---hard-way"},children:[{type:b,tag:f,props:{href:dI,ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:dJ}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you want both, when publishing the content of the blog, remember to publish\nthe blog pages to a folder "},{type:b,tag:e,props:{},children:[{type:a,value:ai}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2016-02-13-professional-site-and-blog-for-researchers-professores-and-students",extension:D,createdAt:y,updatedAt:y,bodyPlainText:"\n# Professional site and blog for researchers, professors and students\n\nTL; DR: Make a professional web page, like [mine]({{local_prefix}}\u002F..\u002F),\nand\u002For a blog, like [mine]({{local_prefix}}). Use\n[Jekyll](https:\u002F\u002Fjekyllrb.com\u002F) and my links:\n[work page](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fabelsiqueira.github.io),\n[blog page](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fblog).\n\n---\n\n## Summary:\n\n- [Introduction](#introduction)\n- [General Information](#general-information)\n- [Using my site as a starting point](#using-my-site-as-a-starting-point)\n- [Work page - Easy way](#work-page---easy-way)\n- [Work page - Hard way](#work-page---hard-way)\n- [Blog page - Easy way](#blog-page---easy-way)\n- [Blog page - Hard way](#blog-page---hard-way)\n- [Both - Hard way](#both---hard-way)\n\n---\n\n### Introduction\n\nWe live in the age of information.\nIt is easier than ever to find someone from another site of the planet, and\ncontact them.\nThat said, that is only possible if you are online.\n\nMost of us are online, some way or another. If you google your full name,\nchances are you're gonna find some information about you. Possibly a Facebook or\nother social media page.\nMaybe an old blog, that you forgot to delete.\nPossibly things you didn't even know were online, like public documents with\nyour name, or aggregator sites with your information.\nMost of all, you'll probably find things that aren't you.\n\nSuppose someone is trying to find you, but they know only your name, and\npossibly occupation. Could they?\nFurthermore, could they contact you?\nDo you have enough information for they to discern if it is really you?\nDo they have to contact you to see your area of expertise? Your projects?\nFor that end, it is usually a good idea to store some information about youself\nin a webpage mantained by yourself.\n\nI'll will show an example of web page management that takes little effort, and\nyou can use for a personal page and\u002For a blog.\n\n### General Information\n\nThe name of the game is\n[Jekyll](https:\u002F\u002Fjekyllrb.com\u002F). This software mantains web pages using\ntemplates, page snippets, and a little programming to make your job easier.\nIf you enter [this blog](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fblog), you'll see what\nit looks like.\n\nThe most important folder is `_posts`. This is where you write your posts. The\nnaming follows the format `YYYY-MM-DD-name-of-the-post.ext`, and you begin the\nfile with a little header like\n\n```\n---\nlayout: post\ntitle:  Professional site and blog for researchers, professors and students\ndate:   2016-02-13\nname:   2016-02-13-professional-site-and-blog-for-researchers-professores-and-students\n---\n```\n\nand then you can write the content.\nOn a clean project, just creating a new file like this is enough for you to have\na new blog post, but now you want to make it look good.\nTo create a page that is not a post, like my `about` page, you can simply create\na file inside the folder, create a similar header, and write the page. See my\nown\n[about.md](https:\u002F\u002Fraw.githubusercontent.com\u002Fabelsiqueira{{local_prefix}}gh-pages\u002Fabout.md).\n\nThe first thing you'll notice is the `layout` part. In the folder `_layouts`\nthere are some templates for a site. For instance, the \"default\" layout is an\nhtml documeent that includes a head.html, then a header.html, then the content,\nthen a footer.html. These included files reside in the folder `_includes`.\n\nNotice that the content is written between\n`{% raw %}{{{% endraw %}` and `{% raw %}}}{% endraw %}`. This is the language\nthat Jekyll interprets to generate the site. This between\n`{% raw %}{%{% endraw %}` and `{% raw %}%}{% endraw %}` are for\ncommands, and between\n`{% raw %}{{{% endraw %}` and `{% raw %}}}{% endraw %}` are for variable input.\nFor instance, to print the current page's title somewhere in your text, you may\nuse `{% raw %}{{ page.title }}{% endraw %}`. Not very useful so far, but if want\nto put a list of posts in a page you may use\n\n```\n{% raw %}{% for pt in site.posts %}\n  - {{ pt.date }}: {{ pt.title }}\n{% endfor %}{% endraw %}\n```\n\nThis is only a simple example, and you'll probably want to improve your list to\nyour liking.\nIn addition, you can play around with conditionals and filters. For instance,\nthe navigation bar on my work site is a list of all pages with a title, of the\nsame language of the one you're in, ordered by an internal value.\n\nTo create a clean site and test these fun things, first install Jekyll (follow\nthe instructions on the site for your system), and then issue the commands in\nthe terminal\n\n```\njekyll new mysite\ncd mysite\njekyll serve -w\n```\n\nYour site will be built and available at\n[localhost:4000](http:\u002F\u002Flocalhost:4000).\nTo get the site to look good, however, you'll need to edit a few things, like\nthe layouts for your liking, the css, and so on.\nTo avoid doing that, you can use my own site as a starting point. I show you how\nin the next section.\n\n### Using my site as a starting point\n\nFirst, let's create a work page. If you don't want one, then jump to the blog\npart.\nAlso, if you know git, and are familiar with GitHub, you can jump a few steps.\n\n#### Work page - Easy way\n\n- Create a [GitHub](http:\u002F\u002Fgithub.com) account.\n- Go to [my github page](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fabelsiqueira.github.io).\n- Fork the page, finding the button that says fork and clicking on it.\n- In your page, with name http:\u002F\u002Fgithub.com\u002Fyouruser\u002Fabelsiqueira.github.io, go to\n\n```\nsettings, and rename the repository to `youruser.github.io`.\n```\n\n- Edit the file `_config.yml` and change all pertinent information. Don't leave\n  anything with my user.\n  **You can edit and create files directly on GitHub, but you can't preview\n  your site before publishing. To edit, click on edit, make your modifications\n  and then on the bottom of the page click on commit. To create, click on the +\n  button, and do similar steps.**\n\nThis is sufficient for a site to appear on `http:\u002F\u002Fyouruser.github.io` in at\nmost a few minutes. Now you only need to edit to your liking.\nFor a multilingual support (default), I suggest you create files with the format\n`name.lg.md` where `name` is whatever name you want to give, like `research` and\n`lg` is a language prefix. There is no real need to follow this, but it's\ncleaner.\nThen inside this file, you need to fill\n\n```\n---\nlayout: page\ntitle:  Page Title\nkey:    name\nlang:   lg\norder:  Where you want the page in the navigation bar. Lower if leftmost.\npermalink: \u002Flg\u002Fname\u002F\n---\n```\n\nSee the files `research.br.md` and `research.en.md` for the differences.\n\nIt's very important that pages that are translations for each other to have the\nsame key. Also, for the flag image to appear, you need a file `lg.png` in the\nfolder `assets`.\n\nI keep a folder `disciplinas` for my teaching files. You may erase it.\n\nIf you don't want a blog, you probably want to delete the navigation bar's\n`blog`, which is hardcoded. Go to file `_includes\u002Fheader.html` and find the\nlines with `\u003Ca class=...Blog\u003C\u002Fa\u003E` and delete it.\n\nChange the picture.\n\n#### Work page - Hard way\n\nRead the easy way first, but don't do anything yet.\nDownload my page's source code, either using git or zip.\nModify as you see fit, following the guidelines above.\nTest the page with `jekyll serve -w` as I said before, and build it for\npublishing with `jekyll build`.\nYour page's files will be inside the folder `_site`.\nYou can publish them however you want. If you have a site at your university,\nyou can send these files there (probably). For that, you'll have to check with\nyour IT department.\n\nThe advantage of this is that you don't have to use GitHub (or even git) for\nanything. The disavantage is that you need to install Jekyll, and you won't have\na default site location.\n\n#### Blog page - Easy way\n\n- Create a [GitHub](http:\u002F\u002Fgithub.com) account.\n- Go to [my github blog page](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fblog).\n- Fork the page, finding the button that says fork and clicking on it.\n- Edit the file `_config.yml` and change all pertinent information. Don't leave\n  anything with my user.\n  **You can edit and create files directly on GitHub, but you can't preview\n  your site before publishing. To edit, click on edit, make your modifications\n  and then on the bottom of the page click on commit. To create, click on the +\n  button, and do similar steps.**\n- Edit the `about.md` file to be about you.\n- Delete all posts in `_posts`, except maybe one to use as a beginning point.\n- Write your post.\n\nIf you access `http:\u002F\u002Fyouruser.github.io{{local_prefix}}`, you'll see your blog. Notice\nthat, if you haven't created the work page, `http:\u002F\u002Fyouruser.github.io` won't\nexist, although your blog will.\nAlso, you won't want the `Work` entry on the navigation bar.\nGo to the file `_includes\u002Fheader.html` and modify the line\n`\u003Ca class=\"page-link\" href=\"\u002F\"\u003EWork\u003C\u002Fa\u003E`.\nIf you don't have a work page, then delete it.\nIf you do, you can change the \"\u002F\" to your work page url.\n\n#### Blog page - Hard way\n\nRead everything. Do as in the hard part of the work page.\n\n#### Both - Hard way\n\nIf you want both, when publishing the content of the blog, remember to publish\nthe blog pages to a folder `blog`.\n"},{slug:"2015-11-20-apresentacao-no-poincare---2015",title:d_,date:"2015-11-20",tags:[as,K],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"apresentação-no-poincaré---2015"},children:[{type:b,tag:f,props:{href:"#apresenta%C3%A7%C3%A3o-no-poincar%C3%A9---2015",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:d_}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Fui convidado a fazer alguma apresentação para os seminários Poincaré do PET\nMatemática da UFPR.\nIrei falar sobre o Método de Newton para zeros de funções, sistemas não\nlineares, e para otimização."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A apresentação será hoje, dia 20 de Novembro, às 17h40. Os slides você pode\npegar "},{type:b,tag:P,props:{to:"\u002Fblog\u002Fpres-poincare-2015.pdf"},children:[{type:a,value:S}]},{type:a,value:" ou ver o código no\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fpres-poincare-2015",rel:[l,m,n],target:o},children:[{type:a,value:U}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2015-11-20-apresentacao-no-poincare---2015",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Apresentação no Poincaré - 2015\n\nFui convidado a fazer alguma apresentação para os seminários Poincaré do PET\nMatemática da UFPR.\nIrei falar sobre o Método de Newton para zeros de funções, sistemas não\nlineares, e para otimização.\n\nA apresentação será hoje, dia 20 de Novembro, às 17h40. Os slides você pode\npegar [aqui](\u002Fblog\u002Fpres-poincare-2015.pdf) ou ver o código no\n[GitHub](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fpres-poincare-2015).\n"},{slug:"2015-11-16-new-computer-at-work",title:d$,date:"2015-11-16",tags:[K,aR,ea,aA],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"new-computer-at-work"},children:[{type:b,tag:f,props:{href:"#new-computer-at-work",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:d$}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I just got a new notebook at work. This is a HP computer, with a AMD a10-4600M\nprocessor, 4GB of RAM and 320GB of HD space.\nI have a personal notebook with a similar configuration and my work desktop also\nhas a similar configuration, so this isn't a great improvement.\nHowever, we're gonna have an additional monitor, so this is good enough.\nAlso, I'll leave the other one as the always-on screen+irssi computer.\nLet's try to use it. Talk to me again in a week."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I'll leave a list of commands I used to install Archlinux on it for future\nreference. Maybe someday I'll comment it, but most things here can be found on\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002Fbeginners'_guide",rel:[l,m,n],target:o},children:[{type:a,value:"the beginners' guide"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"ls \u002Fsys\u002Ffirmware\u002Fefi\u002Fefivars\nip link set enp1s0 down\nnetctl start MYCONFIGURATION\nmkparted \u002Fdev\u002Fsda\nmklabel gpt\nparted \u002Fdev\u002Fsda\n(parted) mkpart primary ext4 1MiB 100MiB\n(parted) set 1 boot on\n(parted) mkpart primary ext4 100MiB 30GiB\n(parted) mkpart primary linux-swap 30GiB 38GiB\n(parted) mkpart primary ext4 38GiB 100%\n(parted) quit\nmkfs.ext4 \u002Fdev\u002Fsda1\nmkfs.ext4 \u002Fdev\u002Fsda2\nmkfs.ext4 \u002Fdev\u002Fsda4\nmkswap \u002Fdev\u002Fsda3\nswapon \u002Fdev\u002Fsda3\nmount \u002Fdev\u002Fsda2 \u002Fmnt\nmkdir -p \u002Fmnt\u002F{boot,home}\nmount \u002Fdev\u002Fsda1 \u002Fmnt\u002Fboot\nmount \u002Fdev\u002Fsda4 \u002Fmnt\u002Fhome\ncd \u002Fetc\u002Fpacman.d\ncp mirrorlist{,.bk}\n#grep Brazil -A 1 mirrorlist.bk | sed '\u002F--\u002Fd' \u003E mirrorlist\ngrep c3sl -B 1 mirrorlist.bk \u003E mirrorlist\npacstrap -i \u002Fmnt base base-devel vim screen git\ngenfstab -U \u002Fmnt \u003E \u002Fmnt\u002Fetc\u002Ffstab\narch-chroot \u002Fmnt \u002Fbin\u002Fbash\nvim \u002Fetc\u002Flocale.gen # Uncomment en_US.UTF-8 and others\nlocate-gen\necho LANG=en_US.UTF-8 \u003E \u002Fetc\u002Flocale.conf\nln -s \u002Fusr\u002Fshare\u002Fzoneinfo\u002FAmerica\u002FSao_Paulo \u002Fetc\u002Flocaltime\nhwclock --systohc --utc\nmkinitcpio -p linux\npacman -S syslinux gptfdisk\nsyslinux-install_update -i -a -m\nvim \u002Fboot\u002Fsyslinux\u002Fsyslinux.cfg\necho myhostname \u003E \u002Fetc\u002Fhostname\npacman -S iw wpa_supplicant dialog\npasswd\nexit # From the chroot\ncp \u002Fetc\u002Fnetctl\u002Fufpr-static \u002Fmnt\u002Fetc\u002Fnetctl\u002Fufpr-static\numount -R \u002Fmnt\nreboot\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"netctl start ufpr-static\npacman -S xorg-server i3-wm i3lock i3status xorg-xinit xorg-twm xterm dmenu\npacman -S xf86-input-synaptics\nuseradd abel -g users -G wheel -m -s \u002Fbin\u002Fbash\npasswd abel\nvisudo\n# Log as abel\nstartx # possibly pkill X\n# Download b43-firmware and install it\n# Rejoice\n"}]}]}]}]},dir:C,path:"\u002Fblog\u002F2015-11-16-new-computer-at-work",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# New computer at work\n\nI just got a new notebook at work. This is a HP computer, with a AMD a10-4600M\nprocessor, 4GB of RAM and 320GB of HD space.\nI have a personal notebook with a similar configuration and my work desktop also\nhas a similar configuration, so this isn't a great improvement.\nHowever, we're gonna have an additional monitor, so this is good enough.\nAlso, I'll leave the other one as the always-on screen+irssi computer.\nLet's try to use it. Talk to me again in a week.\n\nI'll leave a list of commands I used to install Archlinux on it for future\nreference. Maybe someday I'll comment it, but most things here can be found on\n[the beginners' guide](https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002Fbeginners'_guide).\n\n```\nls \u002Fsys\u002Ffirmware\u002Fefi\u002Fefivars\nip link set enp1s0 down\nnetctl start MYCONFIGURATION\nmkparted \u002Fdev\u002Fsda\nmklabel gpt\nparted \u002Fdev\u002Fsda\n(parted) mkpart primary ext4 1MiB 100MiB\n(parted) set 1 boot on\n(parted) mkpart primary ext4 100MiB 30GiB\n(parted) mkpart primary linux-swap 30GiB 38GiB\n(parted) mkpart primary ext4 38GiB 100%\n(parted) quit\nmkfs.ext4 \u002Fdev\u002Fsda1\nmkfs.ext4 \u002Fdev\u002Fsda2\nmkfs.ext4 \u002Fdev\u002Fsda4\nmkswap \u002Fdev\u002Fsda3\nswapon \u002Fdev\u002Fsda3\nmount \u002Fdev\u002Fsda2 \u002Fmnt\nmkdir -p \u002Fmnt\u002F{boot,home}\nmount \u002Fdev\u002Fsda1 \u002Fmnt\u002Fboot\nmount \u002Fdev\u002Fsda4 \u002Fmnt\u002Fhome\ncd \u002Fetc\u002Fpacman.d\ncp mirrorlist{,.bk}\n#grep Brazil -A 1 mirrorlist.bk | sed '\u002F--\u002Fd' \u003E mirrorlist\ngrep c3sl -B 1 mirrorlist.bk \u003E mirrorlist\npacstrap -i \u002Fmnt base base-devel vim screen git\ngenfstab -U \u002Fmnt \u003E \u002Fmnt\u002Fetc\u002Ffstab\narch-chroot \u002Fmnt \u002Fbin\u002Fbash\nvim \u002Fetc\u002Flocale.gen # Uncomment en_US.UTF-8 and others\nlocate-gen\necho LANG=en_US.UTF-8 \u003E \u002Fetc\u002Flocale.conf\nln -s \u002Fusr\u002Fshare\u002Fzoneinfo\u002FAmerica\u002FSao_Paulo \u002Fetc\u002Flocaltime\nhwclock --systohc --utc\nmkinitcpio -p linux\npacman -S syslinux gptfdisk\nsyslinux-install_update -i -a -m\nvim \u002Fboot\u002Fsyslinux\u002Fsyslinux.cfg\necho myhostname \u003E \u002Fetc\u002Fhostname\npacman -S iw wpa_supplicant dialog\npasswd\nexit # From the chroot\ncp \u002Fetc\u002Fnetctl\u002Fufpr-static \u002Fmnt\u002Fetc\u002Fnetctl\u002Fufpr-static\numount -R \u002Fmnt\nreboot\n```\n\n```\nnetctl start ufpr-static\npacman -S xorg-server i3-wm i3lock i3status xorg-xinit xorg-twm xterm dmenu\npacman -S xf86-input-synaptics\nuseradd abel -g users -G wheel -m -s \u002Fbin\u002Fbash\npasswd abel\nvisudo\n# Log as abel\nstartx # possibly pkill X\n# Download b43-firmware and install it\n# Rejoice\n```\n"},{slug:"2015-10-01-installing-cutest-and-cutestjl",title:eb,date:"2015-10-01",tags:[_,H],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"installing-cutest-and-cutestjl"},children:[{type:b,tag:f,props:{href:"#installing-cutest-and-cutestjl",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eb}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This post will tell you how to install CUTEst using a different tool that makes\nit much easier. Also, I'll install CUTEst.jl, the CUTEst interface for Julia."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:aS}]},{type:a,value:ab},{type:b,tag:G,props:{},children:[{type:a,value:"Now, CUTEst.jl install CUTEst by itself. Check "},{type:b,tag:f,props:{href:bZ,rel:[l,m,n],target:o},children:[{type:a,value:b_}]},{type:a,value:".\nAlso, for Linux, I've created "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Flinux-cutest",rel:[l,m,n],target:o},children:[{type:a,value:"this CUTEst\ninstaller"}]},{type:a,value:", which should be\neasier to use. February, 11, 2017"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:aS}]},{type:a,value:ab},{type:b,tag:G,props:{},children:[{type:a,value:"Some corrections were made on February, 15, 2016"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:aS}]},{type:a,value:ab},{type:b,tag:G,props:{},children:[{type:a,value:"Some corrections were made on November, 11, 2015"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"By now you probably know\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki",rel:[l,m,n],target:o},children:[{type:a,value:ec}]},{type:a,value:",\nthe repository for testing and comparing nonlinear programming algorithms.\nIt's widely used in the community for some time (considering CUTE and CUTEr,\nthe previous versions).\nIf not, this is a good change to test it, using\n"},{type:b,tag:f,props:{href:aT,rel:[l,m,n],target:o},children:[{type:a,value:O}]},{type:a,value:" to play around.\nThis is a not a post to convince you to use Julia, but I have to say that it is\nmuch easier to use CUTEst on Julia than on MatLab.\nSo, if you are starting on it, I suggest you take a look."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We will use Homebrew to install CUTEst, for two reasons:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"It's much easier (when you learn it)"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Julia requires shared libraries, that the original installation did not\nprovide."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Homebrew is a kind of package manager (such as apt-get, pip, etc.).\nFor linux, there are many things that we don't need from Homebrew, because you\nnormally already have a package manager. However, Homebrew is widely used by OSX\nusers, so it has a lot of packages.\nThe linux version is "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002FHomebrew\u002Flinuxbrew",rel:[l,m,n],target:o},children:[{type:a,value:"Linuxbrew"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The installation is quite simple:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Install brew"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Install CUTEst"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Install CUTEst.jl"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I just made these steps and record my terminal, so you can check\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fasciinema.org\u002Fa\u002F27127",rel:[l,m,n],target:o},children:[{type:a,value:"Asciinema"}]},{type:a,value:", or the embedded version on the\nbottom of the page. Be warned, though, that I was \"cold running\" them, so some\nparts are very slow."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To install brew, I recommend you check the page. For the impatient,"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"ruby -e \"$(curl -fsSL https:\u002F\u002Fraw.githubusercontent.com\u002FHomebrew\u002Flinuxbrew\u002Fgo\u002Finstall)\"\necho 'export PATH=\"$HOME\u002F.linuxbrew\u002Fbin:$PATH\"' \u003E\u003E $HOME\u002F.bashrc\nsource $HOME\u002F.bashrc\nsudo apt-get install build-essential subversion\nbrew doctor\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To install CUTEst, read the\n"},{type:b,tag:f,props:{href:cj,rel:[l,m,n],target:o},children:[{type:a,value:"tap cutest"}]},{type:a,value:".\nAgain, for the impatient"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"brew tap optimizers\u002Fcutest\nbrew install cutest\nbrew install mastsif\nfor f in archdefs mastsif sifdecode cutest; do \\\n  echo \"source $(brew --prefix $f)\u002F$f.bashrc\" \u003E\u003E \\\n  $HOME\u002F.bashrc; \\\ndone\necho 'export LD_LIBRARY_PATH=\"$HOME\u002F.linuxbrew\u002Flib:$LD_LIBRARY_PATH\"' \u003E\u003E $HOME\u002F.bashrc\nsource $HOME\u002F.bashrc\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This should get CUTEst installed.\nNotice the "},{type:b,tag:e,props:{},children:[{type:a,value:"LD_LIBRARY_PATH"}]},{type:a,value:" variable, which points to where the CUTEst library\nwill be."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Test it with"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"brew test sifdecode\nbrew test cutest\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"That's it. You have CUTEst installed to use with Fortran or C.\nA can't provide a simple example, because they aren't simple (enough).\nI'll now go to Julia, and I recommend you try it."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To install Julia, go to their page, then downloads, then download the\nstatic version of the stable release (or do what you want, I'm not your boss).\nThen, in julia, to install\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FCUTEst.jl",rel:[l,m,n],target:o},children:[{type:a,value:ac}]},{type:a,value:",\nissue the commands"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Pkg.clone(\"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FCUTEst.jl\")\nPkg.checkout(\"CUTEst\", \"fix\u002Fissue4\")\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If nothing goes wrong, then you can play around.\nFor instance, to open problem HS32 and get the objective function value at point\n(2,3), we do"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"using CUTEst\nnlp = CUTEstModel(\"HS32\")\nf = obj(nlp, [2.0;3.0])\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you're familiar with CUTEst, you can use the classic functions "},{type:b,tag:e,props:{},children:[{type:a,value:"cfn"}]},{type:a,value:dY},{type:b,tag:e,props:{},children:[{type:a,value:"ufn"}]},{type:a,value:" too, in the default way (as called from C) or a more Julian way.\nThis would become too long to explain now, so I'll make a post in a few days (or\nmonths).\nIf you need it, please contact me."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This concludes the new installation of CUTEst."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Warning"}]},{type:a,value:": Due to current limitations we cannot open two problems at the same\ntime in CUTEst without the possibility of a segmentation fault.\nSo, if you need to run cutest for a list of problems, I suggest you use a bash\nscript to loop over each problem and call your Julia code passing the problem as\nan input argument."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ths embedded Asciinema video is below."}]},{type:a,value:c},{type:b,tag:"script",props:{type:"text\u002Fjavascript",src:"https:\u002F\u002Fasciinema.org\u002Fa\u002F27127.js",id:"asciicast-27127",async:true},children:[]}]},dir:C,path:"\u002Fblog\u002F2015-10-01-installing-cutest-and-cutestjl",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Installing CUTEst and CUTEst.jl\n\nThis post will tell you how to install CUTEst using a different tool that makes\nit much easier. Also, I'll install CUTEst.jl, the CUTEst interface for Julia.\n\n**Edit:** _Now, CUTEst.jl install CUTEst by itself. Check [this\npost](https:\u002F\u002Fabelsiqueira.github.io{{local_prefix}}nlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia\u002F).\nAlso, for Linux, I've created [this CUTEst\ninstaller](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Flinux-cutest), which should be\neasier to use. February, 11, 2017_.\n\n**Edit:** _Some corrections were made on February, 15, 2016_.\n\n**Edit:** _Some corrections were made on November, 11, 2015_.\n\nBy now you probably know\n[CUTEst](http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki),\nthe repository for testing and comparing nonlinear programming algorithms.\nIt's widely used in the community for some time (considering CUTE and CUTEr,\nthe previous versions).\nIf not, this is a good change to test it, using\n[Julia](http:\u002F\u002Fwww.julialang.org) to play around.\nThis is a not a post to convince you to use Julia, but I have to say that it is\nmuch easier to use CUTEst on Julia than on MatLab.\nSo, if you are starting on it, I suggest you take a look.\n\nWe will use Homebrew to install CUTEst, for two reasons:\n\n- It's much easier (when you learn it)\n- Julia requires shared libraries, that the original installation did not\n  provide.\n\nHomebrew is a kind of package manager (such as apt-get, pip, etc.).\nFor linux, there are many things that we don't need from Homebrew, because you\nnormally already have a package manager. However, Homebrew is widely used by OSX\nusers, so it has a lot of packages.\nThe linux version is [Linuxbrew](https:\u002F\u002Fgithub.com\u002FHomebrew\u002Flinuxbrew).\n\nThe installation is quite simple:\n\n- Install brew\n- Install CUTEst\n- Install CUTEst.jl\n\nI just made these steps and record my terminal, so you can check\n[Asciinema](https:\u002F\u002Fasciinema.org\u002Fa\u002F27127), or the embedded version on the\nbottom of the page. Be warned, though, that I was \"cold running\" them, so some\nparts are very slow.\n\nTo install brew, I recommend you check the page. For the impatient,\n\n```\nruby -e \"$(curl -fsSL https:\u002F\u002Fraw.githubusercontent.com\u002FHomebrew\u002Flinuxbrew\u002Fgo\u002Finstall)\"\necho 'export PATH=\"$HOME\u002F.linuxbrew\u002Fbin:$PATH\"' \u003E\u003E $HOME\u002F.bashrc\nsource $HOME\u002F.bashrc\nsudo apt-get install build-essential subversion\nbrew doctor\n```\n\nTo install CUTEst, read the\n[tap cutest](https:\u002F\u002Fgithub.com\u002Foptimizers\u002Fhomebrew-cutest).\nAgain, for the impatient\n\n```\nbrew tap optimizers\u002Fcutest\nbrew install cutest\nbrew install mastsif\nfor f in archdefs mastsif sifdecode cutest; do \\\n  echo \"source $(brew --prefix $f)\u002F$f.bashrc\" \u003E\u003E \\\n  $HOME\u002F.bashrc; \\\ndone\necho 'export LD_LIBRARY_PATH=\"$HOME\u002F.linuxbrew\u002Flib:$LD_LIBRARY_PATH\"' \u003E\u003E $HOME\u002F.bashrc\nsource $HOME\u002F.bashrc\n```\n\nThis should get CUTEst installed.\nNotice the `LD_LIBRARY_PATH` variable, which points to where the CUTEst library\nwill be.\n\nTest it with\n\n```\nbrew test sifdecode\nbrew test cutest\n```\n\nThat's it. You have CUTEst installed to use with Fortran or C.\nA can't provide a simple example, because they aren't simple (enough).\nI'll now go to Julia, and I recommend you try it.\n\nTo install Julia, go to their page, then downloads, then download the\nstatic version of the stable release (or do what you want, I'm not your boss).\nThen, in julia, to install\n[CUTEst.jl](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FCUTEst.jl),\nissue the commands\n\n```\nPkg.clone(\"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FCUTEst.jl\")\nPkg.checkout(\"CUTEst\", \"fix\u002Fissue4\")\n```\n\nIf nothing goes wrong, then you can play around.\nFor instance, to open problem HS32 and get the objective function value at point\n(2,3), we do\n\n```\nusing CUTEst\nnlp = CUTEstModel(\"HS32\")\nf = obj(nlp, [2.0;3.0])\n```\n\nIf you're familiar with CUTEst, you can use the classic functions `cfn` and\n`ufn` too, in the default way (as called from C) or a more Julian way.\nThis would become too long to explain now, so I'll make a post in a few days (or\nmonths).\nIf you need it, please contact me.\n\nThis concludes the new installation of CUTEst.\n\n**Warning**: Due to current limitations we cannot open two problems at the same\ntime in CUTEst without the possibility of a segmentation fault.\nSo, if you need to run cutest for a list of problems, I suggest you use a bash\nscript to loop over each problem and call your Julia code passing the problem as\nan input argument.\n\nThs embedded Asciinema video is below.\n\n\u003Cscript type=\"text\u002Fjavascript\" src=\"https:\u002F\u002Fasciinema.org\u002Fa\u002F27127.js\"\nid=\"asciicast-27127\" async\u003E\u003C\u002Fscript\u003E\n"},{slug:"2015-05-30-resultado-da-oficina-de-ferramentas-computacionais-para-pesquisadores",title:ed,date:"2015-05-30",tags:[au,"impression"],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"resultado-da-oficina-de-ferramentas-computacionais-para-pesquisadores"},children:[{type:b,tag:f,props:{href:"#resultado-da-oficina-de-ferramentas-computacionais-para-pesquisadores",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:ed}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Hoje aconteceu a "},{type:b,tag:f,props:{href:"%7B%7Blocal_prefix%7D%7D\u002Fworkshop-2015-05-30"},children:[{type:a,value:"Oficina de Ferramentas Computacionais para\nPesquisadores"}]},{type:a,value:".\nComo era esperado, tivemos um pouco de atrasado, mas não tanto.\nConseguimos começar uns 5 minutos depois do esperado, mas não conseguimos fazer\nchamada. O período da manhã teve por volta de 20 participantes, sendo que alguns\neram meus alunos que vieram pelo Julia. Algumas pessoas foram embora durante o\nalmoço, e a oficina acabou com 15 participantes."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Veja também o "},{type:b,tag:f,props:{href:"http:\u002F\u002Fblog.rgaiacs.com\u002F2015\u002F05\u002F31\u002Fufpr.html",rel:[l,m,n],target:o},children:[{type:a,value:"post do Raniere"}]},{type:a,value:"\nsobre a oficina."}]},{type:a,value:c},{type:b,tag:x,props:{id:"material"},children:[{type:b,tag:f,props:{href:"#material",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Material"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Eu utilizei os materiais"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:P,props:{to:"\u002Fblog\u002F2015-05-30-slides-julia.pdf"},children:[{type:a,value:"Slides de Julia"}]},{type:a,value:ee}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"[Código](http:\u002F\u002Fgitlab.com\u002Fabelsiqueira\u002Fpres-julia).\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:P,props:{to:"\u002Fblog\u002F2015-05-30-slides-git.pdf"},children:[{type:a,value:"Slides de Git"}]},{type:a,value:ee}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"[Código](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fworkshop).\n"}]}]}]},{type:a,value:c},{type:b,tag:x,props:{id:"dificuldades"},children:[{type:b,tag:f,props:{href:"#dificuldades",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Dificuldades"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Como é natural nesse tipo de evento, tivemos algumas dificuldades com\ncompatibilidade. Algumas pessoas não conseguiram instalar as ferramentas, outras\ntinham versões diferentes. Felizmente, conseguimos arrumar a maior parte desses\nproblemas."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A internet também foi um problema. Os pontos de cabo eram com IP estático, então\ntrouxemos um roteador e configuramos internet wireless.\nIsso nos permitiu instalar programas para os que não conseguiram, e também nos\npermitiu fazer a parte de git remoto. Infelizmente a internet estava muita\nlenta, em muitos momentos, por motivos que não sabemos."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Também não conseguimos apoio financeiro, então trouxemos nossa cafeteira e\ncompramos dois pacotes de bolacha água e sal, daquelas redondas, tradicionais\npara evento."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Também tivemos o problema de tempo, mas isso não pode ser resolvido "},{type:b,tag:G,props:{},children:[{type:a,value:"no tempo\ndisponível"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:x,props:{id:"planos-futuros"},children:[{type:b,tag:f,props:{href:"#planos-futuros",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Planos futuros"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Considero essa oficina um sucesso. Tivemos vários interessados, e conseguimos\npassar uma boa quantidade de conteúdo. Todos saíram com alguma coisa\nfuncionando, e a maioria saiu com um usuário do GitHub."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Idealmente, faremos outras oficinas, e agora que temos mais pessoas\ncapacitando-se, podemos ter outras pessoas apresentando. E fazer algumas\napresentações mais avançadas."}]},{type:a,value:c},{type:b,tag:x,props:{id:"agradecimentos"},children:[{type:b,tag:f,props:{href:"#agradecimentos",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Agradecimentos"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Agradeço o Raniere, por ter aceitado participar do evento, e também\nà Kally Chung e ao "},{type:b,tag:f,props:{href:"https:\u002F\u002Ffernandomayer.github.io\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"Fernando Mayer"}]},{type:a,value:" que\ntoparam ficar de monitores."}]},{type:a,value:c},{type:b,tag:x,props:{id:"certificados"},children:[{type:b,tag:f,props:{href:"#certificados",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Certificados"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Alguns certificados serão emitidos, e serão disponibilizados aqui, ou enviados\npor e-mail, em breve."}]}]},dir:C,path:"\u002Fblog\u002F2015-05-30-resultado-da-oficina-de-ferramentas-computacionais-para-pesquisadores",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Resultado da Oficina de Ferramentas Computacionais Para Pesquisadores\n\nHoje aconteceu a [Oficina de Ferramentas Computacionais para\nPesquisadores]({{local_prefix}}\u002Fworkshop-2015-05-30).\nComo era esperado, tivemos um pouco de atrasado, mas não tanto.\nConseguimos começar uns 5 minutos depois do esperado, mas não conseguimos fazer\nchamada. O período da manhã teve por volta de 20 participantes, sendo que alguns\neram meus alunos que vieram pelo Julia. Algumas pessoas foram embora durante o\nalmoço, e a oficina acabou com 15 participantes.\n\nVeja também o [post do Raniere](http:\u002F\u002Fblog.rgaiacs.com\u002F2015\u002F05\u002F31\u002Fufpr.html)\nsobre a oficina.\n\n# Material\n\nEu utilizei os materiais\n\n- [Slides de Julia](\u002Fblog\u002F2015-05-30-slides-julia.pdf) -\n\n```\n[Código](http:\u002F\u002Fgitlab.com\u002Fabelsiqueira\u002Fpres-julia).\n```\n\n- [Slides de Git](\u002Fblog\u002F2015-05-30-slides-git.pdf) -\n\n```\n[Código](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fworkshop).\n```\n\n# Dificuldades\n\nComo é natural nesse tipo de evento, tivemos algumas dificuldades com\ncompatibilidade. Algumas pessoas não conseguiram instalar as ferramentas, outras\ntinham versões diferentes. Felizmente, conseguimos arrumar a maior parte desses\nproblemas.\n\nA internet também foi um problema. Os pontos de cabo eram com IP estático, então\ntrouxemos um roteador e configuramos internet wireless.\nIsso nos permitiu instalar programas para os que não conseguiram, e também nos\npermitiu fazer a parte de git remoto. Infelizmente a internet estava muita\nlenta, em muitos momentos, por motivos que não sabemos.\n\nTambém não conseguimos apoio financeiro, então trouxemos nossa cafeteira e\ncompramos dois pacotes de bolacha água e sal, daquelas redondas, tradicionais\npara evento.\n\nTambém tivemos o problema de tempo, mas isso não pode ser resolvido _no tempo\ndisponível_.\n\n# Planos futuros\n\nConsidero essa oficina um sucesso. Tivemos vários interessados, e conseguimos\npassar uma boa quantidade de conteúdo. Todos saíram com alguma coisa\nfuncionando, e a maioria saiu com um usuário do GitHub.\n\nIdealmente, faremos outras oficinas, e agora que temos mais pessoas\ncapacitando-se, podemos ter outras pessoas apresentando. E fazer algumas\napresentações mais avançadas.\n\n# Agradecimentos\n\nAgradeço o Raniere, por ter aceitado participar do evento, e também\nà Kally Chung e ao [Fernando Mayer](https:\u002F\u002Ffernandomayer.github.io\u002F) que\ntoparam ficar de monitores.\n\n# Certificados\n\nAlguns certificados serão emitidos, e serão disponibilizados aqui, ou enviados\npor e-mail, em breve.\n"},{slug:"2015-04-13-workshop-de-ferramentas-computacionais-maio-de-2015",title:ef,date:eg,tags:[au,ct,bT,eh,H],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"workshop-de-ferramentas-computacionais---maio-de-2015"},children:[{type:b,tag:f,props:{href:"#workshop-de-ferramentas-computacionais---maio-de-2015",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:ef}]},{type:a,value:c},{type:b,tag:x,props:{id:"sobre"},children:[{type:b,tag:f,props:{href:"#sobre",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Sobre"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"No dia 30 de Maio de 2015 acontecerá uma Oficina de Ferramentas Computacionais\npara Pesquisadores.\nEssa oficina será focada em três ferramentas básicas para desenvolvimento de\nsoftware:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:ei}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:ej}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:O}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O Bash é o terminal tradicinal dos sistemas GNU\u002FLinux (a tela preta).\nAs possibilidades de uso são ilimitadas, mas vamos focar no básico,\ntentando chegar até a criação de um script simples."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O Git é uma ferramenta para controlar versões de softwares e outros arquivos.\nVocê consegue guardar versões anteriores dos seus arquivos, assim como versões\nalternativas, com uma estrutura escondida que melhora a organização e o design.\nEla é usada principalmente para controle de versões de software, permitindo que\ncada programador saiba o que foi feito por quem e quando, mas também pode ser\nutilizado para controle de versões de artigos, teses e apresentações.\nO "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Flpoo\u002Fmodelo_tese_imecc",rel:[l,m,n],target:o},children:[{type:a,value:"modelo de tese do IMECC - UNICAMP"}]},{type:a,value:"\nusa o Git, e este site está "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fabelsiqueira.github.io",rel:[l,m,n],target:o},children:[{type:a,value:"armazenado usando o\nGit"}]},{type:a,value:".\nÉ uma das ferramentas principais para gerenciamento de versões, e "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgit.wiki.kernel.org\u002Findex.php\u002FGitProjects",rel:[l,m,n],target:o},children:[{type:a,value:"muitos\nprojetos importantes o usam"}]},{type:a,value:".\nO Git pode ser usado apenas em seu computador, mas o uso comum envolve algum\nservidor remoto (principalmente para colaboração). A oficina tentará mostrar um\npouco de cada."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Julia é uma nova linguagem de programação que tem o objetivo de ser rápido como\nC\u002FFortran, permitindo uma interfaca simples entre C e Fortran, e com sintaxe\nparecida com a de Matlab e Python.\nComo é uma linguagem livre, acreditamos ser uma escolha melhor que o Matlab para\nsoftware livre.\nTambém é uma boa linguagem inicial por ser prática, e tem muito espaço para\nexpansão por nova."}]},{type:a,value:c},{type:b,tag:x,props:{id:"ministrantes"},children:[{type:b,tag:f,props:{href:"#ministrantes",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Ministrantes"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:"%7B%7Blocal_prefix%7D%7D\u002F"},children:[{type:a,value:"Eu"}]},{type:a,value:" - Trabalho com GNU\u002FLinux desde minha graduação,"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"e trabalho com software livre. Meus trabalhos individuais são de código\naberto, e acredito que esse é o caminho mais correto para o desenvolvimento\nacadêmico.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:f,props:{href:ek,rel:[l,m,n],target:o},children:[{type:a,value:"Raniere Gaia"}]},{type:a,value:" - Estuda matemática aplicada na"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Universidade Estadual de Campinas, e trabalha em alguns projetos de nível\ninternacional. Faz contribuições para Mozilla, e é um membro mantenedor do\nSoftware Carpentry.\n"}]}]}]},{type:a,value:c},{type:b,tag:x,props:{id:"requerimentos"},children:[{type:b,tag:f,props:{href:"#requerimentos",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Requerimentos"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Para participar da oficina voce "},{type:b,tag:v,props:{},children:[{type:a,value:"precisa de um computador portátil"}]},{type:a,value:"\ncom alguns softwares instalados.\n"},{type:b,tag:v,props:{},children:[{type:a,value:"Idealmente"}]},{type:a,value:", um computador com algum tipo Unix (Ubuntu, Fedora, OSX) é melhor\npara o desenvolvimento "},{type:b,tag:G,props:{},children:[{type:a,value:"na opinião do autor da página"}]},{type:a,value:el},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.quora.com\u002FIs-it-important-for-modern-programmers-to-know-use-Unix-Why",rel:[l,m,n],target:o},children:[{type:a,value:"Veja\ndiscussões"}]},{type:a,value:".\nAlém disso, os instrutores não tem o conhecimento para dar suporte completo no\nWindows (Aceitamos voluntários).\n(Nota: Teremos alguns computadores com sistema operacional Windows disponíveis,\nmas não teremos tempo para testar todos, ou instalar tudo que julgamos\nessencial)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Softwares que você precisa"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:ei}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"- No GNU\u002FLinux, o Bash já deve estar instalado.\nProcure pelo `terminal` ou `console` no seu sistema. Quando ele abrir,\ndigite\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"bash --version\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Uma mensagem deve aparecer indicando qual versão está instalada.\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"- No OSX, o terminal padrão também é o Bash. Você pode acessar pelo\n`\u002FApplications\u002FUtilities\u002F`. Dica: coloque o terminal no dock.\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"- No Windows existem algumas opções,\numa delas é o [Git Bash](http:\u002F\u002Fmsysgit.github.io\u002F), que você já usa para o\nGit também.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:ej}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"- No Windows, instale o [Git Bash](http:\u002F\u002Fmsysgit.github.io\u002F), que falei\nacima.\n**Nota**: Uma das opções da instalações é sobre o fim de linha (line\nending). Escolha a opção de seguir o padrão Unix (ou algo parecido).\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"- No OSX, você pode instalar o Git para Mac baixando um instalador\n[aqui](http:\u002F\u002Fsourceforge.net\u002Fprojects\u002Fgit-osx-installer\u002Ffiles\u002F).\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"- Num computador tipo Unix, siga as [instruções](http:\u002F\u002Fgit-scm.com\u002Fdownloads).\nTeste que o git foi instalado fazendo\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"git --version\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"no seu terminal.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Julia: Siga as "},{type:b,tag:f,props:{href:"http:\u002F\u002Fjulialang.org\u002Fdownloads\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"instruções"}]},{type:a,value:w}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Para testar, verifique que o Julia foi instalado abrindo o terminal de\nJulia, e verificando que o texto introdutório contém `Version 0.x.x`.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Um editor de texto, preferencialmente com suporte a UTF-8, código colorido"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"automaticamente, indentação automática e inclusão de espaços no lugar de\nTAB. Existem algumas opções, e se você não tem preferência nenhuma, o\n[atom.io](https:\u002F\u002Fatom.io\u002F) é um bom para começar. Se for usá-lo,\nrecomendamos buscar pelo pacote `language-julia`.\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Certifique-se de ter essas ferramentas instaladas ANTES do evento"}]},{type:a,value:". Entre em\ncontato em caso de dúvidas."}]},{type:a,value:c},{type:b,tag:x,props:{id:"inscrições"},children:[{type:b,tag:f,props:{href:"#inscri%C3%A7%C3%B5es",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Inscrições"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"As inscrições estão fechadas. Caso tenha interesse em participar, me mande um\ne-mail para confirmar se ainda temos vagas."}]},{type:a,value:c},{type:b,tag:x,props:{id:"cronograma"},children:[{type:b,tag:f,props:{href:"#cronograma",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Cronograma"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O evento acontecerá no dia 30 de Maio de 2015, seguindo o cronograma abaixo:\n("},{type:b,tag:G,props:{},children:[{type:a,value:"Nota: Mudamos o horário de Julia para melhor acomodar o cronograma"}]},{type:a,value:em}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"08:00"}]},{type:a,value:" : Abertura"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"08:30"}]},{type:a,value:" : Bash (com Raniere)"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"09:30"}]},{type:a,value:en},{type:b,tag:G,props:{},children:[{type:a,value:eo}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"10:00"}]},{type:a,value:" : Julia (com Abel)"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"11:30"}]},{type:a,value:" : Almoço"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"13:30"}]},{type:a,value:" : Git Local (com Abel)"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"15:00"}]},{type:a,value:en},{type:b,tag:G,props:{},children:[{type:a,value:eo}]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"15:30"}]},{type:a,value:" : Git Remoto (com Raniere)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:x,props:{id:"local"},children:[{type:b,tag:f,props:{href:"#local",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:"Local"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Utilizaremos o Laboratório de Matemática e Desenho (LAMADE) no bloco PC, sala\nPC12."}]}]},dir:C,path:"\u002Fblog\u002F2015-04-13-workshop-de-ferramentas-computacionais-maio-de-2015",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Workshop de Ferramentas Computacionais - Maio de 2015\n\n# Sobre\n\nNo dia 30 de Maio de 2015 acontecerá uma Oficina de Ferramentas Computacionais\npara Pesquisadores.\nEssa oficina será focada em três ferramentas básicas para desenvolvimento de\nsoftware:\n\n- Bash\n- Git\n- Julia\n\nO Bash é o terminal tradicinal dos sistemas GNU\u002FLinux (a tela preta).\nAs possibilidades de uso são ilimitadas, mas vamos focar no básico,\ntentando chegar até a criação de um script simples.\n\nO Git é uma ferramenta para controlar versões de softwares e outros arquivos.\nVocê consegue guardar versões anteriores dos seus arquivos, assim como versões\nalternativas, com uma estrutura escondida que melhora a organização e o design.\nEla é usada principalmente para controle de versões de software, permitindo que\ncada programador saiba o que foi feito por quem e quando, mas também pode ser\nutilizado para controle de versões de artigos, teses e apresentações.\nO [modelo de tese do IMECC - UNICAMP](https:\u002F\u002Fgithub.com\u002Flpoo\u002Fmodelo_tese_imecc)\nusa o Git, e este site está [armazenado usando o\nGit](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fabelsiqueira.github.io).\nÉ uma das ferramentas principais para gerenciamento de versões, e [muitos\nprojetos importantes o usam](https:\u002F\u002Fgit.wiki.kernel.org\u002Findex.php\u002FGitProjects).\nO Git pode ser usado apenas em seu computador, mas o uso comum envolve algum\nservidor remoto (principalmente para colaboração). A oficina tentará mostrar um\npouco de cada.\n\nJulia é uma nova linguagem de programação que tem o objetivo de ser rápido como\nC\u002FFortran, permitindo uma interfaca simples entre C e Fortran, e com sintaxe\nparecida com a de Matlab e Python.\nComo é uma linguagem livre, acreditamos ser uma escolha melhor que o Matlab para\nsoftware livre.\nTambém é uma boa linguagem inicial por ser prática, e tem muito espaço para\nexpansão por nova.\n\n# Ministrantes\n\n- [Eu]({{local_prefix}}\u002F) - Trabalho com GNU\u002FLinux desde minha graduação,\n\n```\ne trabalho com software livre. Meus trabalhos individuais são de código\naberto, e acredito que esse é o caminho mais correto para o desenvolvimento\nacadêmico.\n```\n\n- [Raniere Gaia](http:\u002F\u002Frgaiacs.com\u002F) - Estuda matemática aplicada na\n\n```\nUniversidade Estadual de Campinas, e trabalha em alguns projetos de nível\ninternacional. Faz contribuições para Mozilla, e é um membro mantenedor do\nSoftware Carpentry.\n```\n\n# Requerimentos\n\nPara participar da oficina voce **precisa de um computador portátil**\ncom alguns softwares instalados.\n**Idealmente**, um computador com algum tipo Unix (Ubuntu, Fedora, OSX) é melhor\npara o desenvolvimento _na opinião do autor da página_.\n[Veja\ndiscussões](http:\u002F\u002Fwww.quora.com\u002FIs-it-important-for-modern-programmers-to-know-use-Unix-Why).\nAlém disso, os instrutores não tem o conhecimento para dar suporte completo no\nWindows (Aceitamos voluntários).\n(Nota: Teremos alguns computadores com sistema operacional Windows disponíveis,\nmas não teremos tempo para testar todos, ou instalar tudo que julgamos\nessencial).\n\nSoftwares que você precisa\n\n- Bash\n\n```\n- No GNU\u002FLinux, o Bash já deve estar instalado.\nProcure pelo `terminal` ou `console` no seu sistema. Quando ele abrir,\ndigite\n```\n\n```\nbash --version\n```\n\n```\nUma mensagem deve aparecer indicando qual versão está instalada.\n```\n\n```\n- No OSX, o terminal padrão também é o Bash. Você pode acessar pelo\n`\u002FApplications\u002FUtilities\u002F`. Dica: coloque o terminal no dock.\n```\n\n```\n- No Windows existem algumas opções,\numa delas é o [Git Bash](http:\u002F\u002Fmsysgit.github.io\u002F), que você já usa para o\nGit também.\n```\n\n- Git\n\n```\n- No Windows, instale o [Git Bash](http:\u002F\u002Fmsysgit.github.io\u002F), que falei\nacima.\n**Nota**: Uma das opções da instalações é sobre o fim de linha (line\nending). Escolha a opção de seguir o padrão Unix (ou algo parecido).\n```\n\n```\n- No OSX, você pode instalar o Git para Mac baixando um instalador\n[aqui](http:\u002F\u002Fsourceforge.net\u002Fprojects\u002Fgit-osx-installer\u002Ffiles\u002F).\n```\n\n```\n- Num computador tipo Unix, siga as [instruções](http:\u002F\u002Fgit-scm.com\u002Fdownloads).\nTeste que o git foi instalado fazendo\n```\n\n```\ngit --version\n```\n\n```\nno seu terminal.\n```\n\n- Julia: Siga as [instruções](http:\u002F\u002Fjulialang.org\u002Fdownloads\u002F).\n\n```\nPara testar, verifique que o Julia foi instalado abrindo o terminal de\nJulia, e verificando que o texto introdutório contém `Version 0.x.x`.\n```\n\n- Um editor de texto, preferencialmente com suporte a UTF-8, código colorido\n\n```\nautomaticamente, indentação automática e inclusão de espaços no lugar de\nTAB. Existem algumas opções, e se você não tem preferência nenhuma, o\n[atom.io](https:\u002F\u002Fatom.io\u002F) é um bom para começar. Se for usá-lo,\nrecomendamos buscar pelo pacote `language-julia`.\n```\n\n**Certifique-se de ter essas ferramentas instaladas ANTES do evento**. Entre em\ncontato em caso de dúvidas.\n\n# Inscrições\n\nAs inscrições estão fechadas. Caso tenha interesse em participar, me mande um\ne-mail para confirmar se ainda temos vagas.\n\n# Cronograma\n\nO evento acontecerá no dia 30 de Maio de 2015, seguindo o cronograma abaixo:\n(_Nota: Mudamos o horário de Julia para melhor acomodar o cronograma_).\n\n- **08:00** : Abertura\n- **08:30** : Bash (com Raniere)\n- **09:30** : _Coffee Break_\n- **10:00** : Julia (com Abel)\n- **11:30** : Almoço\n- **13:30** : Git Local (com Abel)\n- **15:00** : _Coffee Break_\n- **15:30** : Git Remoto (com Raniere)\n\n# Local\n\nUtilizaremos o Laboratório de Matemática e Desenho (LAMADE) no bloco PC, sala\nPC12.\n"},{slug:"2015-04-13-a-cli-reminder-remind",title:ep,date:eg,tags:["review",eq],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"a-cli-reminder---remind"},children:[{type:b,tag:f,props:{href:"#a-cli-reminder---remind",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:ep}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I've struggled with remembering appointments and tasks for a long time.\nDuring my undergraduate courses, I learned to manage the tasks I had because\nthey were few and regular.\nIt's easy to remember you have class at 7h30 if every weekday you have class at\n7h30. Also, you normally have a group of people around you doing the same\nthings, so someone usually remembers when something is due."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"As years advanced, I started using what I could to remeber tasks. Mostly sending\ne-mails to myself, setting alarms on my phone and using Google Agenda.\nWell, I still send e-mails to myself, or mark e-mails as unread because it\nannoys me to have unread messages, but I mostly use that for "},{type:b,tag:G,props:{},children:[{type:a,value:"read you later"}]},{type:a,value:"\nthings, or things without time limit.\nAlso, I still use the phone alarm to remind myself that a class will start soon.\nHowever, some things have a time frame, so using a calendar-type tool is\nnecessary, and I also needed a way to move things around."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I have tried Google Agenda,\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Ftrello.com\u002Fabelsiqueira\u002Frecommend",rel:[l,m,n],target:o},children:[{type:a,value:"Trello"}]},{type:a,value:dw},{type:b,tag:f,props:{href:"http:\u002F\u002Ftaskwarrior.org\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"Task Warrior"}]},{type:a,value:", and\npost-its on my computed screen.\nTrello is a good for collaborative work, but is not open source. I used it\nmainly to work in a group project.\nTask Warrior is a good CLI tool, which I have installed, but there are too many\nthings to learn for it to be effective.\nPost-its are not home-work shared."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now I am trying another tool:\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fwww.roaringpenguin.com\u002Fproducts\u002Fremind",rel:[l,m,n],target:o},children:[{type:a,value:eq}]},{type:a,value:".\nRemind is only a CLI tool that reads a file and prints what you want.\nThere are some GUI tools that use remind, but I like the CLI approach.\nIt has a calendar feature that prints by week, and lets you color appointments,\nmark recurrent events, holidays, and so forth.\nYou can also print a printable version of your calendar (PS format), which is\nnice, when you can predict a month (not my case yet).\nThe reasons I like remind are that it is a CLI tool, it's open source and you\nedit a reminder file to use it."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"To use it, first install according to your distribution, then create a\n"},{type:b,tag:e,props:{},children:[{type:a,value:"reminders.rem"}]},{type:a,value:" file. In this file, write your appointments, following a\nspecific format. For instance"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"REM 13 Apr 2015 SPECIAL COLOR 255 0 0 Write about remind\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This should be self-explanatory. Then, run"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"remind reminders.rem\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This should print your reminders for your current day. If it happens that today\nisn't 13 Apr 2015 for you, then probably you'll have an empty output. Make the\nappropriate changes and run again.\nMy preferred syntax is"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"remind -ccu+3 reminders.rem\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"-c"}]},{type:a,value:" prints a calendar;\n"},{type:b,tag:e,props:{},children:[{type:a,value:"-cc"}]},{type:a,value:" prints a calendar in colors;\n"},{type:b,tag:e,props:{},children:[{type:a,value:"-ccu"}]},{type:a,value:" prints a calendar in colors with unicode chars;\n"},{type:b,tag:e,props:{},children:[{type:a,value:"-ccu+3"}]},{type:a,value:" print today plus 3 weeks of a calendar etc.."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In my setup, I use "},{type:b,tag:f,props:{href:"http:\u002F\u002Fentrproject.org\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"entr"}]},{type:a,value:", and leave a workspace only\nfor remind. Whenever I update my remind file, the calendar is updated. Also, to\nwork from home, my remind file is inside my Dropbox, and I link it to my home\nfolder in each computer.\nThe full command I use is"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"ls .reminders | entr sc -c \"clear; remind -b1 -ccu+5 -w$COLUMNS .reminders \\\n| head -n $LINES\"\n"}]}]}]}]},dir:C,path:"\u002Fblog\u002F2015-04-13-a-cli-reminder-remind",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# A CLI Reminder - Remind\n\nI've struggled with remembering appointments and tasks for a long time.\nDuring my undergraduate courses, I learned to manage the tasks I had because\nthey were few and regular.\nIt's easy to remember you have class at 7h30 if every weekday you have class at\n7h30. Also, you normally have a group of people around you doing the same\nthings, so someone usually remembers when something is due.\n\nAs years advanced, I started using what I could to remeber tasks. Mostly sending\ne-mails to myself, setting alarms on my phone and using Google Agenda.\nWell, I still send e-mails to myself, or mark e-mails as unread because it\nannoys me to have unread messages, but I mostly use that for _read you later_\nthings, or things without time limit.\nAlso, I still use the phone alarm to remind myself that a class will start soon.\nHowever, some things have a time frame, so using a calendar-type tool is\nnecessary, and I also needed a way to move things around.\n\nI have tried Google Agenda,\n[Trello](https:\u002F\u002Ftrello.com\u002Fabelsiqueira\u002Frecommend),\n[Task Warrior](http:\u002F\u002Ftaskwarrior.org\u002F), and\npost-its on my computed screen.\nTrello is a good for collaborative work, but is not open source. I used it\nmainly to work in a group project.\nTask Warrior is a good CLI tool, which I have installed, but there are too many\nthings to learn for it to be effective.\nPost-its are not home-work shared.\n\nNow I am trying another tool:\n[remind](https:\u002F\u002Fwww.roaringpenguin.com\u002Fproducts\u002Fremind).\nRemind is only a CLI tool that reads a file and prints what you want.\nThere are some GUI tools that use remind, but I like the CLI approach.\nIt has a calendar feature that prints by week, and lets you color appointments,\nmark recurrent events, holidays, and so forth.\nYou can also print a printable version of your calendar (PS format), which is\nnice, when you can predict a month (not my case yet).\nThe reasons I like remind are that it is a CLI tool, it's open source and you\nedit a reminder file to use it.\n\nTo use it, first install according to your distribution, then create a\n`reminders.rem` file. In this file, write your appointments, following a\nspecific format. For instance\n\n```\nREM 13 Apr 2015 SPECIAL COLOR 255 0 0 Write about remind\n```\n\nThis should be self-explanatory. Then, run\n\n```\nremind reminders.rem\n```\n\nThis should print your reminders for your current day. If it happens that today\nisn't 13 Apr 2015 for you, then probably you'll have an empty output. Make the\nappropriate changes and run again.\nMy preferred syntax is\n\n```\nremind -ccu+3 reminders.rem\n```\n\n`-c` prints a calendar;\n`-cc` prints a calendar in colors;\n`-ccu` prints a calendar in colors with unicode chars;\n`-ccu+3` print today plus 3 weeks of a calendar etc..\n\nIn my setup, I use [entr](http:\u002F\u002Fentrproject.org\u002F), and leave a workspace only\nfor remind. Whenever I update my remind file, the calendar is updated. Also, to\nwork from home, my remind file is inside my Dropbox, and I link it to my home\nfolder in each computer.\nThe full command I use is\n\n```\nls .reminders | entr sc -c \"clear; remind -b1 -ccu+5 -w$COLUMNS .reminders \\\n| head -n $LINES\"\n```\n"},{slug:"2015-02-25-apresentacao-no-vii-simposio-de-analise-numerica-e-otimizacao-ufpr",title:er,date:"2015-02-25",tags:[K,as,"tools",H],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"apresentação-no-vii-simpósio-de-análise-numérica-e-otimização---ufpr"},children:[{type:b,tag:f,props:{href:"#apresenta%C3%A7%C3%A3o-no-vii-simp%C3%B3sio-de-an%C3%A1lise-num%C3%A9rica-e-otimiza%C3%A7%C3%A3o---ufpr",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:er}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"No dia 24 de Fevereiro de 2015 aconteceu o (primeiro dia do) VII Simpósio de\nAnálise Numérica e Otimização.\nParticipei deste congresso fazendo uma apresentação sobre\n"},{type:b,tag:P,props:{to:"\u002Fblog\u002F2015-02-25-vii-simposio.pdf"},children:[{type:a,value:"Ferramentas Computacionais para\nPesquisadores"}]},{type:a,value:"\n(ver "},{type:b,tag:f,props:{href:"http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fpres-ferramentas-computacionais",rel:[l,m,n],target:o},children:[{type:a,value:"código"}]},{type:a,value:em}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Nesta apresentação, introduzo algumas ferramentas que considero bastante\nimportantes para pesquisadores, principalmente da área de matemática\ncomputacional.\nUm resumo do que apresento é"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Aprenda outras linguagens. Recomendo, por exemplo, conhecer Python ou Ruby,"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Shell e Makefile. Com essas ferramentas já é possível automatizar testes e\nfazer scripts com uso variado. Makefile, por exemplo, é uma das maneiras\nmais usadas de se instalar programas (no Unix).\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Conheça a linguagem "},{type:b,tag:f,props:{href:aT,rel:[l,m,n],target:o},children:[{type:a,value:O}]},{type:a,value:w}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"É uma linguagem com foco na matemática computacional, considerando ainda que\nvocê irá querer utilizar código em C e Fortran, e com sintaxe parecido com a\nde MatLab\u002FOctave. É uma linguagem nova, mas tem potencial para ser o próximo\nconcorrente do MatLab\u002FOctave, e é livre.\n- Dentro do Julia, conheça o [JuliaOpt](http:\u002F\u002Fwww.juliaopt.org), que é\num grupo que está desenvolvendo ferramentas de otimização em Julia.\nDesde interfaces para softwares conhecidos, até linguagens de modelagem,\npassando por implementações de métodos de otimização não-linear, tanto\npuramente em Julia, quanto utilizando códigos de baixo nível.\n- Também anunciei que estamos trabalhando no\n[CUTEst.jl](http:\u002F\u002Fgithub.com\u002Foptimizers\u002FCUTEst.jl), uma interface para o\n[CUTEst](http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki).\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Escolha um editor e um ambiente de desenvolvimento."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Sugiro ver algumas opções (Vim, Emacs, Atom, Sublime Text, Eclipse), testar,\ne ver qual combina mais com você. Em adição, conheça o Sharelatex e\u002Fou o\nWritelatex.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:es},{type:b,tag:f,props:{href:"http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fperprof-py",rel:[l,m,n],target:o},children:[{type:a,value:et}]},{type:a,value:","}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"que é uma ferramenta para gerar perfis de desempenho, com gráficos de alta\nqualidade.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:es},{type:b,tag:f,props:{href:"http:\u002F\u002Fgit-scm.com",rel:[l,m,n],target:o},children:[{type:a,value:eh}]},{type:a,value:", que é uma ferramenta para controle de"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"versão, que você pode usar sozinho; ou em grupo; fazer ramificações;\nverificar versões anteriores; misturar versões; trabalhar online; dentro\noutras.\n- Conheça o [GitHub](http:\u002F\u002Fgithub.com), que é um site onde você pode\ncolocar o código que foi feito com git.\n- Conheça o [Travis CI](http:\u002F\u002Ftravis-ci.org), que é um serviço que baixa\nseu código do GitHub e roda testes (definidos por você) nele, sempre que\nvocê subir o seu código.\n- Conheça o [Coveralls.io](http:\u002F\u002Fcoveralls.io), que é um serviço que\nverifica seus testes e diz que parte do seu código foi verificado, e qual\nnão foi.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"TikZ e PgfPlots do Latex: Comentei um pouco sobre gráficos usando esses"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"pacotes, e mostrei alguns exemplos.\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Também falei sobre o "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.software-carpentry.org",rel:[l,m,n],target:o},children:[{type:a,value:cu}]},{type:a,value:",\nque é uma organização sem fins lucrativos que realiza workshops e promove\nconhecimento mundialmente. Comentei também sobre o trabalho do\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Frgaiacs.com",rel:[l,m,n],target:o},children:[{type:a,value:"Raniere Silva"}]},{type:a,value:" no Software Carpentry, e do\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fcatarse.me\u002Fpt\u002Fprogramacaocientifica",rel:[l,m,n],target:o},children:[{type:a,value:"trabalho que ele está\npropondo"}]},{type:a,value:" para os próximos meses."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Algumas boas perguntas foram feitas, e gostaria de parafraseá-las e\natualizar minha resposta para algumas delas."}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Por que sair do MatLab para o Julia?"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Recomendo sair do MatLab porque ele é um software proprietário, pra começar.\nMas desconsiderando isso, e também considerando o Octave, dou a seguinte\nresposta: O Julia está sendo desenvolvido com o intuito de substituir o\nMatLab, sabendo que o matemático computacional costuma fazer código que\nprecisa de velocidade em C ou Fortran.\nA interface para C e Fortran em Julia é consideravelmente fácil,\ne isso facilita o processo de criar um código que você vê que funciona, e\nposteriormente otimizá-lo.\nGostaria de acrescentar a ressalva que Julia é uma linguagem nova, e\nobviamente não tem tudo que gostaríamos implementado. Seu código pode\nquebrar. Mas vale a pena conhecer para saber se vale investir.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Por que sair do Python para o Julia?"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Não sei se você deve. O Python básico não é suficiente para um matemático\ncomputacional, mas eu sei que existem vários pacotes que conseguem deixar o\nPython muito eficiente para Análise Numérica e Otimização. Também é possível\nfazer uma transição C com Python, mas não conheço, logo não posso julgar.\nAtualmente, provavelmente, o Python parece ser mais eficiente.\nE já que estamos aqui, se você conseguir tirar alguém do MatLab para o\nPython, já é uma vitória.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"**Por que usar o TikZ\u002FPgfPlots no lugar desta outra ferramenta de"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"gráficos?**\nSe for o MatLab, vide meu _rant_ anterior sobre MatLab ser proprietário.\nPara outras ferramentas, não sei. Muitas ferramentas fazem um trabalho, no\nmínimo, tão bom quanto o TikZ\u002FPgfPlots, e.g., o MatplotLib (que\nusamos no perprof, junto com o PgfPlots).\nUma coisa que eu gosto é misturar com o Beamer, gerando figuras iterativas\n(não interativas).\nEntão, alguns comandos podem ser misturados para fazer uma sequência de\nfiguras que o Beamer vai descobrindo (por exemplo o caminho de um\nalgoritmo).\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"**Se fosse para você escolher apenas uma dessas ferramentas para"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"recomendar, qual seria?**\nSem dúvida o git, que é útil para qualquer área onde você escreve código, ou\naté mesmo um artigo em .tex (ou outros formatos binários de texto).\nVocê nunca sabe quando vai precisar voltar numa versão anterior do código.\nPor exemplo, você faz atualizações no seu código, e alguém diz que estava\nusando o seu código antes, mas depois que essa pessoa atualizou, o código\nparou de funcionar.\nBem, como fazer pra saber o que quebrou o código? Se você está fazendo o\ncontrole corretamente, você terá vários _commits_ indicando o trabalho\nfeito. Você pode navegar nesses commits e descubrir a última versão que\nfuncionava. Assim você reduz consideravelmente a quantidade de código que\npode ter estragado o seu pacote.\nAlém disso, você pode trabalhar com versões paralelas, colaborativamente, e\nainda aproveitar de serviços fantásticos para quem usa git (GitHub, Travis,\nCoveralls).\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"É importante ficar claro que eu não estou apresentado as melhores ferramentas\npara seus respectivos objetivos, apenas aquelas que eu conheço e que podem\nresolver o problema. Talvez alguma ferramenta seja melhor do que a que eu\napresentei, mas o ponto é você conhecer alguma ferramenta, e às vezes conhecer\nalguma nova."}]}]},dir:C,path:"\u002Fblog\u002F2015-02-25-apresentacao-no-vii-simposio-de-analise-numerica-e-otimizacao-ufpr",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Apresentação no VII Simpósio de Análise Numérica e Otimização - UFPR\n\nNo dia 24 de Fevereiro de 2015 aconteceu o (primeiro dia do) VII Simpósio de\nAnálise Numérica e Otimização.\nParticipei deste congresso fazendo uma apresentação sobre\n[Ferramentas Computacionais para\nPesquisadores](\u002Fblog\u002F2015-02-25-vii-simposio.pdf)\n(ver [código](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fpres-ferramentas-computacionais)).\n\nNesta apresentação, introduzo algumas ferramentas que considero bastante\nimportantes para pesquisadores, principalmente da área de matemática\ncomputacional.\nUm resumo do que apresento é\n\n- Aprenda outras linguagens. Recomendo, por exemplo, conhecer Python ou Ruby,\n\n```\nShell e Makefile. Com essas ferramentas já é possível automatizar testes e\nfazer scripts com uso variado. Makefile, por exemplo, é uma das maneiras\nmais usadas de se instalar programas (no Unix).\n```\n\n- Conheça a linguagem [Julia](http:\u002F\u002Fwww.julialang.org).\n\n```\nÉ uma linguagem com foco na matemática computacional, considerando ainda que\nvocê irá querer utilizar código em C e Fortran, e com sintaxe parecido com a\nde MatLab\u002FOctave. É uma linguagem nova, mas tem potencial para ser o próximo\nconcorrente do MatLab\u002FOctave, e é livre.\n- Dentro do Julia, conheça o [JuliaOpt](http:\u002F\u002Fwww.juliaopt.org), que é\num grupo que está desenvolvendo ferramentas de otimização em Julia.\nDesde interfaces para softwares conhecidos, até linguagens de modelagem,\npassando por implementações de métodos de otimização não-linear, tanto\npuramente em Julia, quanto utilizando códigos de baixo nível.\n- Também anunciei que estamos trabalhando no\n[CUTEst.jl](http:\u002F\u002Fgithub.com\u002Foptimizers\u002FCUTEst.jl), uma interface para o\n[CUTEst](http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki).\n```\n\n- Escolha um editor e um ambiente de desenvolvimento.\n\n```\nSugiro ver algumas opções (Vim, Emacs, Atom, Sublime Text, Eclipse), testar,\ne ver qual combina mais com você. Em adição, conheça o Sharelatex e\u002Fou o\nWritelatex.\n```\n\n- Conheça o [perprof-py](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fperprof-py),\n\n```\nque é uma ferramenta para gerar perfis de desempenho, com gráficos de alta\nqualidade.\n```\n\n- Conheça o [git](http:\u002F\u002Fgit-scm.com), que é uma ferramenta para controle de\n\n```\nversão, que você pode usar sozinho; ou em grupo; fazer ramificações;\nverificar versões anteriores; misturar versões; trabalhar online; dentro\noutras.\n- Conheça o [GitHub](http:\u002F\u002Fgithub.com), que é um site onde você pode\ncolocar o código que foi feito com git.\n- Conheça o [Travis CI](http:\u002F\u002Ftravis-ci.org), que é um serviço que baixa\nseu código do GitHub e roda testes (definidos por você) nele, sempre que\nvocê subir o seu código.\n- Conheça o [Coveralls.io](http:\u002F\u002Fcoveralls.io), que é um serviço que\nverifica seus testes e diz que parte do seu código foi verificado, e qual\nnão foi.\n```\n\n- TikZ e PgfPlots do Latex: Comentei um pouco sobre gráficos usando esses\n\n```\npacotes, e mostrei alguns exemplos.\n```\n\nTambém falei sobre o [Software Carpentry](http:\u002F\u002Fwww.software-carpentry.org),\nque é uma organização sem fins lucrativos que realiza workshops e promove\nconhecimento mundialmente. Comentei também sobre o trabalho do\n[Raniere Silva](http:\u002F\u002Frgaiacs.com) no Software Carpentry, e do\n[trabalho que ele está\npropondo](http:\u002F\u002Fcatarse.me\u002Fpt\u002Fprogramacaocientifica) para os próximos meses.\n\nAlgumas boas perguntas foram feitas, e gostaria de parafraseá-las e\natualizar minha resposta para algumas delas.\n\n- **Por que sair do MatLab para o Julia?**\n\n```\nRecomendo sair do MatLab porque ele é um software proprietário, pra começar.\nMas desconsiderando isso, e também considerando o Octave, dou a seguinte\nresposta: O Julia está sendo desenvolvido com o intuito de substituir o\nMatLab, sabendo que o matemático computacional costuma fazer código que\nprecisa de velocidade em C ou Fortran.\nA interface para C e Fortran em Julia é consideravelmente fácil,\ne isso facilita o processo de criar um código que você vê que funciona, e\nposteriormente otimizá-lo.\nGostaria de acrescentar a ressalva que Julia é uma linguagem nova, e\nobviamente não tem tudo que gostaríamos implementado. Seu código pode\nquebrar. Mas vale a pena conhecer para saber se vale investir.\n```\n\n- **Por que sair do Python para o Julia?**\n\n```\nNão sei se você deve. O Python básico não é suficiente para um matemático\ncomputacional, mas eu sei que existem vários pacotes que conseguem deixar o\nPython muito eficiente para Análise Numérica e Otimização. Também é possível\nfazer uma transição C com Python, mas não conheço, logo não posso julgar.\nAtualmente, provavelmente, o Python parece ser mais eficiente.\nE já que estamos aqui, se você conseguir tirar alguém do MatLab para o\nPython, já é uma vitória.\n```\n\n- \\*\\*Por que usar o TikZ\u002FPgfPlots no lugar desta outra ferramenta de\n\n```\ngráficos?**\nSe for o MatLab, vide meu _rant_ anterior sobre MatLab ser proprietário.\nPara outras ferramentas, não sei. Muitas ferramentas fazem um trabalho, no\nmínimo, tão bom quanto o TikZ\u002FPgfPlots, e.g., o MatplotLib (que\nusamos no perprof, junto com o PgfPlots).\nUma coisa que eu gosto é misturar com o Beamer, gerando figuras iterativas\n(não interativas).\nEntão, alguns comandos podem ser misturados para fazer uma sequência de\nfiguras que o Beamer vai descobrindo (por exemplo o caminho de um\nalgoritmo).\n```\n\n- \\*\\*Se fosse para você escolher apenas uma dessas ferramentas para\n\n```\nrecomendar, qual seria?**\nSem dúvida o git, que é útil para qualquer área onde você escreve código, ou\naté mesmo um artigo em .tex (ou outros formatos binários de texto).\nVocê nunca sabe quando vai precisar voltar numa versão anterior do código.\nPor exemplo, você faz atualizações no seu código, e alguém diz que estava\nusando o seu código antes, mas depois que essa pessoa atualizou, o código\nparou de funcionar.\nBem, como fazer pra saber o que quebrou o código? Se você está fazendo o\ncontrole corretamente, você terá vários _commits_ indicando o trabalho\nfeito. Você pode navegar nesses commits e descubrir a última versão que\nfuncionava. Assim você reduz consideravelmente a quantidade de código que\npode ter estragado o seu pacote.\nAlém disso, você pode trabalhar com versões paralelas, colaborativamente, e\nainda aproveitar de serviços fantásticos para quem usa git (GitHub, Travis,\nCoveralls).\n```\n\nÉ importante ficar claro que eu não estou apresentado as melhores ferramentas\npara seus respectivos objetivos, apenas aquelas que eu conheço e que podem\nresolver o problema. Talvez alguma ferramenta seja melhor do que a que eu\napresentei, mas o ponto é você conhecer alguma ferramenta, e às vezes conhecer\nalguma nova.\n"},{slug:"2015-02-06-cutestjl",title:ac,date:"2015-02-06",tags:[_,H],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"cutestjl"},children:[{type:b,tag:f,props:{href:"#cutestjl",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:ac}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"About an year ago,\n"},{type:b,tag:f,props:{href:ek,rel:[l,m,n],target:o},children:[{type:a,value:"Raniere"}]},{type:a,value:"\nstarted working on a interface for\n"},{type:b,tag:f,props:{href:eu,rel:[l,m,n],target:o},children:[{type:a,value:ec}]},{type:a,value:".\nHe decided to create "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Flpoo\u002Fugly",rel:[l,m,n],target:o},children:[{type:a,value:"ugly"}]},{type:a,value:",\na repository for CUTEst, but following the Unix procedure for\nbuilding packages ("},{type:b,tag:e,props:{},children:[{type:a,value:".\u002Fconfigure, make, make install"}]},{type:a,value:").\nAlso with ugly, he wanted to enable building a shared library\nto be used with Julia.\nThis approach worked, but maintaining it is troublesome,\nsince it would require updating and testing of ugly for every\nupdate of CUTEst."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"What I decided to do was find a way to create a shared library\nfrom a working CUTEst installation.\nThis focuses on another principle: passing the blame, er,\nI mean, modularity.\nMy package would simply take a working CUTEst and make a\nworking shared library from it.\nIt also served of downloading and installing a new CUTEst\ninstallation, since this would be required for testing.\nThe work can be found at\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fcutest-julia-installer",rel:[l,m,n],target:o},children:[{type:a,value:"cutest-julia-installer"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The second thing Raniere worked was the interface itself,\nwhich is a module\u002Fpackage for Julia that enables\nbuilding a problem from its name,\nretrieving its parameters,\nand using its mathematical functions\n(objective function, gradient, Hessian, constraints,\nJacobian, and so on).\nI continued this work, changing the way the problem is built\n(to use my shared library),\nand translating the core functions to Julia.\nWith these additions, the usual functions on CUTEst can be\ncalled with little change in Julia."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The next step is to facilitate the use of CUTEst functions\nby creating higher-level interfaces.\nSo, instead of manually verifying if problem is\nconstrained or not, and then calling\n"},{type:b,tag:e,props:{},children:[{type:a,value:"cfn(st, n, m, x, f, c)"}]},{type:a,value:ck},{type:b,tag:e,props:{},children:[{type:a,value:"ufn(st, n, x, f)"}]},{type:a,value:",\nto get the objective function value,\none might simply call\n"},{type:b,tag:e,props:{},children:[{type:a,value:"f = obj_fun(prob, x)"}]},{type:a,value:".\nThis should probably be slower,\nif the user, for instance, ends up calling two functions\ninstead of one, but if it increases development time,\nthen it has server its purpose."}]}]},dir:C,path:"\u002Fblog\u002F2015-02-06-cutestjl",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# CUTEst.jl\n\nAbout an year ago,\n[Raniere](http:\u002F\u002Frgaiacs.com\u002F)\nstarted working on a interface for\n[CUTEst](http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki\u002F).\nHe decided to create [ugly](https:\u002F\u002Fgithub.com\u002Flpoo\u002Fugly),\na repository for CUTEst, but following the Unix procedure for\nbuilding packages (`.\u002Fconfigure, make, make install`).\nAlso with ugly, he wanted to enable building a shared library\nto be used with Julia.\nThis approach worked, but maintaining it is troublesome,\nsince it would require updating and testing of ugly for every\nupdate of CUTEst.\n\nWhat I decided to do was find a way to create a shared library\nfrom a working CUTEst installation.\nThis focuses on another principle: passing the blame, er,\nI mean, modularity.\nMy package would simply take a working CUTEst and make a\nworking shared library from it.\nIt also served of downloading and installing a new CUTEst\ninstallation, since this would be required for testing.\nThe work can be found at\n[cutest-julia-installer](http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fcutest-julia-installer).\n\nThe second thing Raniere worked was the interface itself,\nwhich is a module\u002Fpackage for Julia that enables\nbuilding a problem from its name,\nretrieving its parameters,\nand using its mathematical functions\n(objective function, gradient, Hessian, constraints,\nJacobian, and so on).\nI continued this work, changing the way the problem is built\n(to use my shared library),\nand translating the core functions to Julia.\nWith these additions, the usual functions on CUTEst can be\ncalled with little change in Julia.\n\nThe next step is to facilitate the use of CUTEst functions\nby creating higher-level interfaces.\nSo, instead of manually verifying if problem is\nconstrained or not, and then calling\n`cfn(st, n, m, x, f, c)` or `ufn(st, n, x, f)`,\nto get the objective function value,\none might simply call\n`f = obj_fun(prob, x)`.\nThis should probably be slower,\nif the user, for instance, ends up calling two functions\ninstead of one, but if it increases development time,\nthen it has server its purpose.\n"},{slug:"2015-01-22-a-study-in-julia",title:ev,date:"2015-01-22",tags:[H,K,aG,ew],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"a-study-in-julia"},children:[{type:b,tag:f,props:{href:"#a-study-in-julia",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:ev}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Today I begin a study in "},{type:b,tag:f,props:{href:cW,rel:[l,m,n],target:o},children:[{type:a,value:O}]},{type:a,value:".\nThis fantastic tool has syntax similar to that of Octave\u002FMatlab,\nbut is much faster. Furthermore, the interface with functions\nmade in C and Fortran is much easier to accomplish, and since\nmost things in computational mathematics are on these languages,\nthis feature is wonderful."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"My intented work is"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"make a simple julia and C interface, with auto-compiling"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"and test on GitHub and Travis CI;\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"develop a nonlinear optimization tool completely in Julia,"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"then improve the slow bits by using C and\u002For Fortran;\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"implement\u002Fimprove the CUTEst interface"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"[[1]](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fugly),\n[[2]](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FCUTEst.jl),\npossibly creating a SIF converter.\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"if things work out, submit to "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.juliaopt.org\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"JuliaOpt"}]},{type:a,value:w}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"My work starts with the "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fjulia-c-sample.git",rel:[l,m,n],target:o},children:[{type:a,value:"Julia-C\nSamples"}]},{type:a,value:".\nIf you need me, I might be on "},{type:b,tag:e,props:{},children:[{type:a,value:cM}]},{type:a,value:" on IRC\u002Ffreenode."}]}]},dir:C,path:"\u002Fblog\u002F2015-01-22-a-study-in-julia",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# A Study in Julia\n\nToday I begin a study in [Julia](http:\u002F\u002Fjulialang.org\u002F).\nThis fantastic tool has syntax similar to that of Octave\u002FMatlab,\nbut is much faster. Furthermore, the interface with functions\nmade in C and Fortran is much easier to accomplish, and since\nmost things in computational mathematics are on these languages,\nthis feature is wonderful.\n\nMy intented work is\n\n- make a simple julia and C interface, with auto-compiling\n\n```\nand test on GitHub and Travis CI;\n```\n\n- develop a nonlinear optimization tool completely in Julia,\n\n```\nthen improve the slow bits by using C and\u002For Fortran;\n```\n\n- implement\u002Fimprove the CUTEst interface\n\n```\n[[1]](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fugly),\n[[2]](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002FCUTEst.jl),\npossibly creating a SIF converter.\n```\n\n- if things work out, submit to [JuliaOpt](http:\u002F\u002Fwww.juliaopt.org\u002F).\n\nMy work starts with the [Julia-C\nSamples](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fjulia-c-sample.git).\nIf you need me, I might be on `#julia` on IRC\u002Ffreenode.\n"},{slug:"2015-01-16-selecting-a-subgroup-of-cutest-problems-according-to-specific-criteria",title:ex,date:"2015-01-16",tags:[_,"classification"],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"selecting-a-subgroup-of-cutest-problems-according-to-specific-criteria"},children:[{type:b,tag:f,props:{href:"#selecting-a-subgroup-of-cutest-problems-according-to-specific-criteria",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:ex}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For some time now I've been using CUTEst or CUTEr,\nand one of the common problems is selecting the problem you\nwant to use."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Unfortunately, the classification on the site is not updated,\nand may contain errors, so I decided to create something,\nwith low requirements and high reliability, to select problems\naccording to a criteria."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:f,props:{href:ey,rel:[l,m,n],target:o},children:[{type:a,value:"This work"}]},{type:a,value:"\nwas created before, but used the site's classification as one\nof the sources of information for the selection.\nNow, I started from scratch, using Python, printing in JSON,\nand running only "},{type:b,tag:e,props:{},children:[{type:a,value:ez}]},{type:a,value:", and only when needed."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"We mantain a JSON file with all information that can be obtained\nrunning "},{type:b,tag:e,props:{},children:[{type:a,value:ez}]},{type:a,value:" (please correct me if I'm wrong).\nThis file only need to be updated when the SIF problems are updated."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Currently, I returned to this problem because a colleague needed\nunconstrained problems such that the objective function is a sum of\nsquares, and all variables are free.\nAccording to the classification, the two first letters needed to be\nSU, and problems "},{type:b,tag:e,props:{},children:[{type:a,value:"BARD"}]},{type:a,value:L},{type:b,tag:e,props:{},children:[{type:a,value:eA}]},{type:a,value:" satisfied this condition.\nHowever, problem "},{type:b,tag:e,props:{},children:[{type:a,value:eA}]},{type:a,value:" is classified as SU, but it is not.\nIt is actually a problem with objective function 0 (or no objective\nfunction), and with equality contraints only.\nBoth these forms are different formulations for the Nonlinear Least Squares\nproblem, but the CUTEst approach to it is very different, because\nwhen they are a sum of squared function norms, we cannot obtain individual\nfunction values and gradient, whereas in the other formulation,\nthere is already a function to access the individual constraints and gradients."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Hence, we needed to select all problems with no defined objective function,\nwith equality constraints, and only free variables.\nThe current implemented version of\n"},{type:b,tag:f,props:{href:ey,rel:[l,m,n],target:o},children:[{type:a,value:"my scripts"}]},{type:a,value:"\nreflect this need.\nSo, if you need a different criteria met, you will need to hardcode it\nusing python. This is expected to change soon, if time permits,\nto respond to command line arguments and\u002For user defined configurations\nfiles."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If you are interested in working in this problems,\nyou can directly access the link above, work and make a pull request,\nor e-mail me so we can work out the details of that I expected to make."}]}]},dir:C,path:"\u002Fblog\u002F2015-01-16-selecting-a-subgroup-of-cutest-problems-according-to-specific-criteria",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Selecting a Subgroup of CUTEst Problems According to Specific Criteria\n\nFor some time now I've been using CUTEst or CUTEr,\nand one of the common problems is selecting the problem you\nwant to use.\n\nUnfortunately, the classification on the site is not updated,\nand may contain errors, so I decided to create something,\nwith low requirements and high reliability, to select problems\naccording to a criteria.\n\n[This work](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fcute-problem-chooser)\nwas created before, but used the site's classification as one\nof the sources of information for the selection.\nNow, I started from scratch, using Python, printing in JSON,\nand running only `sifdecode`, and only when needed.\n\nWe mantain a JSON file with all information that can be obtained\nrunning `sifdecode` (please correct me if I'm wrong).\nThis file only need to be updated when the SIF problems are updated.\n\nCurrently, I returned to this problem because a colleague needed\nunconstrained problems such that the objective function is a sum of\nsquares, and all variables are free.\nAccording to the classification, the two first letters needed to be\nSU, and problems `BARD` and `ARGLALE` satisfied this condition.\nHowever, problem `ARGLALE` is classified as SU, but it is not.\nIt is actually a problem with objective function 0 (or no objective\nfunction), and with equality contraints only.\nBoth these forms are different formulations for the Nonlinear Least Squares\nproblem, but the CUTEst approach to it is very different, because\nwhen they are a sum of squared function norms, we cannot obtain individual\nfunction values and gradient, whereas in the other formulation,\nthere is already a function to access the individual constraints and gradients.\n\nHence, we needed to select all problems with no defined objective function,\nwith equality constraints, and only free variables.\nThe current implemented version of\n[my scripts](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fcute-problem-chooser)\nreflect this need.\nSo, if you need a different criteria met, you will need to hardcode it\nusing python. This is expected to change soon, if time permits,\nto respond to command line arguments and\u002For user defined configurations\nfiles.\n\nIf you are interested in working in this problems,\nyou can directly access the link above, work and make a pull request,\nor e-mail me so we can work out the details of that I expected to make.\n"},{slug:"2015-01-12-instalando-o-ubuntu-1410-no-sony-vaio",title:eB,date:"2015-01-12",tags:[ax,c_,K,aR],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"instalando-o-ubuntu-1410-no-sony-vaio-problemas-com-o-ssd"},children:[{type:b,tag:f,props:{href:"#instalando-o-ubuntu-1410-no-sony-vaio-problemas-com-o-ssd",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eB}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Hoje instalei em dual-boot o Ubuntu 14.10 e o windows 8.\nNão tive problemas com o UEFI, nem secure boot.\nNão tenho certeza, mas talvez o windows não seja o que veio\nde fábrica."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Eu já tinha um USB com o Ubuntu 14.10, então pluguei-o\ne bootei o computador.\nF12-F12-F12-F12... A tela de seleção de boot não apareceu,\nmas o usb foi escolhido automaticamente."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O ubuntu bootou e selecionei instalar.\nEscolhi o particionamento manual,\nque é minha escolha usual.\nNormalmente faço o particionamento manual,\nporque não gosto quando eles criam (criavam, não sei\nse continuam) apenas o "},{type:b,tag:e,props:{},children:[{type:a,value:Q}]},{type:a,value:" e o "},{type:b,tag:e,props:{},children:[{type:a,value:eC}]},{type:a,value:".\nO windows estava instalado em duas partições num SSD.\nSelecionei a correspondente, redimensionei, criei 3 partições lógicas\n("},{type:b,tag:e,props:{},children:[{type:a,value:Q}]},{type:a,value:N},{type:b,tag:e,props:{},children:[{type:a,value:eC}]},{type:a,value:", e "},{type:b,tag:e,props:{},children:[{type:a,value:aU}]},{type:a,value:"), e mandei instalar.\nA instalação não teve problemas. Aí eu bootei e deu erro."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O primeiro erro que apareceu foi"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"tpm_tis: A TPM error (6) occurred attempting to read a pcr value\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Que depois descobri que era proveniente do\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FTPM",rel:[l,m,n],target:o},children:[{type:a,value:"Trusted Platform Module"}]},{type:a,value:".\nDepois de pouca busca, descobri que bastava entrar na BIOS e habilitar o\nTPM. A saber, para entrar na BIOS no Sony Vaio, desligue o computador e\naperte o botão ASSIST.\nHabilitei o TPM, mas não sei o que ele faz na prática. No entanto,\naparentemente, o computador continuou funcionando normalmente."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O segundo erro que apareceu, que já aparecia junto com o primeiro, mas\nque só olhei depois, foi algo na linha de"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"[ 9.115544] ata9: exception Emask 0x0 SAct 0xf SErr 0x0 action 0x10 frozen\n[ 9.115550] ata9.00: failed command: READ FPDMA QUEUED\n[ 9.115556] ata9.00: cmd 60\u002F04:00:d4:82:85\u002F00:00:1f:00:00\u002F40 tag 0 ncq 2048 in\n[ 9.115557] res 40\u002F00:18:d3:82:85\u002F00:00:1f:00:00\u002F40 Emask 0x4 (timeout)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Após alguma busca descobri ser um erro de Native Command Queueing com SSDs.\nA solução\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fsteffankarger.nl\u002F2013\u002F12\u002F10\u002Fubuntu-13-10-on-the-sony-vaio-pro-13\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"[1]"}]},{type:a,value:c},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.howtoeverything.net\u002Flinux\u002Fhardware\u002Fubuntu-freeze-issue-after-ssd-upgrade",rel:[l,m,n],target:o},children:[{type:a,value:"[2]"}]},{type:a,value:c},{type:b,tag:f,props:{href:"https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FSolid_State_Drives#Resolving_NCQ_Errors",rel:[l,m,n],target:o},children:[{type:a,value:"[3]"}]},{type:a,value:"\nfoi adicionar "},{type:b,tag:e,props:{},children:[{type:a,value:eD}]},{type:a,value:" na configuração do grub.\nPara isso, resumindo a referência, boot no live,\nmonte o "},{type:b,tag:e,props:{},children:[{type:a,value:Q}]},{type:a,value:" com bind pro "},{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fdev"}]},{type:a,value:N},{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fsys"}]},{type:a,value:X},{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fproc"}]},{type:a,value:", e se tiver separado, o "},{type:b,tag:e,props:{},children:[{type:a,value:aV}]},{type:a,value:"\ntambém. Os comandos a seguir fazem isso, supondo "},{type:b,tag:e,props:{},children:[{type:a,value:Q}]},{type:a,value:" instalado no "},{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fdev\u002Fsda5"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ sudo mount \u002Fdev\u002Fsda5 \u002Fmnt\n$ sudo mount --bind \u002Fdev \u002Fmnt\u002Fdev\n$ sudo mount --bind \u002Fsys \u002Fmnt\u002Fsys\n$ sudo mount --bind \u002Fproc \u002Fmnt\u002Fproc\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Daí, entre nesse sistema com"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ sudo chroot \u002Fmnt\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"No sistema novo, edite o arquivo "},{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fetc\u002Fdefault\u002Fgrub"}]},{type:a,value:", modificando a linha"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash\"\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"para"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash libata.force=noncq\"\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"e atualize o grub com"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ sudo update-grub\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Saia e desmonte as partições"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ exit\n$ sudo umount -R \u002Fmnt\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Por fim é só reiniciar e ver se funcionou."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Agora, a parte divertida dessa instalação, que durou quase 3 horas (!) foi em\nalgum lugar eu li, ou achei ter lido "},{type:b,tag:e,props:{},children:[{type:a,value:"libdata"}]},{type:a,value:" no lugar de "},{type:b,tag:e,props:{},children:[{type:a,value:eE}]},{type:a,value:", e pareceu\nque essa solução não resolveu. E isso não é o pior, eu cheguei a buscar\n"},{type:b,tag:e,props:{},children:[{type:a,value:"libdata.force=noncq"}]},{type:a,value:", o google me corrigiu pra "},{type:b,tag:e,props:{},children:[{type:a,value:eD}]},{type:a,value:", e eu\ncheguei a ler depois o "},{type:b,tag:e,props:{},children:[{type:a,value:eE}]},{type:a,value:" e achei que era outra opção."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Mas tirando isso, instalações sem problema."}]}]},dir:C,path:"\u002Fblog\u002F2015-01-12-instalando-o-ubuntu-1410-no-sony-vaio",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Instalando o Ubuntu 14.10 no Sony Vaio (Problemas com o SSD)\n\nHoje instalei em dual-boot o Ubuntu 14.10 e o windows 8.\nNão tive problemas com o UEFI, nem secure boot.\nNão tenho certeza, mas talvez o windows não seja o que veio\nde fábrica.\n\nEu já tinha um USB com o Ubuntu 14.10, então pluguei-o\ne bootei o computador.\nF12-F12-F12-F12... A tela de seleção de boot não apareceu,\nmas o usb foi escolhido automaticamente.\n\nO ubuntu bootou e selecionei instalar.\nEscolhi o particionamento manual,\nque é minha escolha usual.\nNormalmente faço o particionamento manual,\nporque não gosto quando eles criam (criavam, não sei\nse continuam) apenas o `\u002F` e o `swap`.\nO windows estava instalado em duas partições num SSD.\nSelecionei a correspondente, redimensionei, criei 3 partições lógicas\n(`\u002F`, `swap`, e `\u002Fhome`), e mandei instalar.\nA instalação não teve problemas. Aí eu bootei e deu erro.\n\nO primeiro erro que apareceu foi\n\n```\ntpm_tis: A TPM error (6) occurred attempting to read a pcr value\n```\n\nQue depois descobri que era proveniente do\n[Trusted Platform Module](https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FTPM).\nDepois de pouca busca, descobri que bastava entrar na BIOS e habilitar o\nTPM. A saber, para entrar na BIOS no Sony Vaio, desligue o computador e\naperte o botão ASSIST.\nHabilitei o TPM, mas não sei o que ele faz na prática. No entanto,\naparentemente, o computador continuou funcionando normalmente.\n\nO segundo erro que apareceu, que já aparecia junto com o primeiro, mas\nque só olhei depois, foi algo na linha de\n\n```\n[ 9.115544] ata9: exception Emask 0x0 SAct 0xf SErr 0x0 action 0x10 frozen\n[ 9.115550] ata9.00: failed command: READ FPDMA QUEUED\n[ 9.115556] ata9.00: cmd 60\u002F04:00:d4:82:85\u002F00:00:1f:00:00\u002F40 tag 0 ncq 2048 in\n[ 9.115557] res 40\u002F00:18:d3:82:85\u002F00:00:1f:00:00\u002F40 Emask 0x4 (timeout)\n```\n\nApós alguma busca descobri ser um erro de Native Command Queueing com SSDs.\nA solução\n[[1]](http:\u002F\u002Fsteffankarger.nl\u002F2013\u002F12\u002F10\u002Fubuntu-13-10-on-the-sony-vaio-pro-13\u002F)\n[[2]](http:\u002F\u002Fwww.howtoeverything.net\u002Flinux\u002Fhardware\u002Fubuntu-freeze-issue-after-ssd-upgrade)\n[[3]](https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FSolid_State_Drives#Resolving_NCQ_Errors)\nfoi adicionar `libata.force=noncq` na configuração do grub.\nPara isso, resumindo a referência, boot no live,\nmonte o `\u002F` com bind pro `\u002Fdev`, `\u002Fsys` e `\u002Fproc`, e se tiver separado, o `\u002Fboot`\ntambém. Os comandos a seguir fazem isso, supondo `\u002F` instalado no `\u002Fdev\u002Fsda5`.\n\n```\n$ sudo mount \u002Fdev\u002Fsda5 \u002Fmnt\n$ sudo mount --bind \u002Fdev \u002Fmnt\u002Fdev\n$ sudo mount --bind \u002Fsys \u002Fmnt\u002Fsys\n$ sudo mount --bind \u002Fproc \u002Fmnt\u002Fproc\n```\n\nDaí, entre nesse sistema com\n\n```\n$ sudo chroot \u002Fmnt\n```\n\nNo sistema novo, edite o arquivo `\u002Fetc\u002Fdefault\u002Fgrub`, modificando a linha\n\n```\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash\"\n```\n\npara\n\n```\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash libata.force=noncq\"\n```\n\ne atualize o grub com\n\n```\n$ sudo update-grub\n```\n\nSaia e desmonte as partições\n\n```\n$ exit\n$ sudo umount -R \u002Fmnt\n```\n\nPor fim é só reiniciar e ver se funcionou.\n\nAgora, a parte divertida dessa instalação, que durou quase 3 horas (!) foi em\nalgum lugar eu li, ou achei ter lido `libdata` no lugar de `libata`, e pareceu\nque essa solução não resolveu. E isso não é o pior, eu cheguei a buscar\n`libdata.force=noncq`, o google me corrigiu pra `libata.force=noncq`, e eu\ncheguei a ler depois o `libata` e achei que era outra opção.\n\nMas tirando isso, instalações sem problema.\n"},{slug:"2015-01-08-cutest-com-matlab",title:eF,date:"2015-01-08",tags:[_,"matlab",ax],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"cutest-com-matlab"},children:[{type:b,tag:f,props:{href:"#cutest-com-matlab",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eF}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"No meu "},{type:b,tag:f,props:{href:"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=pM7FmOXHyns",rel:[l,m,n],target:o},children:[{type:a,value:"vídeo do YouTube"}]},{type:a,value:",\neu ensinei como se faz para instalar o CUTEst. Hoje estendo a instalação\npara instalar o MatLab também, mas para uma instalação mais detalhada,\ntalvez o vídeo seja mais indicado."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Inicialmente instale o Matlab. Não vou entrar em detalhes, mas atente-se a duas\ncoisas:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Algumas versões do matlab não colocam o executável num lugar \"visível pelo"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"terminal\".\nPara resolver, usando o bash, adicione o caminho dos executáveis do MATLAB\nao PATH no arquivo `~\u002F.bashrc`.\nPor exemplo, adicionando\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"PATH=\u002Fusr\u002Flocal\u002FMATLAB\u002FR20XXc\u002Fbin:$PATH\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"Você vai precisar do "},{type:b,tag:e,props:{},children:[{type:a,value:eG}]},{type:a,value:" (um link para ele é suficiente) no \u002Fbin."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Para resolver, pode fazer um link a partir do caminho original\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ sudo ln -s \u002Fusr\u002Flocal\u002FMATLAB\u002FR20XXc\u002Fbin\u002Fmex \u002Fbin\u002F\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Depois de instalado o Matlab,\nvamos instalar o CUTEst. Você precisará do "},{type:b,tag:e,props:{},children:[{type:a,value:"subversion"}]},{type:a,value:" instalado (que\ndisponibiliza o comando "},{type:b,tag:e,props:{},children:[{type:a,value:"svn"}]},{type:a,value:"), e do compilador de fortran.\n"},{type:b,tag:v,props:{},children:[{type:a,value:"A versão do compilador de fortran depende da versão do Matlab."}]}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:"table",props:{},children:[{type:b,tag:"thead",props:{},children:[{type:b,tag:ay,props:{},children:[{type:b,tag:eH,props:{align:R},children:[{type:a,value:"Versão do Matlab"}]},{type:b,tag:eH,props:{align:R},children:[{type:a,value:"Versão do compilador"}]}]}]},{type:b,tag:"tbody",props:{},children:[{type:b,tag:ay,props:{},children:[{type:b,tag:aa,props:{align:R},children:[{type:a,value:"Antes do R2011a"}]},{type:b,tag:aa,props:{align:R},children:[{type:a,value:"g95"}]}]},{type:b,tag:ay,props:{},children:[{type:b,tag:aa,props:{align:R},children:[{type:a,value:"R2011a - R2013a"}]},{type:b,tag:aa,props:{align:R},children:[{type:a,value:"gfortran-4.4"}]}]},{type:b,tag:ay,props:{},children:[{type:b,tag:aa,props:{align:R},children:[{type:a,value:"R2013b ou mais novo"}]},{type:b,tag:aa,props:{align:R},children:[{type:a,value:"gfortran-4.7"}]}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Crie ou escolha uma pasta para as biblioteca do cutest.\nA nossa será "},{type:b,tag:e,props:{},children:[{type:a,value:"$HOME\u002Flibraries"}]},{type:a,value:".\nNessa pasta baixe os repositórios CUTEst usando o subversion.\nSiga os passos da "},{type:b,tag:f,props:{href:eu,rel:[l,m,n],target:o},children:[{type:a,value:"wiki\noficial"}]},{type:a,value:",\nou copie os comandos abaixo para um arquivo "},{type:b,tag:e,props:{},children:[{type:a,value:"baixacutest.sh"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"#!\u002Fbin\u002Fbash\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cmd=\"svn checkout -q --username anonymous --password \"\" --non-interactive --no-auth-cache\"\nurl=\"http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fsvn\u002Fcutest\u002F\"\nfor name in archdefs sifdecode cutest sif\ndo\necho \"Downloading $name\"\n$cmd $url\u002F$name\u002Ftrunk .\u002F$name\ndone\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Para executar esse arquivo, rode os comandos"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ chmod a+x baixacutest.sh\n$ .\u002Fbaixacutest.sh\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Entre na pasta "},{type:b,tag:e,props:{},children:[{type:a,value:"$HOME\u002Flibraries\u002Farchdefs"}]},{type:a,value:" e rode o comando\n"},{type:b,tag:e,props:{},children:[{type:a,value:"install_optsuite"}]},{type:a,value:".\nResponda as perguntas para instalar o CUTEst e sua família."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Depois da instalação, o CUTEst soltará várias informações que\nvocê deve guardar no seu "},{type:b,tag:e,props:{},children:[{type:a,value:"$HOME\u002F.bashrc"}]},{type:a,value:". As minhas\ninformações estão abaixo. Você pode modificar para corresponder\nà sua configuração."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"LIBS=$HOME\u002Flibraries\nexport ARCHDEFS=\"$LIBS\u002Farchdefs\"\nexport SIFDECODE=\"$LIBS\u002Fsifdecode\"\nexport CUTEST=\"$LIBS\u002Fcutest\"\nexport MASTSIF=\"$LIBS\u002Fsif\"\nexport PATH=\"$CUTEST\u002Fbin:$SIFDECODE\u002Fbin:$PATH\"\nexport MANPATH=\"$CUTEST\u002Fman:$SIFDECODE\u002Fman:$MANPATH\"\nexport MYARCH=\"pc64.lnx.gfo\"\nexport MYMATLABARCH=\"pc64.lnx.gfo\"\nexport MYMATLAB=\"\u002Fusr\u002Flocal\u002FMATLAB\u002FRXXXX\u002F\"\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Para fazer o Matlab funcionar com o CUTEst, você decodifica o arquivo "},{type:b,tag:e,props:{},children:[{type:a,value:"SIF"}]},{type:a,value:"\npara o format "},{type:b,tag:e,props:{},children:[{type:a,value:eG}]},{type:a,value:" do matlab. Daí, você tem que abrir o Matlab naquela pasta,\nou inserir o path dessa pasta.\nAí você usa os comandos do cutest para acessar as propriedades do problema.\nO primeiro comando que você vai usar é o"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"prob = cutest_setup()\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Para acessar a função objetivo, você pode usar"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"f = cutest_obj(x)\n[f,g] = cutest_obj(x) % já retorna o gradiente também\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Para acessar o gradiente, você pode usar"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"g = cutest_grad(x)\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Além disso, existem outras funções que você pode usar.\nA lista está no apêndice B do\nTechnical Report do CUTEst."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Para testar sua instação, você pode copiar o programinha a seguir,\nque tenta encontrar o minimizador de uma função através do método\nde máxima descida."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"function [x,fx,k] = steep(x, f, g)\n\nkmax = 1e4;\nalpha = 0.5;\neps = 1e-4;\n\nfx = f(x);\ngx = g(x);\n\nk = 1;\nwhile norm(gx) \u003E eps\n  t = 1;\n  while f(x-t*gx) \u003E fx - alpha*t*dot(gx,gx)\n    t = t*0.9;\n  end\n  x = x - t*gx;\n  fx = f(x);\n  gx = g(x);\n  k = k + 1;\n  if k \u003E kmax\n    return\n  end\nend\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Copie esse conteúdo para um arquivo "},{type:b,tag:e,props:{},children:[{type:a,value:"steep.m"}]},{type:a,value:", e abra o Matlab.\nNo terminal, vá até a pasta em que está esse arquivo e rode:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"$ cutest2matlab BARD\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"No matlab, vá até a pasta que está esse arquivo e rode"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"prob = cutest_prob();\n[sol, fx, k] = steep(prob.x, @(x) cutest_obj(x), @(x) cutest_grad(x))\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A solução do problema deve ser perto de "},{type:b,tag:e,props:{},children:[{type:a,value:"(0.08,1.14,2.33)"}]},{type:a,value:X},{type:b,tag:e,props:{},children:[{type:a,value:"f = 0.0082"}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2015-01-08-cutest-com-matlab",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# CUTEst Com Matlab\n\nNo meu [vídeo do YouTube](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=pM7FmOXHyns),\neu ensinei como se faz para instalar o CUTEst. Hoje estendo a instalação\npara instalar o MatLab também, mas para uma instalação mais detalhada,\ntalvez o vídeo seja mais indicado.\n\nInicialmente instale o Matlab. Não vou entrar em detalhes, mas atente-se a duas\ncoisas:\n\n- Algumas versões do matlab não colocam o executável num lugar \"visível pelo\n\n```\nterminal\".\nPara resolver, usando o bash, adicione o caminho dos executáveis do MATLAB\nao PATH no arquivo `~\u002F.bashrc`.\nPor exemplo, adicionando\n```\n\n```\nPATH=\u002Fusr\u002Flocal\u002FMATLAB\u002FR20XXc\u002Fbin:$PATH\n```\n\n- Você vai precisar do `mex` (um link para ele é suficiente) no \u002Fbin.\n\n```\nPara resolver, pode fazer um link a partir do caminho original\n```\n\n```\n$ sudo ln -s \u002Fusr\u002Flocal\u002FMATLAB\u002FR20XXc\u002Fbin\u002Fmex \u002Fbin\u002F\n```\n\nDepois de instalado o Matlab,\nvamos instalar o CUTEst. Você precisará do `subversion` instalado (que\ndisponibiliza o comando `svn`), e do compilador de fortran.\n**A versão do compilador de fortran depende da versão do Matlab.**\n\n|  Versão do Matlab   | Versão do compilador |\n| :-----------------: | :------------------: |\n|   Antes do R2011a   |         g95          |\n|   R2011a - R2013a   |     gfortran-4.4     |\n| R2013b ou mais novo |     gfortran-4.7     |\n\nCrie ou escolha uma pasta para as biblioteca do cutest.\nA nossa será `$HOME\u002Flibraries`.\nNessa pasta baixe os repositórios CUTEst usando o subversion.\nSiga os passos da [wiki\noficial](http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki\u002F),\nou copie os comandos abaixo para um arquivo `baixacutest.sh`.\n\n```\n#!\u002Fbin\u002Fbash\n```\n\n```\ncmd=\"svn checkout -q --username anonymous --password \"\" --non-interactive --no-auth-cache\"\nurl=\"http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fsvn\u002Fcutest\u002F\"\nfor name in archdefs sifdecode cutest sif\ndo\necho \"Downloading $name\"\n$cmd $url\u002F$name\u002Ftrunk .\u002F$name\ndone\n```\n\nPara executar esse arquivo, rode os comandos\n\n```\n$ chmod a+x baixacutest.sh\n$ .\u002Fbaixacutest.sh\n```\n\nEntre na pasta `$HOME\u002Flibraries\u002Farchdefs` e rode o comando\n`install_optsuite`.\nResponda as perguntas para instalar o CUTEst e sua família.\n\nDepois da instalação, o CUTEst soltará várias informações que\nvocê deve guardar no seu `$HOME\u002F.bashrc`. As minhas\ninformações estão abaixo. Você pode modificar para corresponder\nà sua configuração.\n\n```\nLIBS=$HOME\u002Flibraries\nexport ARCHDEFS=\"$LIBS\u002Farchdefs\"\nexport SIFDECODE=\"$LIBS\u002Fsifdecode\"\nexport CUTEST=\"$LIBS\u002Fcutest\"\nexport MASTSIF=\"$LIBS\u002Fsif\"\nexport PATH=\"$CUTEST\u002Fbin:$SIFDECODE\u002Fbin:$PATH\"\nexport MANPATH=\"$CUTEST\u002Fman:$SIFDECODE\u002Fman:$MANPATH\"\nexport MYARCH=\"pc64.lnx.gfo\"\nexport MYMATLABARCH=\"pc64.lnx.gfo\"\nexport MYMATLAB=\"\u002Fusr\u002Flocal\u002FMATLAB\u002FRXXXX\u002F\"\n```\n\nPara fazer o Matlab funcionar com o CUTEst, você decodifica o arquivo `SIF`\npara o format `mex` do matlab. Daí, você tem que abrir o Matlab naquela pasta,\nou inserir o path dessa pasta.\nAí você usa os comandos do cutest para acessar as propriedades do problema.\nO primeiro comando que você vai usar é o\n\n```\nprob = cutest_setup()\n```\n\nPara acessar a função objetivo, você pode usar\n\n```\nf = cutest_obj(x)\n[f,g] = cutest_obj(x) % já retorna o gradiente também\n```\n\nPara acessar o gradiente, você pode usar\n\n```\ng = cutest_grad(x)\n```\n\nAlém disso, existem outras funções que você pode usar.\nA lista está no apêndice B do\nTechnical Report do CUTEst.\n\nPara testar sua instação, você pode copiar o programinha a seguir,\nque tenta encontrar o minimizador de uma função através do método\nde máxima descida.\n\n```\nfunction [x,fx,k] = steep(x, f, g)\n\nkmax = 1e4;\nalpha = 0.5;\neps = 1e-4;\n\nfx = f(x);\ngx = g(x);\n\nk = 1;\nwhile norm(gx) \u003E eps\n  t = 1;\n  while f(x-t*gx) \u003E fx - alpha*t*dot(gx,gx)\n    t = t*0.9;\n  end\n  x = x - t*gx;\n  fx = f(x);\n  gx = g(x);\n  k = k + 1;\n  if k \u003E kmax\n    return\n  end\nend\n```\n\nCopie esse conteúdo para um arquivo `steep.m`, e abra o Matlab.\nNo terminal, vá até a pasta em que está esse arquivo e rode:\n\n```\n$ cutest2matlab BARD\n```\n\nNo matlab, vá até a pasta que está esse arquivo e rode\n\n```\nprob = cutest_prob();\n[sol, fx, k] = steep(prob.x, @(x) cutest_obj(x), @(x) cutest_grad(x))\n```\n\nA solução do problema deve ser perto de `(0.08,1.14,2.33)` e `f = 0.0082`.\n"},{slug:"2015-01-06-sharelatex-e-o-basico-do-cabecalho",title:eI,date:"2015-01-06",tags:["sharelatex",at],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"sharelatex-e-o-básico-do-cabeçalho"},children:[{type:b,tag:f,props:{href:"#sharelatex-e-o-b%C3%A1sico-do-cabe%C3%A7alho",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eI}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Este post serve principalmente para meus alunos e outros interessados em começar\na usar o LaTeX. A primeira coisa a se notar é que instalar o compilador é bem\nchato e complicado, então sugiro usarem o\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fwww.sharelatex.com?r=09a71589&rm=d&rs=b",rel:[l,m,n],target:o},children:[{type:a,value:"ShareLaTeX"}]},{type:a,value:"\nque é um editor e compilador de LaTeX online.\nO ShareLaTeX possui\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fpt.sharelatex.com\u002Flearn",rel:[l,m,n],target:o},children:[{type:a,value:"uma boa documentação para quem está começando"}]},{type:a,value:"\nque infelizmente não está traduzida para português.\nUma outra recomendação para quem está querendo ler sobre antes de começar a\nutilizar é\n"},{type:b,tag:f,props:{href:eJ,rel:[l,m,n],target:o},children:[{type:a,value:eJ}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Além disso, para não começar do nada, copie o seguinte código"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"\\documentclass{article}\n\\usepackage[utf8]{inputenc}\n\\usepackage[T1]{fontenc}\n\\usepackage[portuguese]{babel}\n\\usepackage[top=2cm,bottom=2cm,left=1cm,right=1cm]{geometry}\n\\usepackage{amsmath, amsfonts}\n\n\\title{Título}\n\\author{Abel Soares Siqueira}\n\\date{6 de Janeiro de 2015}\n\n\\begin{document}\n\n\\maketitle\n\nAlgo\n\n\\end{document}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"no ShareLaTeX e comece a descobrir as coisas."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"E não mais importante, se você tiver uma pergunta relacionada ao LaTeX tente\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Ftex.stackexchange.com\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"Stack Exchange do Tex"}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2015-01-06-sharelatex-e-o-basico-do-cabecalho",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# ShareLaTeX e o básico do cabeçalho\n\nEste post serve principalmente para meus alunos e outros interessados em começar\na usar o LaTeX. A primeira coisa a se notar é que instalar o compilador é bem\nchato e complicado, então sugiro usarem o\n[ShareLaTeX](https:\u002F\u002Fwww.sharelatex.com?r=09a71589&rm=d&rs=b)\nque é um editor e compilador de LaTeX online.\nO ShareLaTeX possui\n[uma boa documentação para quem está começando](https:\u002F\u002Fpt.sharelatex.com\u002Flearn)\nque infelizmente não está traduzida para português.\nUma outra recomendação para quem está querendo ler sobre antes de começar a\nutilizar é\nhttp:\u002F\u002Fen.wikibooks.org\u002Fwiki\u002FLaTeX.\n\nAlém disso, para não começar do nada, copie o seguinte código\n\n```\n\\documentclass{article}\n\\usepackage[utf8]{inputenc}\n\\usepackage[T1]{fontenc}\n\\usepackage[portuguese]{babel}\n\\usepackage[top=2cm,bottom=2cm,left=1cm,right=1cm]{geometry}\n\\usepackage{amsmath, amsfonts}\n\n\\title{Título}\n\\author{Abel Soares Siqueira}\n\\date{6 de Janeiro de 2015}\n\n\\begin{document}\n\n\\maketitle\n\nAlgo\n\n\\end{document}\n```\n\nno ShareLaTeX e comece a descobrir as coisas.\n\nE não mais importante, se você tiver uma pergunta relacionada ao LaTeX tente\n[Stack Exchange do Tex](http:\u002F\u002Ftex.stackexchange.com\u002F).\n"},{slug:"2014-12-19-mudando-de-hd",title:eK,date:"2014-12-19",tags:[ax,K,ea,aA,aR],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"mudando-de-hd"},children:[{type:b,tag:f,props:{href:"#mudando-de-hd",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eK}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ontem eu acabei de montar um computador novo.\nEsse computador é um upgrade do meu, e o meu passaria para a Kally.\nNo entanto, eu não gostaria de perder a minha instalação dor Arch,\nnem de ficar com o HD antigo, então decidi tentar copiar as partições."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Nota: Não sei a aplicabilidade destes comandos para outras distribuições."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:v,props:{},children:[{type:a,value:"Nota: Você também poderia fazer o que fiz, usando o "},{type:b,tag:e,props:{},children:[{type:a,value:"dd"}]},{type:a,value:", mas eu preferi\nevitar."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Inicialmente, prepare um pendrive (ou sua mídia favorita)\ncom o iso do Archlinux.\nTalvez esses passos possam ser feitos direto da instalação do HD velho,\nmas eu preferi não testar."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Faça o boot pelo pendrive.\nVerifique que os dois HDs foram identificados e\n"},{type:b,tag:v,props:{},children:[{type:a,value:"atente-se com a numeração sdx do HD"}]},{type:a,value:". No meu, o principal era sda, mas quando\neu instalei o outro HD, o novo ficou como sda e o antigo mudou para sdb.\nPrimeiro particione o HD novo. Eu separei as mesmas partições que o HD antigo,\nmas a numeração não foi a mesma, nem o tamanho.\nEu costumo usar 3 partições "},{type:b,tag:e,props:{},children:[{type:a,value:Q}]},{type:a,value:N},{type:b,tag:e,props:{},children:[{type:a,value:aV}]},{type:a,value:X},{type:b,tag:e,props:{},children:[{type:a,value:aU}]},{type:a,value:".\nEntão, depois de particionar o HD novo com a quantidade de partições necessárias\npara essas partições, com espaço suficiente para os dados que haviam nas\npartições antigas, eu formatei cada partição com o tipo de dado necessário\n(usando o "},{type:b,tag:e,props:{},children:[{type:a,value:"mkfs.ext4"}]},{type:a,value:").\nAlém disso, eu também tinha um swap e queria uma partição compartilhada entre\nWindows e Linux, então também \"formatei\" o swap ("},{type:b,tag:e,props:{},children:[{type:a,value:"mkswap"}]},{type:a,value:") e essa partição\n("},{type:b,tag:e,props:{},children:[{type:a,value:"mkfs.ntfs"}]},{type:a,value:").\nDepois disso, eu montei o "},{type:b,tag:e,props:{},children:[{type:a,value:Q}]},{type:a,value:" de cada partição e copiei os dados de uma partição\npara outra, com o comando"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cp -a \u002Fmnt\u002Fvelho\u002F. \u002Fmnt\u002Fnovo\u002F\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Depois montei o "},{type:b,tag:e,props:{},children:[{type:a,value:aU}]},{type:a,value:X},{type:b,tag:e,props:{},children:[{type:a,value:aV}]},{type:a,value:" e copiei o counteúdo de cada um."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"cp -a \u002Fmnt\u002Fvelho\u002Fhome\u002F. \u002Fmnt\u002Fnovo\u002Fhome\u002F\ncp -a \u002Fmnt\u002Fvelho\u002Fboot\u002F. \u002Fmnt\u002Fnovo\u002Fboot\u002F\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Nota: (Imagino que seja possível montar tudo, e depois copiar tudo apenas com o\nprimeiro comando)"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Nesse momento, o HD já tem os dados do sistema novo. Então, eu segui,\nseletivamente, os passos do "},{type:b,tag:f,props:{href:"https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002Fbeginners%27_guide#Generate_an_fstab",rel:[l,m,n],target:o},children:[{type:a,value:"guia do\niniciante"}]},{type:a,value:"\ndo Archlinux, a partir do \"Generate an fstab\". Lembre-se de ligar o swap e\nmontar a partição ntfs, se quiser que eles sejam preparados no boot.\nO comando é"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# genfstab -U -p \u002Fmnt\u002Fnovo \u003E \u002Fmnt\u002Fnovo\u002Fetc\u002Ffstab\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Daí, entrei no sistema novo, com"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# arch-chroot \u002Fmnt\u002Fnovo \u002Fbin\u002Fbash\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"e pulei para \"Create an initial ramdisk environment\".\nNão sei se era necessário fazer isso,\nmas me parecia uma boa coisa a se fazer."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# mkinitcpio -p linux\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Enfim, atualizei o "},{type:b,tag:e,props:{},children:[{type:a,value:"\u002Fboot\u002Fsyslinux\u002Fsyslinux.cfg"}]},{type:a,value:" para refletir a nova posição do\n"},{type:b,tag:e,props:{},children:[{type:a,value:Q}]},{type:a,value:", e rodei"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# syslinux-install_update -i -a -m\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Depois, só sair, desmontar e rebootar"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"# exit\n# umount -R \u002Fmnt\u002Fnovo \u002Fmnt\u002Fvelho\n# reboot\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Já escrevi isso do computador novo."}]}]},dir:C,path:"\u002Fblog\u002F2014-12-19-mudando-de-hd",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Mudando de HD\n\nOntem eu acabei de montar um computador novo.\nEsse computador é um upgrade do meu, e o meu passaria para a Kally.\nNo entanto, eu não gostaria de perder a minha instalação dor Arch,\nnem de ficar com o HD antigo, então decidi tentar copiar as partições.\n\n**Nota: Não sei a aplicabilidade destes comandos para outras distribuições.**\n\n**Nota: Você também poderia fazer o que fiz, usando o `dd`, mas eu preferi\nevitar.**\n\nInicialmente, prepare um pendrive (ou sua mídia favorita)\ncom o iso do Archlinux.\nTalvez esses passos possam ser feitos direto da instalação do HD velho,\nmas eu preferi não testar.\n\nFaça o boot pelo pendrive.\nVerifique que os dois HDs foram identificados e\n**atente-se com a numeração sdx do HD**. No meu, o principal era sda, mas quando\neu instalei o outro HD, o novo ficou como sda e o antigo mudou para sdb.\nPrimeiro particione o HD novo. Eu separei as mesmas partições que o HD antigo,\nmas a numeração não foi a mesma, nem o tamanho.\nEu costumo usar 3 partições `\u002F`, `\u002Fboot` e `\u002Fhome`.\nEntão, depois de particionar o HD novo com a quantidade de partições necessárias\npara essas partições, com espaço suficiente para os dados que haviam nas\npartições antigas, eu formatei cada partição com o tipo de dado necessário\n(usando o `mkfs.ext4`).\nAlém disso, eu também tinha um swap e queria uma partição compartilhada entre\nWindows e Linux, então também \"formatei\" o swap (`mkswap`) e essa partição\n(`mkfs.ntfs`).\nDepois disso, eu montei o `\u002F` de cada partição e copiei os dados de uma partição\npara outra, com o comando\n\n```\ncp -a \u002Fmnt\u002Fvelho\u002F. \u002Fmnt\u002Fnovo\u002F\n```\n\nDepois montei o `\u002Fhome` e `\u002Fboot` e copiei o counteúdo de cada um.\n\n```\ncp -a \u002Fmnt\u002Fvelho\u002Fhome\u002F. \u002Fmnt\u002Fnovo\u002Fhome\u002F\ncp -a \u002Fmnt\u002Fvelho\u002Fboot\u002F. \u002Fmnt\u002Fnovo\u002Fboot\u002F\n```\n\n_Nota: (Imagino que seja possível montar tudo, e depois copiar tudo apenas com o\nprimeiro comando)_.\n\nNesse momento, o HD já tem os dados do sistema novo. Então, eu segui,\nseletivamente, os passos do [guia do\niniciante](https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002Fbeginners%27_guide#Generate_an_fstab)\ndo Archlinux, a partir do \"Generate an fstab\". Lembre-se de ligar o swap e\nmontar a partição ntfs, se quiser que eles sejam preparados no boot.\nO comando é\n\n```\n# genfstab -U -p \u002Fmnt\u002Fnovo \u003E \u002Fmnt\u002Fnovo\u002Fetc\u002Ffstab\n```\n\nDaí, entrei no sistema novo, com\n\n```\n# arch-chroot \u002Fmnt\u002Fnovo \u002Fbin\u002Fbash\n```\n\ne pulei para \"Create an initial ramdisk environment\".\nNão sei se era necessário fazer isso,\nmas me parecia uma boa coisa a se fazer.\n\n```\n# mkinitcpio -p linux\n```\n\nEnfim, atualizei o `\u002Fboot\u002Fsyslinux\u002Fsyslinux.cfg` para refletir a nova posição do\n`\u002F`, e rodei\n\n```\n# syslinux-install_update -i -a -m\n```\n\nDepois, só sair, desmontar e rebootar\n\n```\n# exit\n# umount -R \u002Fmnt\u002Fnovo \u002Fmnt\u002Fvelho\n# reboot\n```\n\nJá escrevi isso do computador novo.\n"},{slug:"2014-12-16-instalacao-da-impressora-no-dmat-ufpr",title:eL,date:"2014-12-16",tags:["printer",aB,K,ax],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"instalação-da-impressora-no-dmat-ufpr"},children:[{type:b,tag:f,props:{href:"#instala%C3%A7%C3%A3o-da-impressora-no-dmat-ufpr",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eL}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Hoje tive que instalar a impressora do DMAT da UFPR no meu\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fwww.archlinux.org\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"archlinux"}]},{type:a,value:". Infelizmente o suporte técnico da\nuniversidade não dá suporte para essa distribuição (só Ubuntu).\nExiste o suporte ao Windows\n("},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.cce.ufpr.br\u002Fportal\u002Fsuporte-a-impressao\u002F",rel:[l,m,n],target:o},children:[{type:a,value:S}]},{type:a,value:"),\nque foi necessário para eu obter algumas informações sobre a impressora.\nTive algum trabalho para achar as configurações corretas, mas acho que consegui,\ne vou deixar explicado aqui caso alguém precise.\nInfelizmente não refiz os passos a seguir, porque fui costurando até chegar ao\nponto em que a impressora funcionou. No entanto, vou explicar o que me parece\nque fez diferença."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Inicialmente, instale o "},{type:b,tag:f,props:{href:"https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FCUPS",rel:[l,m,n],target:o},children:[{type:a,value:"CUPS"}]},{type:a,value:cX},{type:b,tag:f,props:{href:"https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FSamba",rel:[l,m,n],target:o},children:[{type:a,value:"SAMBA"}]},{type:a,value:" e suba-os com o "},{type:b,tag:e,props:{},children:[{type:a,value:"systemctl"}]},{type:a,value:el},{type:b,tag:v,props:{},children:[{type:a,value:"Talvez seja preciso apenas as partes dos clientes do CUPS e do SAMBA"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Depois disso, entre na "},{type:b,tag:f,props:{href:"http:\u002F\u002Flocalhost:631",rel:[l,m,n],target:o},children:[{type:a,value:"administração do CUPS"}]},{type:a,value:".\nO meu estava em inglês, então vou usar uma tradução livre.\nEntre em \"adicionar impressora\". Entre com "},{type:b,tag:e,props:{},children:[{type:a,value:A}]},{type:a,value:" e a senha do root nessa\nadministração (ou configure o usuário com o grupo correto).\nAgora selecione \"Impressora Windows via SAMBA\"."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A grande dificuldade de instalar a impressora foi descobrir a porcaria da\nconexão. Aparentemente, deve ter o formato"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"smb:\u002F\u002F[USUARIO]:[SENHA]@[HOST]\u002F[IMPRESSORA]\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O "},{type:b,tag:e,props:{},children:[{type:a,value:"[HOST]"}]},{type:a,value:" eu já tinha porque me foi passado anteriormente, mas a gente também\npodia pegar no suporte ao Windows da impressora: "},{type:b,tag:e,props:{},children:[{type:a,value:"impressao01.ufpr.br"}]},{type:a,value:".\nO "},{type:b,tag:e,props:{},children:[{type:a,value:"[USUARIO]"}]},{type:a,value:X},{type:b,tag:e,props:{},children:[{type:a,value:"[SENHA]"}]},{type:a,value:" são os seus valores locais (por quê?).\nPara obter a "},{type:b,tag:e,props:{},children:[{type:a,value:"[IMPRESSORA]"}]},{type:a,value:" tive que entrar no Windows pra pegar, seguindo os\npassos do suporte ao Windows. "},{type:b,tag:v,props:{},children:[{type:a,value:"MAS"}]},{type:a,value:", parece que podemos obter a lista usando o\ncomando"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"smbclient -L impressao01.ufpr.br\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"e colocando nossa senha. Vai ser uma lista, então você pode usar "},{type:b,tag:e,props:{},children:[{type:a,value:"less"}]},{type:a,value:" pra ler.\nObtive o nome da impressora que eu queria usar e coloquei no lugar:\n"},{type:b,tag:e,props:{},children:[{type:a,value:"DEPTO.MATEMATICA_SALA.PROFESSORES_EXATAS_POLITECNICO"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Deposi disso, você precisa passar o ppd. Uma busca na web por "},{type:b,tag:e,props:{},children:[{type:a,value:"linux MARCA MODELO"}]},{type:a,value:" retornará um link da "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.openprinting.org",rel:[l,m,n],target:o},children:[{type:a,value:"Open Printing"}]},{type:a,value:".\nEu utilizei o modelo C790, mesmo a impressora sendo modelo C792, porque, como\ndisse, fui costurando um monte de coisas. Baixe o ppd ("},{type:b,tag:e,props:{},children:[{type:a,value:"directly download PPD"}]},{type:a,value:"),\ne passe-o para o CUPS. Depois disso a impressora deve estar instalado, peça a\nimpresão de uma página teste e verifique."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Infelizmente as informações são meio dispersas e não cobrem todos os problemas,\nprincipalmente porque eu não sei diferenciar o que é problema e o que deveria de\nfato acontecer."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Note que eu não usei o IP da impressora, que "},{type:b,tag:v,props:{},children:[{type:a,value:"deve"}]},{type:a,value:" ser uma possibilidade."}]}]},dir:C,path:"\u002Fblog\u002F2014-12-16-instalacao-da-impressora-no-dmat-ufpr",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Instalação da Impressora no DMAT-UFPR\n\nHoje tive que instalar a impressora do DMAT da UFPR no meu\n[archlinux](https:\u002F\u002Fwww.archlinux.org\u002F). Infelizmente o suporte técnico da\nuniversidade não dá suporte para essa distribuição (só Ubuntu).\nExiste o suporte ao Windows\n([aqui](http:\u002F\u002Fwww.cce.ufpr.br\u002Fportal\u002Fsuporte-a-impressao\u002F)),\nque foi necessário para eu obter algumas informações sobre a impressora.\nTive algum trabalho para achar as configurações corretas, mas acho que consegui,\ne vou deixar explicado aqui caso alguém precise.\nInfelizmente não refiz os passos a seguir, porque fui costurando até chegar ao\nponto em que a impressora funcionou. No entanto, vou explicar o que me parece\nque fez diferença.\n\nInicialmente, instale o [CUPS](https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FCUPS) e o\n[SAMBA](https:\u002F\u002Fwiki.archlinux.org\u002Findex.php\u002FSamba) e suba-os com o `systemctl`.\n**Talvez seja preciso apenas as partes dos clientes do CUPS e do SAMBA**.\n\nDepois disso, entre na [administração do CUPS](http:\u002F\u002Flocalhost:631).\nO meu estava em inglês, então vou usar uma tradução livre.\nEntre em \"adicionar impressora\". Entre com `root` e a senha do root nessa\nadministração (ou configure o usuário com o grupo correto).\nAgora selecione \"Impressora Windows via SAMBA\".\n\nA grande dificuldade de instalar a impressora foi descobrir a porcaria da\nconexão. Aparentemente, deve ter o formato\n\n```\nsmb:\u002F\u002F[USUARIO]:[SENHA]@[HOST]\u002F[IMPRESSORA]\n```\n\nO `[HOST]` eu já tinha porque me foi passado anteriormente, mas a gente também\npodia pegar no suporte ao Windows da impressora: `impressao01.ufpr.br`.\nO `[USUARIO]` e `[SENHA]` são os seus valores locais (por quê?).\nPara obter a `[IMPRESSORA]` tive que entrar no Windows pra pegar, seguindo os\npassos do suporte ao Windows. **MAS**, parece que podemos obter a lista usando o\ncomando\n\n```\nsmbclient -L impressao01.ufpr.br\n```\n\ne colocando nossa senha. Vai ser uma lista, então você pode usar `less` pra ler.\nObtive o nome da impressora que eu queria usar e coloquei no lugar:\n`DEPTO.MATEMATICA_SALA.PROFESSORES_EXATAS_POLITECNICO`.\n\nDeposi disso, você precisa passar o ppd. Uma busca na web por `linux MARCA MODELO` retornará um link da [Open Printing](http:\u002F\u002Fwww.openprinting.org).\nEu utilizei o modelo C790, mesmo a impressora sendo modelo C792, porque, como\ndisse, fui costurando um monte de coisas. Baixe o ppd (`directly download PPD`),\ne passe-o para o CUPS. Depois disso a impressora deve estar instalado, peça a\nimpresão de uma página teste e verifique.\n\nInfelizmente as informações são meio dispersas e não cobrem todos os problemas,\nprincipalmente porque eu não sei diferenciar o que é problema e o que deveria de\nfato acontecer.\n\nNote que eu não usei o IP da impressora, que **deve** ser uma possibilidade.\n"},{slug:"2014-12-11-siclipod-um-gerenciador-de-podcasts-simples-em-linha-de-comando",title:eM,date:"2014-12-11",tags:["siclipod",ar],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"siclipod---um-gerenciador-de-podcasts-simples-em-linha-de-comando"},children:[{type:b,tag:f,props:{href:"#siclipod---um-gerenciador-de-podcasts-simples-em-linha-de-comando",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eM}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Há algum tempo eu, esporadicamente, eu escuto o podcast do "},{type:b,tag:f,props:{href:"http:\u002F\u002Fjovemnerd.com.br\u002Fcategoria\u002Fnerdcast\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"Jovem\nNerd"}]},{type:a,value:".\nMas acessar o site é chato, então eu fui procurar um gerenciador de podcasts.\nNão gostei de nenhum (o "},{type:b,tag:f,props:{href:"http:\u002F\u002Fgpodder.org\u002F",rel:[l,m,n],target:o},children:[{type:a,value:"gpodder"}]},{type:a,value:" quase foi escolhido).\nDaí, resolvi cria um no estilo que eu gosto.\nFalta MUITO pra ficar bom mas pode ser de alguma utilidade para alguém.\nO código está no "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fsiclipod",rel:[l,m,n],target:o},children:[{type:a,value:U}]},{type:a,value:".\nO básico pra funcionar é"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"siclipod add URL\nsiclipod list\nsiclipod list NAME\nsiclipod search NAME STUFF\nsiclipod download NAME STUFF\nsiclipod play NAME STUFF\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"O normal é tocar com o "},{type:b,tag:e,props:{},children:[{type:a,value:"smplayer"}]},{type:a,value:",\nmas você pode editar "},{type:b,tag:e,props:{},children:[{type:a,value:"$HOME\u002F.siclipod\u002F.config"}]},{type:a,value:" para colocar o que quiser.\nNem o README eu completei ainda."}]}]},dir:C,path:"\u002Fblog\u002F2014-12-11-siclipod-um-gerenciador-de-podcasts-simples-em-linha-de-comando",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# SiCLIPoD - Um Gerenciador de Podcasts Simples em Linha de Comando\n\nHá algum tempo eu, esporadicamente, eu escuto o podcast do [Jovem\nNerd](http:\u002F\u002Fjovemnerd.com.br\u002Fcategoria\u002Fnerdcast\u002F).\nMas acessar o site é chato, então eu fui procurar um gerenciador de podcasts.\nNão gostei de nenhum (o [gpodder](http:\u002F\u002Fgpodder.org\u002F) quase foi escolhido).\nDaí, resolvi cria um no estilo que eu gosto.\nFalta MUITO pra ficar bom mas pode ser de alguma utilidade para alguém.\nO código está no [GitHub](https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fsiclipod).\nO básico pra funcionar é\n\n```\nsiclipod add URL\nsiclipod list\nsiclipod list NAME\nsiclipod search NAME STUFF\nsiclipod download NAME STUFF\nsiclipod play NAME STUFF\n```\n\nO normal é tocar com o `smplayer`,\nmas você pode editar `$HOME\u002F.siclipod\u002F.config` para colocar o que quiser.\nNem o README eu completei ainda.\n"},{slug:"2014-11-22-the-end-of-fortran",title:eN,date:aW,tags:["rant",cx,ew,H],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"the-end-of-fortran"},children:[{type:b,tag:f,props:{href:"#the-end-of-fortran",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eN}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"One of my main interest is the end of Fortran "},{type:b,tag:v,props:{},children:[{type:a,value:"as the only programming language\nused by mathematicias"}]},{type:a,value:". If you're not in the area of mathematical programming,\nyou probably find it strange for me to be talking about Fortran, so I explain.\nFortran is considered the fastest programming language in mathematics, and most\nthings made are in this language. Other often used languages such as\nMatLab\u002FOctave and Mathematica are high-level, which means they are slower and\nare not considered for serious applications."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In reality, Fortran is one of the fastest programming language "},{type:b,tag:v,props:{},children:[{type:a,value:"for linear\nalgebra with dense matrices"}]},{type:a,value:". Since most things in this area are matrices, and\nmost vectors are dense, this can't be overlooked. In addition, fortran has a\nrelatively easy way to go, bypassing the painstankingly formatting and GOTO,\nwhich were left behind by the newer versions."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The problem is that, since learning Fortran is almost imperative in the area,\nthere is little else used to code in the area. Hence, easy tasks without need of\nfast execution become hard programming jobs. And furthermore, tasks that need\nfast execution, but can't (shouldn't) be implement as matrices, become slow in\nFortran, and sometimes this is overlooked."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"My proposition is "},{type:b,tag:v,props:{},children:[{type:a,value:"use the best tool for the job"}]},{type:a,value:", which is just common sense,\nbut applied to our area. Try "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.python.org",rel:[l,m,n],target:o},children:[{type:a,value:"Python"}]},{type:a,value:". Try\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.ruby-lang.org",rel:[l,m,n],target:o},children:[{type:a,value:"Ruby"}]},{type:a,value:". Try "},{type:b,tag:f,props:{href:aT,rel:[l,m,n],target:o},children:[{type:a,value:O}]},{type:a,value:". Try\nto implementing a graph using a list of pointers. Try to implement a argument\nparser. Try to implement reading, storing, and calculating the transpose of a\nsparse matrix. Try to implement a tool to read all citations on your .tex, read\nfrom a bibtex file such references and print then all in a nice format."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Now, rather than stay in that language, go for another. Try other languages.\nWhen the job comes, you can choose the best tool for it. And you can combine.\nSome languages, such as Julia, Fortran and C, are very easy to combine with\nothers. Implement your algorithm in Julia, then improve it later with Fortran.\nAnd if you are really in need of speed, why not implement the hardest part in\nmachine language (ASSEMBLY)?\nImplementing the fastest possible algorithm is very good for a specific\napplication, but in our line of work, we must take into account the method, not\nonly the implementation."}]}]},dir:C,path:"\u002Fblog\u002F2014-11-22-the-end-of-fortran",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# The End of Fortran\n\nOne of my main interest is the end of Fortran **as the only programming language\nused by mathematicias**. If you're not in the area of mathematical programming,\nyou probably find it strange for me to be talking about Fortran, so I explain.\nFortran is considered the fastest programming language in mathematics, and most\nthings made are in this language. Other often used languages such as\nMatLab\u002FOctave and Mathematica are high-level, which means they are slower and\nare not considered for serious applications.\n\nIn reality, Fortran is one of the fastest programming language **for linear\nalgebra with dense matrices**. Since most things in this area are matrices, and\nmost vectors are dense, this can't be overlooked. In addition, fortran has a\nrelatively easy way to go, bypassing the painstankingly formatting and GOTO,\nwhich were left behind by the newer versions.\n\nThe problem is that, since learning Fortran is almost imperative in the area,\nthere is little else used to code in the area. Hence, easy tasks without need of\nfast execution become hard programming jobs. And furthermore, tasks that need\nfast execution, but can't (shouldn't) be implement as matrices, become slow in\nFortran, and sometimes this is overlooked.\n\nMy proposition is **use the best tool for the job**, which is just common sense,\nbut applied to our area. Try [Python](http:\u002F\u002Fwww.python.org). Try\n[Ruby](http:\u002F\u002Fwww.ruby-lang.org). Try [Julia](http:\u002F\u002Fwww.julialang.org). Try\nto implementing a graph using a list of pointers. Try to implement a argument\nparser. Try to implement reading, storing, and calculating the transpose of a\nsparse matrix. Try to implement a tool to read all citations on your .tex, read\nfrom a bibtex file such references and print then all in a nice format.\n\nNow, rather than stay in that language, go for another. Try other languages.\nWhen the job comes, you can choose the best tool for it. And you can combine.\nSome languages, such as Julia, Fortran and C, are very easy to combine with\nothers. Implement your algorithm in Julia, then improve it later with Fortran.\nAnd if you are really in need of speed, why not implement the hardest part in\nmachine language (ASSEMBLY)?\nImplementing the fastest possible algorithm is very good for a specific\napplication, but in our line of work, we must take into account the method, not\nonly the implementation.\n"},{slug:"2014-11-22-caminho-academico",title:eO,date:aW,tags:[K],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"caminho-acadêmico"},children:[{type:b,tag:f,props:{href:"#caminho-acad%C3%AAmico",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eO}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Versão curta:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"11\u002F2014-presente - Professor na UFPR;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"12\u002F2013-11\u002F2014 - Pós-doutorado na UNICAMP, melhorando o trabalho do meu"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"doutorado;\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"01\u002F2009-11\u002F2013 - Doutorado na UNICAMP na área de Matemática Aplicada,"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"trabalhando com Otimização Não-Linear. Minha tese foi \"Controle Dinâmico da\nInfactibilidade para Programação Não-Linear\";\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"03\u002F2005-12\u002F2008 - Bacharel em Matemática Aplicada."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Versão Longa:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Eu comecei a trabalhar com matemática em 2005, entrando no curso 51 da\n"},{type:b,tag:f,props:{href:eP,rel:[l,m,n],target:o},children:[{type:a,value:eQ}]},{type:a,value:", onde se estuda por um ano e meio as classes\ncomuns aos cursos de Matemática, Matemática Aplicada, Física, e outros cursos.\nInicialmente eu planejava seguir matemática pura, mas depois da primeira\ndisciplina de programação, eu considerava mudar para alguma área da computação.\nNo semestre seguinte eu estudei Cálculo Numérico, que me levou a escolher\nmatemática aplicada. Esse sentimento foi reforçado por Análise Numérica e\nProgração Não-Linear, e logo eu decidi seguir a carreira acadêmica."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Em 2007 eu comecei uma Iniciação Científica com meu orientador e bom amigo\n"},{type:b,tag:f,props:{href:eR,rel:[l,m,n],target:o},children:[{type:a,value:eS}]},{type:a,value:",\ncom o título \"Métodos de Pontos Interiores para Programação Quadrática\".\nMeu motivo para escolher o Chico, como ele é conhecido, foi que ele era da\nárea de Otimização Não-Linear e tinha conhecimento prévio com C++, que eu tinha\ninteresse em aprender. O trabalho foi completado em 2008."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Em 2008, tendo interesse na carreira acadêmica, decidi adiantar algumas\ndisciplinas do nível de pós-graduação. Eu adiantei duas disciplinas no primeiro\nsemestre, e uma no segundo. As disciplinas adiantas foram \"Matrizes\", que é uma\ndisciplina sobre as propriedades teóricas de matrizees, normas, autovalores,\nsistemas lineares e decomposições, com algumas considerações algorítmicas, mas\nsem programação.\nA outra era \"Métodos Computacionais da Álgebra Linear\", que é basicamente a\nparte de programação de \"Matrizes\". Esse foi meu primeiro contato com FORTRAN,\nque foi horrível. A última disciplina foi \"Tópicos em Análise Numérica\" que,\nnesse caso, foi sobre diferenças finitas. Eu acabei minha graduação em dezembro\ndesse ano."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Em 2009, comecei meu Doutorado em Matemática Aplicada, também na UNICAMP, no\ntrabalho \"Controle Dinâmico da Infactibilidade para Programação Não-Linear\".\nDurante o doutorado, estudei Programção Linear, Otimização Não-Linear e\nOtimizaçào Sem Derivadas. Em Dezembro de 2013 eu acabei meu doutorado."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Em Dezembro de 2013, comecei meu pós-doutorado, seguindo o trabalho do\ndoutorado. Em Março de 2014, participei do concurso para UFPR, e fui aprovado em\nterceiro. Fui chamado para trabalhar em Novembro de 2014."}]}]},dir:C,path:"\u002Fblog\u002F2014-11-22-caminho-academico",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Caminho Acadêmico\n\nVersão curta:\n\n- 11\u002F2014-presente - Professor na UFPR;\n- 12\u002F2013-11\u002F2014 - Pós-doutorado na UNICAMP, melhorando o trabalho do meu\n\n```\ndoutorado;\n```\n\n- 01\u002F2009-11\u002F2013 - Doutorado na UNICAMP na área de Matemática Aplicada,\n\n```\ntrabalhando com Otimização Não-Linear. Minha tese foi \"Controle Dinâmico da\nInfactibilidade para Programação Não-Linear\";\n```\n\n- 03\u002F2005-12\u002F2008 - Bacharel em Matemática Aplicada.\n\nVersão Longa:\n\nEu comecei a trabalhar com matemática em 2005, entrando no curso 51 da\n[UNICAMP](http:\u002F\u002Fwww.unicamp.br), onde se estuda por um ano e meio as classes\ncomuns aos cursos de Matemática, Matemática Aplicada, Física, e outros cursos.\nInicialmente eu planejava seguir matemática pura, mas depois da primeira\ndisciplina de programação, eu considerava mudar para alguma área da computação.\nNo semestre seguinte eu estudei Cálculo Numérico, que me levou a escolher\nmatemática aplicada. Esse sentimento foi reforçado por Análise Numérica e\nProgração Não-Linear, e logo eu decidi seguir a carreira acadêmica.\n\nEm 2007 eu comecei uma Iniciação Científica com meu orientador e bom amigo\n[Francisco de Assis Magalhães Gomes Neto](http:\u002F\u002Fwww.ime.unicamp.br\u002F~chico),\ncom o título \"Métodos de Pontos Interiores para Programação Quadrática\".\nMeu motivo para escolher o Chico, como ele é conhecido, foi que ele era da\nárea de Otimização Não-Linear e tinha conhecimento prévio com C++, que eu tinha\ninteresse em aprender. O trabalho foi completado em 2008.\n\nEm 2008, tendo interesse na carreira acadêmica, decidi adiantar algumas\ndisciplinas do nível de pós-graduação. Eu adiantei duas disciplinas no primeiro\nsemestre, e uma no segundo. As disciplinas adiantas foram \"Matrizes\", que é uma\ndisciplina sobre as propriedades teóricas de matrizees, normas, autovalores,\nsistemas lineares e decomposições, com algumas considerações algorítmicas, mas\nsem programação.\nA outra era \"Métodos Computacionais da Álgebra Linear\", que é basicamente a\nparte de programação de \"Matrizes\". Esse foi meu primeiro contato com FORTRAN,\nque foi horrível. A última disciplina foi \"Tópicos em Análise Numérica\" que,\nnesse caso, foi sobre diferenças finitas. Eu acabei minha graduação em dezembro\ndesse ano.\n\nEm 2009, comecei meu Doutorado em Matemática Aplicada, também na UNICAMP, no\ntrabalho \"Controle Dinâmico da Infactibilidade para Programação Não-Linear\".\nDurante o doutorado, estudei Programção Linear, Otimização Não-Linear e\nOtimizaçào Sem Derivadas. Em Dezembro de 2013 eu acabei meu doutorado.\n\nEm Dezembro de 2013, comecei meu pós-doutorado, seguindo o trabalho do\ndoutorado. Em Março de 2014, participei do concurso para UFPR, e fui aprovado em\nterceiro. Fui chamado para trabalhar em Novembro de 2014.\n"},{slug:"2014-11-22-academic-path",title:eT,date:aW,tags:[K],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"academic-path"},children:[{type:b,tag:f,props:{href:"#academic-path",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eT}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"TL;DR:"}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"11\u002F2014-present - Professor at UFPR;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"12\u002F2013-11\u002F2014 - Postdoctorate at UNICAMP, improving the work of my doctorate;"}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"01\u002F2009-11\u002F2013 - Doctorate at UNICAMP on the field of Applied Mathematics, working"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[k,j]},children:[{type:b,tag:e,props:{},children:[{type:a,value:"with Nonlinear Optimization. My thesis was \"Dynamic Control of Infeasibility\nfor Nonlinear Programming\"\n"}]}]}]},{type:a,value:c},{type:b,tag:z,props:{},children:[{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:"03\u002F2005-12\u002F2008 - Bachelor of Applied Mathematics;"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Long version:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"I began working on mathematics on 2005, entering the course 51 of\n"},{type:b,tag:f,props:{href:eP,rel:[l,m,n],target:o},children:[{type:a,value:eQ}]},{type:a,value:", where you study for one and half year the\ncommon classes to Mathematics, Applied Mathematics, Physics, and some other\ncourses. Initially I planned to follow Pure Mathematics, but after my first\nprogramming class, I considerer changing to some area of Computations. The\nfollowing semester I studied Numerical Calculus, which led me to the path of\nApplied Mathematics. This felling was reforced by Numerical Analysis and\nNonlinear Programming, and I soon decided to follow the academic path."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In 2007, I started a Scientific Initiation with my advisor and good friend\n"},{type:b,tag:f,props:{href:eR,rel:[l,m,n],target:o},children:[{type:a,value:eS}]},{type:a,value:",\nentitled \"Interior Point Methods for Quadratic Programming\".\nMy reason for choosing Chico, as he is commonly known, was that he was from the\nNonlinear Optimization area and had previously worked with C++, which I intended\nto learn. The work was completed by 2008."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In 2008, having interest in the academic path, I decided to \"rush\" some\nteaching of the post-graduate level. I rushed two in the first semester, and\none in the second. The teaching rushed were \"Matrices\", which is a discipline\nabout theoretical properties of matrices, norms, eigenvalues, linear systems,\nand decompositions, with some algorithmic considerations, but no programming.\nThe other was \"Numerical Methods for Linear Algebra\", which is basically the\nprogramming part of \"Matrices\". This was my first contact with FORTRAN, which\nwas awful. The last discipline was \"Topics of Numerical Analysis\", which in this\ncase was about finite differences. I finished my graduation on december of this\nyear."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In 2009, I started my Doctorate on Applied Mathematics, also on UNICAMP, in the\nwork \"Dynamic Control of Infeasibility for Nonlinear Programming\". During the\ndoctorate, I studied Linear Programming, Nonlinear Optimization and\nDerivative-Free Optimization. On December, 2013, I finished my doctorate."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"On December, 2013, I started my post-doctorate, following the work of my\ndoctorate. On March, 2014, I participated on the selection process to work on\nUFPR, and was approved at third position. I was called to work on November,\n2014;"}]}]},dir:C,path:"\u002Fblog\u002F2014-11-22-academic-path",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Academic Path\n\nTL;DR:\n\n- 11\u002F2014-present - Professor at UFPR;\n- 12\u002F2013-11\u002F2014 - Postdoctorate at UNICAMP, improving the work of my doctorate;\n- 01\u002F2009-11\u002F2013 - Doctorate at UNICAMP on the field of Applied Mathematics, working\n\n```\nwith Nonlinear Optimization. My thesis was \"Dynamic Control of Infeasibility\nfor Nonlinear Programming\"\n```\n\n- 03\u002F2005-12\u002F2008 - Bachelor of Applied Mathematics;\n\nLong version:\n\nI began working on mathematics on 2005, entering the course 51 of\n[UNICAMP](http:\u002F\u002Fwww.unicamp.br), where you study for one and half year the\ncommon classes to Mathematics, Applied Mathematics, Physics, and some other\ncourses. Initially I planned to follow Pure Mathematics, but after my first\nprogramming class, I considerer changing to some area of Computations. The\nfollowing semester I studied Numerical Calculus, which led me to the path of\nApplied Mathematics. This felling was reforced by Numerical Analysis and\nNonlinear Programming, and I soon decided to follow the academic path.\n\nIn 2007, I started a Scientific Initiation with my advisor and good friend\n[Francisco de Assis Magalhães Gomes Neto](http:\u002F\u002Fwww.ime.unicamp.br\u002F~chico),\nentitled \"Interior Point Methods for Quadratic Programming\".\nMy reason for choosing Chico, as he is commonly known, was that he was from the\nNonlinear Optimization area and had previously worked with C++, which I intended\nto learn. The work was completed by 2008.\n\nIn 2008, having interest in the academic path, I decided to \"rush\" some\nteaching of the post-graduate level. I rushed two in the first semester, and\none in the second. The teaching rushed were \"Matrices\", which is a discipline\nabout theoretical properties of matrices, norms, eigenvalues, linear systems,\nand decompositions, with some algorithmic considerations, but no programming.\nThe other was \"Numerical Methods for Linear Algebra\", which is basically the\nprogramming part of \"Matrices\". This was my first contact with FORTRAN, which\nwas awful. The last discipline was \"Topics of Numerical Analysis\", which in this\ncase was about finite differences. I finished my graduation on december of this\nyear.\n\nIn 2009, I started my Doctorate on Applied Mathematics, also on UNICAMP, in the\nwork \"Dynamic Control of Infeasibility for Nonlinear Programming\". During the\ndoctorate, I studied Linear Programming, Nonlinear Optimization and\nDerivative-Free Optimization. On December, 2013, I finished my doctorate.\n\nOn December, 2013, I started my post-doctorate, following the work of my\ndoctorate. On March, 2014, I participated on the selection process to work on\nUFPR, and was approved at third position. I was called to work on November,\n2014;\n"},{slug:"2014-11-16-perprof-py-a-performance-profile-package-for-python",title:eU,date:"2014-11-16",tags:["perprof",ae,bC,bD],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"perprof-py58-a-performance-profile-package-for-python"},children:[{type:b,tag:f,props:{href:"#perprof-py58-a-performance-profile-package-for-python",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eU}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"One of the things I worked with was a Performance Profile tool, in the sense\nof Dolan and Moré. This tool,\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fufpr-opt.github.io\u002Fperprof-py",rel:[l,m,n],target:o},children:[{type:a,value:et}]},{type:a,value:", written in Python,\nreads input in the form of a table of problem with time and exitflag, and\noutputs a image\u002Fpdf with the performance profile.\nThis tool is very important for the nonlinear optimization community, since it\nis one of the main comparison tools for the algorithms."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The package is open source, available for changes, improvements and suggestions.\nMany options have been implemented to costumize the graphic, or to improve the\ninput of data. The source is available at\n"},{type:b,tag:f,props:{href:"http:\u002F\u002Fgithub.com\u002Fufpr-opt\u002Fperprof-py",rel:[l,m,n],target:o},children:[{type:a,value:aL}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2014-11-16-perprof-py-a-performance-profile-package-for-python",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# perprof-py&#58 A Performance Profile Package for Python\n\nOne of the things I worked with was a Performance Profile tool, in the sense\nof Dolan and Moré. This tool,\n[perprof-py](http:\u002F\u002Fufpr-opt.github.io\u002Fperprof-py), written in Python,\nreads input in the form of a table of problem with time and exitflag, and\noutputs a image\u002Fpdf with the performance profile.\nThis tool is very important for the nonlinear optimization community, since it\nis one of the main comparison tools for the algorithms.\n\nThe package is open source, available for changes, improvements and suggestions.\nMany options have been implemented to costumize the graphic, or to improve the\ninput of data. The source is available at\n[github](http:\u002F\u002Fgithub.com\u002Fufpr-opt\u002Fperprof-py).\n"},{slug:"2014-06-04-jogos-de-tabuleiro",title:eV,date:eW,tags:["boardgames",ar],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"jogos-de-tabuleiro"},children:[{type:b,tag:f,props:{href:"#jogos-de-tabuleiro",ariaHidden:r,tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eV}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Eu (não tão) recementemente me interessei em jogos de tabuleiro. Para\nclarificar, não estou me referindo aos jogos de tabuleiro \"clássicos\", como War,\nBanco Imobiliário, etc.. Estou me referindo aos jogos de tabuleiro com mecânica\navançada. Isso não significa que todos eles são complexos, mas que eles são (em\nsua maioria) bem pensados e balanceados.\nEsse jogos de tabuleiro juntaram uma legião de seguidores, a maioria geeks e\nnerds, que está interessada em algum hobby legal. Note que RPG e jogos digitais\nnormalmente são parte desses hobbies.\nMais informações podem ser obtidas no ótimo site "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.boardgamegeek.com",rel:[l,m,n],target:o},children:[{type:a,value:"board game\ngeek"}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Uma das melhoras coisas de jogos de tabuleiros é a grande variedade de\ncomplexidade e seriedade que eles cobrem. Você pode jogar um jogo de 10-15\nminutos com regras extremamente simples (como Fluxx), ou um jogo intenso, sem\nsorte envolvida, de várias horas (como Diplomacia). Um dos meus jogos favoritos\ndo momento é Battlestar Galactica, um jogo baseado na série homônima."}]}]},dir:C,path:"\u002Fblog\u002F2014-06-04-jogos-de-tabuleiro",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# Jogos de Tabuleiro\n\nEu (não tão) recementemente me interessei em jogos de tabuleiro. Para\nclarificar, não estou me referindo aos jogos de tabuleiro \"clássicos\", como War,\nBanco Imobiliário, etc.. Estou me referindo aos jogos de tabuleiro com mecânica\navançada. Isso não significa que todos eles são complexos, mas que eles são (em\nsua maioria) bem pensados e balanceados.\nEsse jogos de tabuleiro juntaram uma legião de seguidores, a maioria geeks e\nnerds, que está interessada em algum hobby legal. Note que RPG e jogos digitais\nnormalmente são parte desses hobbies.\nMais informações podem ser obtidas no ótimo site [board game\ngeek](http:\u002F\u002Fwww.boardgamegeek.com).\n\nUma das melhoras coisas de jogos de tabuleiros é a grande variedade de\ncomplexidade e seriedade que eles cobrem. Você pode jogar um jogo de 10-15\nminutos com regras extremamente simples (como Fluxx), ou um jogo intenso, sem\nsorte envolvida, de várias horas (como Diplomacia). Um dos meus jogos favoritos\ndo momento é Battlestar Galactica, um jogo baseado na série homônima.\n"},{slug:"2014-06-04-bibcli",title:eX,date:eW,tags:[cr,cq,at,"cli"],toc:[],body:{type:A,children:[{type:b,tag:x,props:{id:"bibcli---command-line-interface-to-manage-bibliography"},children:[{type:b,tag:f,props:{ariaHidden:r,href:"#bibcli---command-line-interface-to-manage-bibliography",tabIndex:s},children:[{type:b,tag:q,props:{className:[t,u]},children:[]}]},{type:a,value:eX}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:" After working with references and citations in latex for a while, with\nmultiple files, I noticed that some things need improvement.  First of all, you\nneed to use some way to store your bibliography "},{type:b,tag:v,props:{},children:[{type:a,value:"outside"}]},{type:a,value:" of the\ntex file. For instance, using bibtex.  Second, you probably want some\nbibliography package, such as biblatex or natbib.  Third, you need some way to\nmanage your bibliography entries and verify if they are correct."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For the third option, I didn't found a good enough option, "},{type:b,tag:v,props:{},children:[{type:a,value:"for my\nneeds"}]},{type:a,value:" (light, easy, command line). Thinking about this problem, I\ndecided to create a tool exactly for that. Some things I want(ed) are to read\nfrom tex file to discover the keys; add the entries reading a bib file; and\nobtaining from the internet the correct bibliography entry."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The tool is still in very early development, but is already available for\nchecking on "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fbibcli"},children:[{type:a,value:aL}]},{type:a,value:w}]}]},dir:C,path:"\u002Fblog\u002F2014-06-04-bibcli",extension:D,createdAt:F,updatedAt:F,bodyPlainText:"\n# BibCLI - Command Line Interface to Manage Bibliography\n\n\u003Cp\u003E After working with references and citations in latex for a while, with\nmultiple files, I noticed that some things need improvement.  First of all, you\nneed to use some way to store your bibliography \u003Cstrong\u003Eoutside\u003C\u002Fstrong\u003E of the\ntex file. For instance, using bibtex.  Second, you probably want some\nbibliography package, such as biblatex or natbib.  Third, you need some way to\nmanage your bibliography entries and verify if they are correct.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFor the third option, I didn't found a good enough option, \u003Cstrong\u003Efor my\nneeds\u003C\u002Fstrong\u003E (light, easy, command line). Thinking about this problem, I\ndecided to create a tool exactly for that. Some things I want(ed) are to read\nfrom tex file to discover the keys; add the entries reading a bib file; and\nobtaining from the internet the correct bibliography entry.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe tool is still in very early development, but is already available for\nchecking on \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fbibcli\"\u003Egithub\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n"}]}],fetch:{},mutations:void 0}}("text","element","\n","p","code","a","div","nuxt-content-highlight","pre","line-numbers","language-text","nofollow","noopener","noreferrer","_blank","li","span","true",-1,"icon","icon-link","strong",".","h1","2022-12-23T14:23:08.544Z","ul","root","img","\u002Fblog",".md","","2022-12-23T14:23:08.540Z","em","julia",2,"h2","work"," and ","here",", ","Julia","nuxt-link","\u002F","center","aqui","token","GitHub",3,"h3"," e ","optimization",";","cutest","hess_op","td"," ","CUTEst.jl","h4","python","nlesc","I worked on this blog post working for eScience Center.\nCo-authored by Faruk Diblen.","Check the blog post ","blog","punctuation","test","https:\u002F\u002Fjulialang.org","JuMP","MathProgNLPModel","ADNLPModel","hprod","hr","fun","presentation","latex","workshop","ol",".travis.yml","tech","tr","pkg","linux","ufpr","lcon","ucon","nnzh","meta","c","NLPModels.jl","Run tests","README.md","LICENSE.md","github","http:\u002F\u002Fgithub.com","Introduction","General Information","Using my site as a starting point","http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fblog","install","Edit:","http:\u002F\u002Fwww.julialang.org","\u002Fhome","\u002Fboot","2014-11-22","Can Python with Julia be faster than low-level code?","Speed up your Python code using Julia","How to call Julia code from Python","cffinit: NOW is the time to get more recognition for your software!","Migração do site para Franklin.jl","site","vantagens","Vantagens","desvantagens","Desvantagens","gambiarra","Gambiarra","conclusão","Conclusão","https:\u002F\u002Fjuliasmoothoptimizers.github.io","#gambiarra","key","atrule","name",":","Koch snowflakes for the holidays","fractal","\u002Fblog\u002Fkoch\u002Fkoch-large.png","Package Development in Julia 1.0 using the REPL","dev","test\u002Fruntests.jl","Optimizing the Dollar Game from Numberphile","jump","the-model","The model","My experience in the JuMP-dev annual workshop","https:\u002F\u002Fgithub.com\u002FJuliaOpt\u002FJuMP.jl","Introduction to Performance Profile","performance","profile","performance-profile","Performance Profile","example","Example","implementations","Implementations","references","References","blockquote","JuliaSmoothOptimizers","Installing Gurobi 7 on Linux","getting-the-license","Getting the LICENSE","gurobi-with-jump-in-julia","Gurobi with JuMP in Julia","bash",".bashrc","Minicurso de Julia no IX Simpósio de Análise Numérica e Otimização da UFPR","tutorial","NLPModels.jl and CUTEst.jl: Constrained optimization","nlpmodels","https:\u002F\u002Fabelsiqueira.github.io%7B%7Blocal_prefix%7D%7Dnlpmodelsjl-cutestjl-and-other-nonlinear-optimization-packages-on-julia\u002F","this\npost","nnzj","hess_coord","SimpleNLPModel","Inf","The function ","has_bounds",": Returns ","bound_constrained","NLPModels.jl, CUTEst.jl and other Nonlinear Optimization Packages on Julia","OptimizationProblems.jl","https:\u002F\u002Fgithub.com\u002Foptimizers\u002Fhomebrew-cutest"," or ","Julia Fractal on Julia","Advent of Code 2016 in Julia","Apresentação de Julia no SMNE","JuliaBox","A quasi-solution to my bib problem","bibtex","bibliography","Oficina de Ferramentas Computacionais na UFPR, 01 de Agosto de 2016","swc","Software Carpentry","Long time away","Games for Programmers","programming","light-bot","Light-Bot","tile-factory","Tile Factory","manufactoria","Manufactoria","other-games","Other games","Test Driven Development in Julia","tests","Tests","next-test","Next test","all","#julia","%7B%7Blocal_prefix%7D%7D\u002Fautomated-testing\u002F","Folder ","src","Base.Test","@test","LaTeX tools for revision","Minicurso de Julia para Otimização","https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fjulia-workshop","http:\u002F\u002Fjupyter.org\u002F","http:\u002F\u002Fjulialang.org\u002F"," e o\n","este post","Ubuntu graphic interface stopped working","ubuntu","Automated testing","the-math","The math","the-code","The code","online-testing","Online testing","coverage","Coverage","improving-to-a-module","Improving to a module","A ","VIII Simpósio de Análise Numérica e Otimização - Minicurso de Julia","Professional site and blog for researchers, professors and students","summary","Summary:","introduction","general-information","using-my-site-as-a-starting-point","mine","https:\u002F\u002Fjekyllrb.com\u002F","Jekyll","http:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fabelsiqueira.github.io",",\n","#introduction","#general-information","#using-my-site-as-a-starting-point","#work-page---easy-way","Work page - Easy way","#work-page---hard-way","Work page - Hard way","#blog-page---easy-way","Blog page - Easy way","#blog-page---hard-way","Blog page - Hard way","#both---hard-way","Both - Hard way","_posts","about.md","{% raw %}{{{% endraw %}","{% raw %}}}{% endraw %}","Create a "," account.","Go to ","Fork the page, finding the button that says fork and clicking on it.","http:\u002F\u002Fgithub.com\u002Fyouruser\u002Fabelsiqueira.github.io","Edit the file ","_config.yml"," and change all pertinent information. Don't leave\nanything with my user.\n","You can edit and create files directly on GitHub, but you can't preview\nyour site before publishing. To edit, click on edit, make your modifications\nand then on the bottom of the page click on commit. To create, click on the +\nbutton, and do similar steps.","http:\u002F\u002Fyouruser.github.io"," and\n","_includes\u002Fheader.html","Apresentação no Poincaré - 2015","New computer at work","arch","Installing CUTEst and CUTEst.jl","CUTEst","Resultado da Oficina de Ferramentas Computacionais Para Pesquisadores"," -","Workshop de Ferramentas Computacionais - Maio de 2015","2015-04-13","git","Bash","Git","http:\u002F\u002Frgaiacs.com\u002F",".\n",")."," : ","Coffee Break","A CLI Reminder - Remind","remind","Apresentação no VII Simpósio de Análise Numérica e Otimização - UFPR","Conheça o ","perprof-py","http:\u002F\u002Fccpforge.cse.rl.ac.uk\u002Fgf\u002Fproject\u002Fcutest\u002Fwiki\u002F","A Study in Julia","fortran","Selecting a Subgroup of CUTEst Problems According to Specific Criteria","https:\u002F\u002Fgithub.com\u002Fabelsiqueira\u002Fcute-problem-chooser","sifdecode","ARGLALE","Instalando o Ubuntu 14.10 no Sony Vaio (Problemas com o SSD)","swap","libata.force=noncq","libata","CUTEst Com Matlab","mex","th","ShareLaTeX e o básico do cabeçalho","http:\u002F\u002Fen.wikibooks.org\u002Fwiki\u002FLaTeX","Mudando de HD","Instalação da Impressora no DMAT-UFPR","SiCLIPoD - Um Gerenciador de Podcasts Simples em Linha de Comando","The End of Fortran","Caminho Acadêmico","http:\u002F\u002Fwww.unicamp.br","UNICAMP","http:\u002F\u002Fwww.ime.unicamp.br\u002F~chico","Francisco de Assis Magalhães Gomes Neto","Academic Path","perprof-py&#58 A Performance Profile Package for Python","Jogos de Tabuleiro","2014-06-04","BibCLI - Command Line Interface to Manage Bibliography")));