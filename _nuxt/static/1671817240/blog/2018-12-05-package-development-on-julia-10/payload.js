__NUXT_JSONP__("/blog/2018-12-05-package-development-on-julia-10", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){return {data:[{page:{slug:"2018-12-05-package-development-on-julia-10",title:l,date:"2018-12-05",tags:["julia",k,"test",m],toc:[],body:{type:"root",children:[{type:b,tag:"h1",props:{id:"package-development-in-julia-10-using-the-repl"},children:[{type:b,tag:"a",props:{ariaHidden:"true",href:"#package-development-in-julia-10-using-the-repl",tabIndex:-1},children:[{type:b,tag:"span",props:{className:["icon","icon-link"]},children:[]}]},{type:a,value:l}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"This is a quick post on package development in Julia 1.0. Let me know if you're\ninterested in more, and what."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Suppose you're developing a package - say, "},{type:b,tag:d,props:{},children:[{type:a,value:"MyPackage.jl"}]},{type:a,value:" - whether from scratch, or\nupdating from Julia 0.6.\nFirst, and foremost, you need to be able to run and test it.\nOn Julia 1.0, this is one possible way, while using the REPL."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:"Choose a folder to develop it and create the necessary files"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"You'll need"}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"- MyPackage.jl\u002F\n  - src\u002F\n    - MyPackage.jl\n  - test\u002F\n    - runtests.jl\n  - README.md (eventually)\n  - LICENSE.md (eventually)\n  - .travis.yml (eventually)\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The file "},{type:b,tag:d,props:{},children:[{type:a,value:"src\u002FMyPackage.jl"}]},{type:a,value:" is the file included by Julia when you enter\n"},{type:b,tag:d,props:{},children:[{type:a,value:"Using MyPackage"}]},{type:a,value:". "},{type:b,tag:d,props:{},children:[{type:a,value:"test\u002Fruntests.jl"}]},{type:a,value:" is what is run to test your package. It is\nrequired if you intend to publish your package, but most important, you need to test\nyour package before trying to publish it. README gives information about your package,\nLICENSE gives information about its license, and .travis.yml defines the online testing\nwith continuous integration by Travis. These are usual, but not require when you're\nstarting to develop your package."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"For instance, consider the following files"}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"# src\u002FMyPackage.jl\nmodule MyPackage\n\nexport pi_approximation\n\nfunction pi_approximation()\n  return 22.0 \u002F 7.0\nend\n\nend # module\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"# test\u002Fruntests.jl\nusing MyPackage, Test\n\nfunction tests()\n  @testset \"Subset of tests\" begin\n    @test pi_approximation() ≈ pi atol=1e-2\n  end\nend\n\ntests()\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:"Open the REPL and add your package under the development version"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:"em",props:{},children:[{type:a,value:"I assume Linux, but this will work with minor modifications on OSX and Windows."}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"On the terminal, enter julia to open the REPL"}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"julia\u003E\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Enter "},{type:b,tag:d,props:{},children:[{type:a,value:k}]},{type:a,value:" mode by pressing "},{type:b,tag:d,props:{},children:[{type:a,value:"]"}]},{type:a,value:o}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"(v1.0) pkg\u003E\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Inform "},{type:b,tag:d,props:{},children:[{type:a,value:k}]},{type:a,value:" that your package folder exists and is under development with "},{type:b,tag:d,props:{},children:[{type:a,value:m}]},{type:a,value:o}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"(v1.0) pkg\u003E dev SOME_PATH\u002FMyPackage.jl\n\n[ Info: Assigning UUID XXXXXX to MyPackage\n Resolving package versions...\n  Updating `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FProject.toml`\n  [XXX] + MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  Updating `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FManifest.toml`\n  [XXX] + MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Check that you can see your package"}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"(v1.0) pkg\u003E status\n    Status `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FProject.toml`\n  ...\n  [XXX] MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  ...\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Check that everything passes according to your (evil) plan."}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"(v1.0) pkg\u003E test MyPackage\n   Testing MyPackage\n Resolving package versions...\n    Status `\u002Ftmp\u002FtmpO7CsSr\u002FManifest.toml`\n  [XXX] MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  ...\nTest Summary:   | Pass  Total\nSubset of tests |    1      1\n   Testing MyPackage tests passed\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"When you're done with your package, you can "},{type:b,tag:d,props:{},children:[{type:a,value:"rm MyPackage"}]},{type:a,value:" to remove your package from\nconsideration without deleting the code."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"If your package was already released, then it'll have a different version number. Other\ndifferences may apply."}]}]},dir:"\u002Fblog",path:"\u002Fblog\u002F2018-12-05-package-development-on-julia-10",extension:".md",createdAt:p,updatedAt:p,bodyPlainText:"\n# Package Development in Julia 1.0 using the REPL\n\nThis is a quick post on package development in Julia 1.0. Let me know if you're\ninterested in more, and what.\n\nSuppose you're developing a package - say, `MyPackage.jl` - whether from scratch, or\nupdating from Julia 0.6.\nFirst, and foremost, you need to be able to run and test it.\nOn Julia 1.0, this is one possible way, while using the REPL.\n\n**Choose a folder to develop it and create the necessary files**\n\nYou'll need\n\n```\n- MyPackage.jl\u002F\n  - src\u002F\n    - MyPackage.jl\n  - test\u002F\n    - runtests.jl\n  - README.md (eventually)\n  - LICENSE.md (eventually)\n  - .travis.yml (eventually)\n```\n\nThe file `src\u002FMyPackage.jl` is the file included by Julia when you enter\n`Using MyPackage`. `test\u002Fruntests.jl` is what is run to test your package. It is\nrequired if you intend to publish your package, but most important, you need to test\nyour package before trying to publish it. README gives information about your package,\nLICENSE gives information about its license, and .travis.yml defines the online testing\nwith continuous integration by Travis. These are usual, but not require when you're\nstarting to develop your package.\n\nFor instance, consider the following files\n\n```\n# src\u002FMyPackage.jl\nmodule MyPackage\n\nexport pi_approximation\n\nfunction pi_approximation()\n  return 22.0 \u002F 7.0\nend\n\nend # module\n```\n\n```\n# test\u002Fruntests.jl\nusing MyPackage, Test\n\nfunction tests()\n  @testset \"Subset of tests\" begin\n    @test pi_approximation() ≈ pi atol=1e-2\n  end\nend\n\ntests()\n```\n\n**Open the REPL and add your package under the development version**\n\n_I assume Linux, but this will work with minor modifications on OSX and Windows._\n\nOn the terminal, enter julia to open the REPL\n\n```\njulia\u003E\n```\n\nEnter `pkg` mode by pressing `]`.\n\n```\n(v1.0) pkg\u003E\n```\n\nInform `pkg` that your package folder exists and is under development with `dev`.\n\n```\n(v1.0) pkg\u003E dev SOME_PATH\u002FMyPackage.jl\n\n[ Info: Assigning UUID XXXXXX to MyPackage\n Resolving package versions...\n  Updating `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FProject.toml`\n  [XXX] + MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  Updating `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FManifest.toml`\n  [XXX] + MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n```\n\nCheck that you can see your package\n\n```\n(v1.0) pkg\u003E status\n    Status `~\u002F.julia\u002Fenvironments\u002Fv1.0\u002FProject.toml`\n  ...\n  [XXX] MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  ...\n```\n\nCheck that everything passes according to your (evil) plan.\n\n```\n(v1.0) pkg\u003E test MyPackage\n   Testing MyPackage\n Resolving package versions...\n    Status `\u002Ftmp\u002FtmpO7CsSr\u002FManifest.toml`\n  [XXX] MyPackage v0.0.0 [`SOME_PATH\u002FMyPackage.jl`]\n  ...\nTest Summary:   | Pass  Total\nSubset of tests |    1      1\n   Testing MyPackage tests passed\n```\n\nWhen you're done with your package, you can `rm MyPackage` to remove your package from\nconsideration without deleting the code.\n\nIf your package was already released, then it'll have a different version number. Other\ndifferences may apply.\n"},prev:{slug:"2018-12-12-koch-snowflakes-for-the-holidays",title:"Koch snowflakes for the holidays"},next:{slug:"2018-09-04-the-dollar-game-from-numberphile",title:"Optimizing the Dollar Game from Numberphile"}}],fetch:{},mutations:void 0}}("text","element","\n","code","p","div","nuxt-content-highlight","pre","language-text","line-numbers","pkg","Package Development in Julia 1.0 using the REPL","dev","strong",".","2022-12-23T17:39:35.597Z")));